var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AddressFormComponent.html",[0,0.151,1,0.682]],["body/components/AddressFormComponent.html",[0,0.211,1,1.047,2,1.076,3,0.201,4,0.174,5,1.152,6,0.796,7,0.796,8,0.796,9,0.149,10,5.317,11,4.19,12,1.666,13,0.937,14,1.265,15,1.911,16,0.796,17,3.991,18,3.991,19,1.779,20,1.549,21,1.479,22,2.094,23,1.076,24,3.121,25,1.076,26,2.655,27,0.256,28,0.596,29,4.69,30,0.873,31,3.421,32,5.141,33,5.141,34,2.094,35,1.387,36,3.991,37,2.961,38,2.834,39,2.961,40,3.121,41,0.603,42,2.045,43,2.425,44,2.227,45,1.36,46,3.991,47,0.812,48,0.027,49,0.768,50,0.531,51,0.812,52,2.655,53,2.757,54,3.421,55,2.757,56,1.245,57,1.374,58,2.757,59,2.328,60,2.757,61,2.757,62,3.991,63,3.019,64,2.757,65,2.213,66,2.328,67,0.684,68,1.882,69,2.655,70,2.757,71,0.346,72,1.3,73,1.047,74,1.3,75,1.047,76,0.912,77,2.045,78,0.201,79,0.378,80,0.694,81,0.977,82,0.796,83,2.757,84,2.412,85,1.076,86,2.328,87,2.757,88,3.991,89,2.328,90,3.991,91,0.937,92,3.37,93,2.757,94,1.834,95,2.757,96,3.421,97,2.757,98,3.991,99,2.834,100,2.213,101,3.991,102,2.757,103,3.991,104,2.757,105,3.991,106,2.757,107,2.757,108,2.328,109,2.757,110,2.328,111,2.757,112,2.757,113,0.796,114,1.834,115,2.757,116,1.834,117,2.757,118,1.526,119,2.757,120,0.852,121,2.757,122,1.834,123,1.834,124,1.834,125,1.834,126,3.37,127,3.148,128,3.814,129,3.37,130,1.589,131,1.406,132,1.552,133,0.912,134,1.32,135,2.045,136,1.207,137,2.412,138,1.882,139,2.015,140,2.045,141,1.882,142,2.209,143,1.834,144,1.834,145,1.526,146,1.526,147,1.526,148,0.852,149,2.961,150,2.961,151,2.209,152,2.045,153,1.047,154,2.045,155,1.414,156,1.207,157,0.647,158,1.152,159,1.152,160,0.796,161,1.484,162,0.796,163,1.354,164,0.603,165,0.796,166,0.561,167,0.744,168,0.796,169,0.561,170,0.744,171,0.647,172,0.521,173,0.796,174,0.561,175,0.796,176,0.603,177,0.603,178,1.152,179,0.561,180,1.207,181,0.521,182,0.521,183,0.796,184,0.561,185,0.647,186,0.796,187,0.603,188,0.796,189,0.561,190,0.796,191,0.561,192,0.796,193,0.796,194,0.561,195,0.694,196,0.796,197,0.796,198,0.796,199,0.011,200,0.015,201,0.011]],["title/modules/AngularMaterialModule.html",[202,1.58,203,2.025]],["body/modules/AngularMaterialModule.html",[3,0.336,4,0.292,9,0.249,48,0.026,67,0.706,71,0.579,78,0.336,79,0.633,199,0.018,200,0.022,201,0.018,203,3.403,204,2.176,205,4.614,206,4.614,207,3.403,208,6.078,209,6.078,210,6.078,211,6.078,212,6.078,213,6.078,214,6.078,215,6.078,216,6.078,217,6.078,218,6.078,219,6.078,220,6.078,221,6.078,222,6.078,223,6.078,224,6.078,225,6.078,226,6.078,227,6.078,228,4.178,229,6.078,230,5.631,231,5.631,232,2.176,233,3.07,234,2.553,235,2.553,236,3.423,237,3.896]],["title/components/AppComponent.html",[0,0.151,164,0.733]],["body/components/AppComponent.html",[0,0.202,1,0.518,2,1.015,3,0.185,4,0.161,5,0.734,6,0.734,7,0.734,8,0.734,9,0.137,13,0.884,14,1.207,15,1.824,16,0.734,19,1.758,20,1.531,21,0.597,23,1.015,25,1.015,27,0.349,28,0.562,30,0.823,34,2.015,35,1.334,41,0.557,45,1.354,47,0.518,48,0.027,49,0.668,50,0.511,51,0.518,56,1.155,57,1.329,67,0.736,71,0.319,75,1.7,76,0.841,78,0.185,79,0.349,80,0.947,81,0.901,82,1.525,85,0.686,91,0.597,130,1.768,132,1.481,133,1.637,134,1.245,136,1.114,138,2.047,139,1.871,141,2.112,151,2.478,153,2.277,155,1.333,157,0.597,158,1.086,159,1.086,160,0.734,161,1.429,162,0.734,163,1.293,164,1.083,165,0.734,166,0.518,167,0.686,168,0.734,169,0.518,170,0.686,171,0.597,172,0.481,173,0.734,174,0.518,175,0.734,176,0.557,177,0.557,178,1.086,179,0.518,180,1.379,181,0.481,182,0.481,183,0.734,184,0.518,185,1.051,186,0.734,187,0.557,188,0.734,189,0.518,190,0.734,191,0.518,192,0.734,193,0.734,194,0.518,195,0.64,196,0.734,197,0.734,198,0.734,199,0.01,200,0.014,201,0.01,232,1.2,238,2.148,239,2.791,240,4.477,241,3.762,242,3.781,243,4.477,244,2.478,245,5.997,246,3.781,247,4.178,248,4.947,249,4.947,250,1.692,251,1.637,252,5.72,253,2.916,254,2.543,255,1.647,256,2.543,257,2.543,258,2.543,259,2.543,260,2.543,261,2.543,262,3.322,263,1.163,264,1.086,265,3.762,266,3.762,267,3.762,268,3.762,269,2.543,270,2.543,271,4.477,272,1.408,273,3.762,274,2.543,275,1.637,276,2.543,277,1.537,278,2.543,279,1.887,280,2.543,281,2.148,282,2.148,283,2.148,284,1.114,285,2.543,286,2.543,287,2.543,288,3.177,289,1.692,290,2.148,291,2.148,292,2.148,293,2.522,294,1.245,295,2.543,296,2.148,297,2.148,298,2.543,299,4.947,300,3.762,301,3.165,302,3.762,303,3.762,304,3.292,305,3.762,306,3.762,307,2.791,308,3.177,309,3.762,310,3.762,311,2.273,312,3.762,313,3.762,314,3.762,315,3.322,316,2.543,317,2.543,318,4.477,319,3.762,320,2.543,321,2.543,322,2.791,323,2.543,324,2.543,325,2.706,326,4.477,327,2.543,328,2.543,329,2.521,330,2.543,331,1.692,332,1.887,333,2.543,334,2.543,335,1.96,336,1.297,337,2.148,338,2.543,339,3.177,340,3.762,341,2.543,342,2.543,343,1.692,344,2.543,345,2.543,346,2.522,347,3.177,348,1.887,349,2.791,350,1.408,351,1.887,352,1.887,353,2.543,354,2.148,355,3.322,356,4.947,357,2.543,358,2.543,359,2.543,360,2.543,361,2.543,362,1.537,363,2.543,364,1.297,365,1.537,366,2.503,367,2.543,368,2.148,369,1.887,370,2.543,371,2.148,372,2.148,373,2.148,374,2.543]],["title/modules/AppModule.html",[202,1.58,375,2.229]],["body/modules/AppModule.html",[1,1.196,3,0.221,4,0.192,9,0.164,11,2.022,20,0.714,48,0.027,67,0.865,71,0.381,73,1.154,78,0.221,79,0.417,148,1.53,157,0.714,164,1.418,166,1.196,169,1.196,171,1.005,172,1.111,174,1.196,176,1.348,179,1.255,181,1.111,182,1.111,184,1.196,185,1.005,187,1.286,189,1.196,191,1.196,194,1.196,195,0.765,199,0.012,200,0.016,201,0.012,202,1.433,203,3.55,204,1.433,207,2.585,233,2.846,234,1.682,235,2.74,236,2.254,281,2.566,294,1.005,375,4.65,376,1.836,377,3.673,378,3.768,379,2.566,380,2.566,381,2.566,382,2.566,383,2.566,384,3.55,385,3.55,386,3.174,387,2.254,388,1.836,389,3.038,390,4.278,391,4.278,392,3.612,393,2.254,394,4.278,395,3.038,396,3.612,397,4.278,398,4.278,399,2.022,400,3.038,401,3.038,402,2.585,403,2.254,404,4.537,405,1.549,406,2.022,407,3.038,408,2.566,409,2.566,410,2.022,411,2.566,412,3.038,413,3.038,414,2.254,415,2.254,416,3.174,417,3.038,418,4.278,419,1.836,420,4.18,421,3.038,422,3.038,423,2.022,424,3.612,425,3.612,426,1.836,427,2.254,428,3.612,429,3.612,430,3.612,431,3.174,432,1.836,433,3.174,434,3.612,435,2.566,436,2.022,437,2.566,438,3.038,439,3.038,440,2.022,441,2.566,442,3.038,443,2.022,444,2.566,445,2.022,446,2.566,447,2.022,448,2.566,449,3.038,450,3.038,451,3.038,452,3.038,453,2.566,454,3.038,455,3.038,456,3.038]],["title/modules/AppRoutingModule.html",[202,1.58,384,2.025]],["body/modules/AppRoutingModule.html",[0,0.305,3,0.303,4,0.264,9,0.225,48,0.027,67,0.849,71,0.523,78,0.303,79,0.572,91,0.979,113,1.204,166,1.076,172,1.098,174,1.076,182,1.154,184,1.076,185,1.242,189,1.076,191,1.076,194,1.076,195,1.05,199,0.016,200,0.02,201,0.016,204,1.967,207,3.195,233,2.774,234,2.307,235,2.307,284,1.826,301,2.307,384,3.195,402,3.195,403,3.094,404,4.465,405,2.126,406,2.774,408,3.521,409,3.521,410,2.774,411,3.521,435,3.521,436,2.774,437,3.521,440,2.774,441,3.521,444,3.521,445,2.774,446,3.521,447,2.774,448,3.521,457,4.17,458,4.17,459,3.863,460,5.287,461,3.863,462,4.17,463,5.719,464,4.17,465,4.17,466,3.521,467,2.774,468,4.17,469,4.17,470,3.521,471,3.521,472,4.17,473,4.17]],["title/guards/AuthGard.html",[461,2.229,474,2.486]],["body/guards/AuthGard.html",[3,0.322,4,0.28,9,0.239,13,1.038,27,0.41,28,0.66,30,1.2,41,0.967,45,1.2,47,1.117,48,0.027,49,0.819,50,0.566,51,1.117,56,0.967,67,0.804,71,0.554,76,1.463,78,0.322,79,0.606,81,1.566,82,1.277,113,1.277,120,1.695,199,0.017,200,0.021,201,0.017,250,2.942,251,2.063,253,3.377,255,2.402,262,4.425,284,1.936,289,2.942,294,1.463,461,3.65,463,4.632,466,5.413,475,4.421,476,3.733,477,4.626,478,4.421,479,4.421,480,6.533,481,5.964,482,6.235,483,4.421,484,2.587,485,4.632,486,4.421,487,2.796,488,2.447,489,4.425,490,4.421]],["title/interceptors/AuthInterceptor.html",[385,2.025,491,2.829]],["body/interceptors/AuthInterceptor.html",[3,0.339,4,0.295,9,0.252,13,1.094,27,0.432,30,1.24,41,1.24,45,1.24,47,1.153,48,0.027,49,0.846,50,0.585,51,1.153,56,1.02,67,0.765,71,0.584,78,0.339,79,0.639,82,1.345,113,1.636,120,1.44,199,0.018,200,0.022,201,0.018,251,2.101,385,3.423,399,3.1,487,2.888,488,2.578,492,4.659,493,3.934,494,5.665,495,4.659,496,4.659,497,5.665,498,5.665,499,6.35,500,4.529,501,6.35,502,4.659,503,4.659,504,5.665,505,5.665,506,4.659,507,4.659,508,4.659,509,4.659,510,4.659,511,4.659,512,4.659]],["title/modules/AuthModule.html",[202,1.58,513,2.486]],["body/modules/AuthModule.html",[3,0.386,4,0.335,9,0.286,48,0.026,67,0.664,71,0.664,78,0.386,79,0.727,199,0.02,200,0.023,201,0.02,204,2.5,207,3.694,234,2.932,513,4.536,514,5.299]],["title/injectables/AuthenticateService.html",[251,1.108,487,1.708]],["body/injectables/AuthenticateService.html",[3,0.154,4,0.134,9,0.114,27,0.196,28,0.488,30,0.715,41,0.462,45,1.463,47,1.159,48,0.027,49,0.85,50,0.6,51,1.159,56,1.41,57,1.491,67,0.646,71,0.265,75,0.802,76,0.699,78,0.154,79,0.29,80,1.396,81,0.748,82,1.969,113,1.644,118,1.809,120,1.858,153,0.802,177,0.462,199,0.008,200,0.013,201,0.008,239,1.567,251,1.081,253,2.737,263,1.591,264,1.486,275,1.883,284,0.925,294,1.883,399,1.406,414,1.567,415,3.819,467,2.175,471,2.76,484,1.542,487,1.667,489,2.967,500,2.425,515,1.567,516,1.784,517,3.999,518,3.377,519,3.999,520,3.999,521,4.393,522,3.377,523,3.999,524,4.501,525,4.501,526,3.269,527,2.76,528,4.501,529,4.501,530,3.801,531,4.501,532,3.34,533,4.501,534,3.269,535,4.501,536,4.501,537,4.501,538,4.501,539,2.76,540,3.269,541,3.269,542,1.784,543,3.801,544,3.999,545,4.501,546,3.269,547,2.76,548,2.113,549,3.269,550,3.801,551,2.113,552,3.269,553,2.113,554,3.269,555,2.534,556,2.113,557,3.269,558,2.113,559,2.661,560,2.113,561,2.113,562,5.368,563,2.113,564,2.113,565,2.113,566,2.113,567,3.269,568,2.113,569,5.693,570,2.113,571,1.412,572,2.113,573,2.113,574,3.269,575,2.113,576,2.113,577,2.76,578,2.113,579,2.76,580,3.269,581,2.72,582,2.113,583,3.269,584,1.323,585,2.113,586,3.269,587,4.533,588,2.113,589,2.76,590,2.113,591,2.113,592,2.113,593,3.269,594,2.113,595,3.999,596,2.113,597,2.416,598,2.113,599,2.113,600,1.277,601,1.784,602,2.113,603,2.113,604,2.113,605,2.113,606,2.76,607,2.113,608,2.113,609,2.113,610,2.113,611,2.113,612,2.113,613,4.501,614,4.501,615,4.111,616,2.113,617,2.113,618,2.113,619,3.269,620,2.76,621,4.347,622,5.816,623,5.148,624,2.744,625,2.744,626,4.911,627,2.76,628,2.113,629,3.999,630,3.269,631,2.113,632,1.784,633,2.113,634,2.113,635,2.113,636,1.784,637,3.269,638,3.269,639,2.113,640,2.113,641,2.113,642,2.113,643,2.113,644,2.113,645,2.113,646,2.113,647,1.784,648,2.113,649,1.169,650,2.113,651,2.76,652,2.113,653,2.113,654,2.113,655,2.113,656,2.113,657,2.113,658,2.113,659,3.269,660,2.113,661,2.113,662,3.269,663,2.113,664,2.113,665,2.113,666,2.113,667,2.113,668,2.113,669,2.113,670,2.113,671,2.76,672,2.425,673,1.431,674,3.269,675,2.113,676,2.113]],["title/interfaces/Category.html",[677,0.904,678,2.229]],["body/interfaces/Category.html",[0,0.191,3,0.218,4,0.19,9,0.266,12,1.813,13,0.705,14,1.143,15,1.727,19,0.809,20,0.705,22,1.222,23,0.809,24,1.996,25,0.809,26,1.996,27,0.278,28,0.633,31,1.996,34,1.222,35,0.809,38,1.813,40,1.996,43,2,44,1.867,48,0.027,49,0.448,50,0.438,52,1.996,54,3.271,65,2,67,0.77,68,2,69,2.821,71,0.376,72,1.415,73,1.139,74,1.415,78,0.308,79,0.411,80,1.514,81,1.063,82,0.866,84,2.562,85,0.809,91,0.705,94,1.996,96,4.156,99,3.406,100,2.837,113,1.42,120,1.31,122,1.996,123,1.996,124,1.996,125,1.996,148,0.927,180,1.412,181,0.567,199,0.011,200,0.016,201,0.011,264,1.736,277,1.813,419,1.813,426,1.813,571,1.467,581,2.971,677,0.809,678,3.271,679,1.415,680,1.53,681,5.078,682,4.152,683,2.533,684,2.533,685,2.533,686,2.724,687,1.996,688,1.813,689,2.226,690,1.727,691,1.53,692,2.821,693,2.533,694,2.533,695,2.533,696,3.58,697,3.58,698,3.58,699,2.533,700,2.533,701,2.562,702,2.533,703,2.562,704,2.533,705,2.226,706,2.533,707,2.562,708,2.533,709,2.533,710,2.533,711,3.58,712,2.533,713,3.58,714,3.145,715,2.533,716,2.533,717,2.533,718,2.533,719,2.533,720,2.533,721,4.152,722,3.58,723,2.533,724,2.533,725,2.533,726,2.533,727,2.226,728,2.533,729,3.58,730,2.533,731,2.533,732,2.533,733,2.533,734,3.58,735,2.226,736,3.58,737,2.226,738,2.533,739,3.58,740,2.533,741,2.533,742,3.58,743,2.533,744,2.533,745,3.58,746,2.533,747,4.152,748,2.533,749,2.533,750,2.533,751,3.58,752,2.533,753,2.533,754,3.145,755,2.533,756,3.58,757,2.533,758,3.145,759,2.533,760,3.58,761,2.533,762,3.145,763,2.533,764,3.145,765,2.533,766,2.226,767,2.533,768,2.226,769,2.533,770,3.58,771,2.533,772,2.533,773,2.533,774,2.533,775,2.533,776,2.533,777,2.533,778,2.533,779,2.533,780,2.533,781,2.533,782,2.533,783,2.533,784,2.533,785,2.533,786,2.533,787,2.533,788,1.813,789,2.533,790,1.813,791,2.533,792,1.813,793,2.533,794,2.533,795,2.533,796,2.533,797,1.813,798,2.533,799,2.533,800,2.533]],["title/components/ChangePasswordComponent.html",[0,0.151,166,0.682]],["body/components/ChangePasswordComponent.html",[0,0.212,1,0.565,2,1.082,3,0.202,4,0.176,5,1.158,6,0.801,7,0.801,8,0.801,9,0.15,13,0.942,14,1.27,16,0.801,19,1.78,20,1.55,21,0.652,22,1.634,23,1.082,25,1.082,27,0.257,28,0.599,30,0.878,35,1.391,41,0.878,43,2.689,45,1.394,47,0.565,48,0.027,49,0.703,50,0.621,51,0.565,56,1.03,57,1.01,65,2.773,67,0.686,71,0.348,72,1.309,73,1.054,75,1.788,76,0.918,78,0.202,79,0.381,82,0.801,85,0.749,91,0.652,100,1.892,113,1.158,120,1.455,127,2.219,130,1.594,131,1.415,132,1.327,133,1.327,134,1.706,136,1.215,138,1.944,139,1.938,145,1.536,146,1.536,147,1.536,148,0.858,155,0.983,156,1.215,157,0.652,158,1.158,159,1.158,160,0.801,161,1.489,162,0.801,163,1.36,164,0.607,165,0.801,166,1.05,167,1.623,168,0.801,169,0.565,170,0.749,171,0.652,172,0.525,173,0.801,174,0.565,175,0.801,176,0.607,177,0.607,178,1.158,179,0.565,180,1.211,181,0.525,182,0.525,183,0.801,184,0.565,185,0.652,186,0.801,187,0.607,188,0.801,189,0.565,190,0.801,191,0.565,192,0.801,193,0.801,194,0.565,195,0.699,196,0.801,197,0.801,198,0.801,199,0.011,200,0.015,201,0.011,251,1.81,255,2.395,263,0.858,264,0.801,275,1.327,294,0.918,308,4.814,311,3.117,329,2.101,335,1.215,343,1.847,362,1.677,436,4.279,484,1.309,488,1.536,550,3.386,555,1.131,571,0.652,584,0.918,600,1.677,624,1.309,625,1.309,649,1.536,673,1.215,801,5.43,802,2.344,803,2.423,804,4.708,805,4.01,806,2.401,807,4.708,808,5.157,809,5.157,810,2.433,811,3.133,812,3.493,813,5.157,814,5.157,815,2.669,816,3.133,817,2.059,818,4.01,819,2.776,820,2.776,821,2.776,822,2.776,823,2.776,824,2.776,825,2.776,826,2.776,827,2.776,828,2.059,829,2.776,830,2.776,831,2.776,832,2.059,833,1.847,834,1.847,835,2.669,836,1.847,837,1.536,838,1.847,839,3.133,840,2.776,841,2.975,842,2.776,843,2.776,844,2.344,845,2.776,846,2.776,847,2.776,848,2.776,849,2.776,850,4.01,851,3.827,852,3.827,853,3.827,854,5.157,855,3.386,856,3.117,857,2.059,858,3.911,859,1.847,860,1.847,861,1.847,862,1.677,863,2.423,864,2.423,865,2.606,866,1.847,867,2.059,868,2.059]],["title/components/ContactPersonFormComponent.html",[0,0.151,169,0.682]],["body/components/ContactPersonFormComponent.html",[0,0.207,1,0.541,2,1.048,3,0.193,4,0.168,5,1.122,6,0.768,7,0.768,8,0.768,9,0.144,12,1.607,13,0.913,14,1.239,15,1.872,16,0.768,19,1.77,20,1.541,21,0.625,22,2.059,23,1.048,24,3.057,25,1.048,26,2.587,27,0.247,28,0.58,30,0.851,31,3.363,34,2.059,35,1.363,37,2.884,38,2.777,39,2.884,40,3.057,41,0.582,42,1.973,43,2.384,44,2.202,45,1.367,47,0.791,48,0.027,49,0.755,50,0.522,51,0.791,52,2.587,54,3.057,56,1.229,57,1.354,59,2.246,65,2.167,66,3.283,67,0.634,68,1.834,69,2.587,71,0.333,72,1.254,73,1.01,74,1.254,78,0.193,79,0.365,80,0.67,81,0.942,82,0.768,84,2.349,85,1.048,86,2.246,91,0.913,94,1.77,96,3.363,99,2.777,100,2.167,113,0.768,120,0.822,122,1.77,123,1.77,124,1.77,125,1.77,127,2.797,128,3.75,130,1.562,131,1.356,132,1.52,133,0.88,134,1.286,135,1.973,136,1.164,137,2.349,138,1.858,139,1.99,140,1.973,141,1.834,142,2.151,143,1.77,144,1.77,145,1.472,146,1.472,147,1.472,148,0.822,149,2.884,150,2.884,151,2.151,152,1.973,153,1.01,154,1.973,155,1.377,156,1.164,157,0.625,158,1.122,159,1.122,160,0.768,161,1.459,162,0.768,163,1.327,164,0.582,165,0.768,166,0.541,167,0.717,168,0.768,169,1.029,170,1.604,171,1.615,172,0.503,173,0.768,174,0.541,175,0.768,176,0.582,177,0.582,178,1.122,179,0.541,180,1.187,181,0.503,182,0.503,183,0.768,184,0.541,185,0.625,186,0.768,187,0.582,188,0.768,189,0.541,190,0.768,191,0.541,192,0.768,193,0.768,194,0.541,195,0.67,196,0.768,197,0.768,198,0.768,199,0.01,200,0.015,201,0.01,263,0.822,264,0.768,275,1.286,423,4.205,735,1.973,737,2.884,869,5.336,870,4.595,871,4.595,872,5.055,873,5.055,874,3.888,875,2.659,876,2.659,877,2.659,878,2.659,879,2.659,880,2.659,881,3.888,882,2.976,883,2.659,884,1.973,885,2.659,886,1.973,887,2.659,888,2.659,889,3.888,890,2.246,891,3.888,892,3.283,893,2.659,894,2.659,895,3.888,896,2.659,897,3.888,898,2.659,899,3.888,900,1.973,901,2.659,902,2.659,903,2.246,904,2.659,905,2.246,906,2.659,907,2.246,908,1.973,909,2.659,910,1.973,911,2.659,912,1.973,913,2.659,914,2.659,915,3.888,916,2.587,917,2.587,918,3.888,919,3.283]],["title/components/CreateEventComponent.html",[0,0.151,172,0.633]],["body/components/CreateEventComponent.html",[0,0.189,1,0.466,2,0.937,3,0.166,4,0.145,5,0.66,6,0.66,7,0.66,8,0.66,9,0.124,13,0.816,14,1.133,15,1.711,16,0.66,19,1.729,20,1.505,21,0.537,23,0.937,25,0.937,27,0.212,28,0.519,30,0.76,34,1.911,35,1.265,38,2.538,41,0.76,44,2.017,45,1.419,47,1.081,48,0.027,49,0.849,50,0.646,51,1.081,56,1.245,57,1.467,67,0.731,71,0.287,74,1.079,75,1.595,76,0.756,78,0.166,79,0.314,80,0.875,82,1.534,84,2.538,85,0.937,89,1.931,91,1.438,92,1.931,99,1.382,130,1.642,132,1.39,133,1.39,134,1.149,138,1.552,153,1.319,155,1.231,157,0.537,158,1.003,159,1.003,160,0.66,161,1.355,162,0.66,163,1.213,164,0.5,165,0.66,166,0.466,167,0.617,168,0.66,169,0.466,170,0.617,171,0.537,172,0.887,173,0.66,174,0.466,175,0.66,176,0.5,177,0.5,178,1.003,179,0.466,180,1.395,181,0.432,182,0.432,183,0.66,184,0.466,185,0.537,186,0.66,187,0.5,188,0.66,189,0.466,190,0.66,191,0.466,192,0.66,193,0.66,194,0.466,195,0.576,196,0.66,197,0.66,198,0.66,199,0.009,200,0.013,201,0.009,232,1.079,235,1.922,236,2.577,237,2.933,244,2.325,253,2.815,263,1.074,264,1.003,275,1.149,284,1.001,293,2.392,294,1.552,329,2.317,331,1.522,335,1.001,336,1.771,337,2.933,346,1.166,347,1.931,350,1.266,362,1.382,368,2.933,402,3.94,477,3.117,484,1.079,532,1.697,571,1.297,581,2.099,584,0.756,620,1.931,624,1.079,625,1.079,649,2.596,673,1.001,688,1.382,689,1.697,705,3.117,714,1.697,810,2.213,811,2.795,832,1.697,834,1.522,835,2.312,836,1.522,837,1.266,838,2.312,856,2.835,862,1.382,863,2.099,864,2.099,865,2.596,866,1.522,867,1.697,868,1.697,890,1.931,892,1.931,920,5.505,921,1.931,922,4.201,923,3.474,924,4.201,925,3.474,926,4.662,927,4.201,928,4.201,929,4.201,930,4.201,931,3.474,932,4.691,933,3.474,934,3.474,935,3.474,936,3.474,937,1.697,938,3.962,939,3.474,940,3.474,941,2.287,942,2.287,943,3.474,944,2.287,945,4.486,946,3.474,947,2.287,948,3.474,949,2.287,950,2.287,951,2.287,952,3.474,953,4.691,954,2.287,955,2.287,956,2.287,957,2.287,958,2.287,959,2.287,960,2.287,961,2.287,962,2.287,963,2.287,964,2.287,965,2.933,966,2.287,967,2.287,968,1.931,969,1.931,970,1.931,971,2.287,972,1.697,973,1.931,974,2.287,975,2.287,976,3.474,977,2.287,978,2.287,979,2.287,980,2.287,981,2.287,982,4.201,983,2.287,984,2.287,985,2.287,986,3.474,987,1.931,988,1.931,989,4.486,990,4.691,991,4.201,992,2.287,993,2.933,994,2.287,995,1.522,996,2.287,997,1.931,998,1.697,999,2.287,1000,2.287,1001,2.287,1002,2.287,1003,2.287,1004,2.287,1005,1.697,1006,1.697]],["title/components/EditUsersComponent.html",[0,0.151,174,0.682]],["body/components/EditUsersComponent.html",[0,0.212,1,0.564,2,1.08,3,0.202,4,0.175,5,0.8,6,0.8,7,0.8,8,0.8,9,0.15,13,0.941,14,1.268,16,0.8,19,1.78,20,1.55,21,0.651,23,1.08,25,1.08,27,0.257,28,0.598,30,0.876,35,1.39,41,0.606,45,1.379,47,0.958,48,0.027,49,0.816,50,0.621,51,0.958,56,1.128,57,1.297,67,0.714,71,0.347,75,1.786,78,0.202,79,0.38,80,0.697,81,0.981,85,1.622,91,0.651,130,1.592,132,0.916,133,0.916,134,0.916,138,0.916,139,0.981,142,2.216,148,0.856,155,0.981,157,0.651,158,1.156,159,1.156,160,0.8,161,1.488,162,0.8,163,1.358,164,0.606,165,0.8,166,0.564,167,0.747,168,0.8,169,0.564,170,0.747,171,0.651,172,0.524,173,0.8,174,1.049,175,0.8,176,0.606,177,0.606,178,1.156,179,0.564,180,1.21,181,0.524,182,0.524,183,0.8,184,0.564,185,0.651,186,0.8,187,0.606,188,0.8,189,0.564,190,0.8,191,0.564,192,0.8,193,0.8,194,0.564,195,0.697,196,0.8,197,0.8,198,0.8,199,0.011,200,0.015,201,0.011,232,1.307,244,2.603,250,1.843,251,1.705,255,1.753,263,0.856,264,1.358,272,1.533,275,1.325,277,1.674,293,2.627,294,1.325,307,3.823,311,3.114,315,2.055,325,3.303,329,2.227,335,2.256,336,2.787,350,1.533,364,1.412,445,4.239,484,1.307,488,1.533,521,2.055,522,3.382,527,3.382,539,3.382,555,1.128,559,3.429,571,1.338,577,3.382,579,2.339,584,0.916,600,1.674,624,1.307,625,1.307,649,1.533,673,1.213,810,2.431,833,1.843,834,1.843,835,2.665,836,1.843,837,1.533,838,1.843,855,4.351,856,3.114,865,1.533,916,3.429,917,3.429,969,2.339,970,2.339,1007,5.379,1008,2.339,1009,4.703,1010,4.005,1011,3.972,1012,3.972,1013,3.49,1014,4.351,1015,4.351,1016,4.005,1017,4.005,1018,2.77,1019,2.77,1020,2.77,1021,2.77,1022,3.972,1023,2.77,1024,4.351,1025,2.77,1026,2.77,1027,2.77,1028,3.972,1029,3.382,1030,2.77,1031,2.77,1032,2.77,1033,2.77,1034,2.77,1035,2.77,1036,2.339,1037,2.339,1038,2.339,1039,2.339,1040,2.77,1041,2.77,1042,4.005,1043,4.005,1044,4.005,1045,4.005,1046,2.055,1047,2.971,1048,2.842,1049,4.616,1050,2.339,1051,2.339,1052,2.77,1053,2.77,1054,2.77,1055,2.77,1056,2.77,1057,2.055,1058,4.351,1059,3.382,1060,2.971,1061,2.339]],["title/components/EmailDialogComponent.html",[0,0.151,176,0.733]],["body/components/EmailDialogComponent.html",[0,0.23,1,0.654,2,1.199,3,0.234,4,0.203,5,0.928,6,0.928,7,0.928,8,0.928,9,0.174,13,1.044,14,1.376,16,0.928,19,1.815,20,1.58,21,0.755,22,1.309,23,1.199,25,1.199,27,0.298,28,0.664,30,0.973,35,1.485,41,0.973,43,2.892,44,2.09,45,1.341,47,0.905,48,0.027,49,0.822,50,0.597,51,0.905,56,1.116,57,1.284,65,2.406,67,0.75,68,1.515,71,0.403,72,1.515,73,1.22,74,1.515,78,0.234,79,0.441,80,0.809,82,1.284,85,0.866,91,0.755,100,1.515,130,1.374,134,1.471,155,1.576,156,1.407,157,0.755,158,1.284,159,1.284,160,0.928,161,1.59,162,0.928,163,1.473,164,0.703,165,0.928,166,0.654,167,0.866,168,0.928,169,0.654,170,0.866,171,0.755,172,0.607,173,0.928,174,0.654,175,0.928,176,1.205,177,1.367,178,1.284,179,0.654,180,1.404,181,0.607,182,0.607,183,0.928,184,0.654,185,0.755,186,0.928,187,0.703,188,0.928,189,0.654,190,0.928,191,0.654,192,0.928,193,0.928,194,0.654,195,0.809,196,0.928,197,0.928,198,0.928,199,0.012,200,0.017,201,0.012,228,2.384,232,1.515,272,1.778,336,1.638,443,4.158,690,2.243,691,1.638,806,3.048,839,2.138,995,2.138,1062,4.636,1063,2.384,1064,3.3,1065,4.307,1066,3.756,1067,4.289,1068,4.085,1069,5.101,1070,4.649,1071,4.447,1072,2.713,1073,4.881,1074,5.101,1075,4.447,1076,3.213,1077,3.213,1078,4.447,1079,5.101,1080,5.505,1081,3.213,1082,2.713,1083,3.756,1084,3.213,1085,2.713,1086,2.713,1087,2.713,1088,3.213,1089,3.213,1090,3.213,1091,3.756,1092,3.213,1093,2.713,1094,2.713,1095,2.713,1096,3.213,1097,3.213,1098,4.447,1099,4.447,1100,4.447,1101,4.447,1102,3.3,1103,4.447,1104,4.447,1105,4.447,1106,4.447,1107,2.384,1108,3.756,1109,2.713,1110,2.713]],["title/components/EventDialogComponent.html",[0,0.151,179,0.682]],["body/components/EventDialogComponent.html",[0,0.235,1,0.682,2,1.234,3,0.244,4,0.212,5,0.967,6,0.967,7,0.967,8,0.967,9,0.181,13,1.075,14,1.406,16,0.967,19,1.824,20,1.588,21,0.786,23,1.234,25,1.234,27,0.311,28,0.683,30,1.001,35,1.511,41,0.733,45,1.325,47,0.682,48,0.027,49,0.778,50,0.606,51,0.682,56,1.001,57,1.152,67,0.654,68,1.579,71,0.42,78,0.244,79,0.459,80,0.843,85,0.903,91,0.786,132,1.108,137,2.023,141,2.158,153,1.737,157,0.786,158,1.321,159,1.321,160,0.967,161,1.618,162,0.967,163,1.505,164,0.733,165,0.967,166,0.682,167,0.903,168,0.967,169,0.682,170,0.903,171,0.786,172,0.633,173,0.967,174,0.682,175,0.967,176,0.733,177,0.733,178,1.321,179,1.141,180,1.567,181,0.633,182,0.633,183,0.967,184,0.682,185,1.075,186,0.967,187,0.733,188,0.967,189,0.682,190,0.967,191,0.682,192,0.967,193,0.967,194,0.682,195,0.843,196,0.967,197,0.967,198,0.967,199,0.013,200,0.018,201,0.013,228,2.484,272,1.853,325,2.023,336,2.333,364,1.707,365,2.023,366,2.228,369,3.395,432,3.746,680,3.16,690,2.123,691,1.707,806,2.991,919,3.864,995,2.228,1063,2.484,1064,3.395,1065,4.402,1066,3.864,1067,4.493,1068,4.157,1070,4.731,1072,2.827,1073,4.953,1083,3.864,1085,2.827,1086,2.827,1087,2.827,1091,2.827,1102,3.395,1107,2.484,1108,3.864,1109,2.827,1110,2.827,1111,3.348,1112,3.348,1113,3.348,1114,3.348,1115,3.348,1116,2.827,1117,2.827,1118,4.576,1119,4.731,1120,4.576,1121,5.603,1122,4.576,1123,4.576,1124,4.576,1125,4.576,1126,4.576,1127,4.576,1128,4.576,1129,4.576,1130,4.576,1131,4.576,1132,4.576,1133,4.576,1134,4.576,1135,4.576,1136,4.576,1137,4.576,1138,3.348,1139,2.484,1140,3.348]],["title/components/EventFormComponent.html",[0,0.151,181,0.633]],["body/components/EventFormComponent.html",[0,0.171,1,0.396,2,0.826,3,0.141,4,0.123,5,0.885,6,0.561,7,0.561,8,0.561,9,0.205,12,1.175,13,0.72,14,1.023,15,1.545,16,0.561,19,1.68,20,1.463,21,0.457,22,1.753,23,0.826,24,2.523,25,0.826,26,2.039,27,0.18,28,0.457,30,0.67,31,2.863,34,1.753,35,1.16,37,2.273,38,2.291,39,2.273,40,2.523,41,0.425,42,1.443,43,2.03,44,1.976,45,1.4,47,0.876,48,0.027,49,0.777,50,0.608,51,0.876,52,2.039,54,2.863,56,1.214,57,1.358,65,1.789,67,0.676,68,1.445,69,2.039,71,0.244,72,0.917,73,0.738,74,0.917,78,0.223,79,0.267,80,1.397,81,0.689,82,0.561,84,1.851,85,0.826,91,0.72,94,1.294,96,3.693,99,2.829,100,2.455,113,1.095,120,0.947,122,1.294,123,1.294,124,1.294,125,1.294,127,3.26,128,4.371,130,1.33,131,0.991,132,1.254,133,0.643,134,1.014,135,1.443,136,0.851,137,1.851,138,1.645,139,1.762,140,1.443,141,1.445,142,1.696,143,1.294,144,1.294,145,1.076,146,1.076,147,1.076,148,0.947,149,2.273,150,2.273,151,1.696,152,1.443,153,0.738,154,1.443,155,1.085,156,0.851,157,0.457,158,0.885,159,0.885,160,0.561,161,1.242,162,0.561,163,1.095,164,0.425,165,0.561,166,0.396,167,0.524,168,0.561,169,0.396,170,0.524,171,0.457,172,0.368,173,0.561,174,0.396,175,0.561,176,0.425,177,0.425,178,0.885,179,0.396,180,1.517,181,0.814,182,0.368,183,0.561,184,0.396,185,0.457,186,0.561,187,0.425,188,0.561,189,0.396,190,0.561,191,0.396,192,0.561,193,0.561,194,0.396,195,1.179,196,0.561,197,0.561,198,0.561,199,0.007,200,0.012,201,0.007,263,1.172,264,1.64,272,1.696,277,1.175,346,1.562,419,3.886,426,1.175,571,1.222,581,2.829,677,0.524,678,2.523,680,3.278,681,4.395,682,3.953,683,1.642,684,1.642,685,1.642,686,2.75,687,1.294,688,1.175,689,1.443,690,1.753,691,0.991,692,2.039,693,1.642,694,1.642,695,3.202,696,3.633,697,3.633,698,3.633,699,3.202,700,2.587,701,2.6,702,2.587,703,2.6,704,3.202,705,2.813,706,3.202,707,2.6,708,1.642,709,1.642,710,1.642,711,2.587,712,1.642,713,2.587,714,2.273,715,1.642,716,1.642,717,2.587,718,1.642,719,1.642,720,1.642,721,3.202,722,2.587,723,1.642,724,1.642,725,1.642,726,1.642,727,1.443,728,1.642,729,2.587,730,1.642,731,1.642,732,3.633,733,1.642,734,2.587,735,1.443,736,2.587,737,1.443,738,1.642,739,2.587,740,1.642,741,1.642,742,2.587,743,1.642,744,1.642,745,2.587,746,1.642,747,3.202,748,1.642,749,1.642,750,1.642,751,2.587,752,2.587,753,1.642,754,2.273,755,1.642,756,2.587,757,1.642,758,2.273,759,1.642,760,2.587,761,1.642,762,2.273,763,1.642,764,2.273,765,1.642,766,1.443,767,1.642,768,1.443,769,2.587,770,2.587,771,1.642,772,1.642,773,1.642,774,1.642,775,1.642,776,1.642,777,1.642,778,1.642,779,1.642,780,1.642,781,3.202,782,1.642,783,3.633,784,1.642,785,1.642,786,1.642,787,3.633,788,1.175,789,1.642,790,1.175,791,1.642,792,1.175,793,1.642,794,1.642,795,1.642,796,1.642,797,1.175,798,1.642,799,1.642,800,1.642,815,2.039,1119,2.587,1141,3.064,1142,3.064,1143,3.064,1144,3.064,1145,1.944,1146,1.944,1147,1.944,1148,1.944,1149,1.944,1150,1.944,1151,1.944,1152,1.944,1153,1.944,1154,1.944,1155,1.642,1156,1.944,1157,1.944,1158,1.944,1159,1.944,1160,1.944,1161,1.944,1162,1.944,1163,1.944,1164,1.944,1165,1.944,1166,2.587,1167,3.064,1168,2.587,1169,3.064,1170,2.273,1171,4.199,1172,4.973,1173,3.69,1174,2.587,1175,4.303,1176,2.587,1177,3.064,1178,3.064,1179,3.064]],["title/components/EventListComponent.html",[0,0.151,182,0.633]],["body/components/EventListComponent.html",[0,0.162,1,0.364,2,0.774,3,0.13,4,0.113,5,0.517,6,0.517,7,0.517,8,0.517,9,0.097,13,0.674,14,0.968,15,1.462,16,0.517,19,1.653,20,1.439,21,0.42,23,0.774,25,0.774,27,0.166,28,0.428,30,0.628,34,1.673,35,1.107,41,0.628,44,1.821,45,1.415,47,1.128,48,0.027,49,0.874,50,0.633,51,1.128,56,1.261,57,1.451,67,0.677,71,0.224,74,0.844,75,1.913,76,0.592,78,0.13,79,0.245,82,1.6,85,0.483,91,0.42,113,1.186,114,1.191,116,1.191,118,0.99,120,1.109,130,1.669,131,2.094,132,1.358,133,1.358,134,0.949,136,0.784,137,1.081,138,1.188,139,0.634,141,1.693,143,1.191,144,1.191,151,0.99,153,1.821,157,0.42,158,0.828,159,0.828,160,0.517,161,1.186,162,0.517,163,1.037,164,0.392,165,0.517,166,0.364,167,0.483,168,0.517,169,0.364,170,0.483,171,0.42,172,0.338,173,0.517,174,0.364,175,0.517,176,0.628,177,0.392,178,0.828,179,0.584,180,1.426,181,0.338,182,0.776,183,0.517,184,0.364,185,0.964,186,0.517,187,0.392,188,0.517,189,0.364,190,0.517,191,0.364,192,0.517,193,0.517,194,0.364,195,0.451,196,0.517,197,0.517,198,0.517,199,0.007,200,0.011,201,0.007,232,0.844,244,1.987,251,1.358,253,2.569,255,1.572,263,1.557,264,1.455,275,1.833,284,0.784,289,1.191,293,2.569,294,1.587,301,1.987,322,1.328,329,2.257,331,1.191,332,1.328,335,1.798,346,1.462,348,1.328,349,1.328,351,2.128,352,1.328,354,1.511,355,1.328,364,0.912,365,1.081,366,1.191,373,1.511,405,3.31,432,1.081,433,2.128,443,1.191,470,1.511,477,2.664,489,1.328,521,2.664,530,1.511,559,1.191,571,1.055,584,1.587,615,3.031,647,1.511,673,1.256,680,3.322,690,2.052,691,0.912,701,1.081,703,1.081,707,1.081,788,1.081,790,1.081,792,1.081,806,2.445,810,1.693,811,2.389,856,2.481,858,3.191,859,1.191,860,1.191,861,1.191,862,1.081,863,1.733,864,1.733,865,1.587,866,1.191,926,1.511,937,1.328,938,3.468,965,2.422,972,2.664,973,1.511,1005,1.328,1006,1.328,1024,2.422,1047,1.328,1048,1.733,1062,1.328,1064,3.334,1067,2.128,1068,2.128,1082,4.05,1093,2.422,1094,1.511,1095,1.511,1116,3.795,1139,1.328,1170,2.128,1180,1.328,1181,3.59,1182,2.869,1183,3.59,1184,3.59,1185,5.329,1186,3.59,1187,3.59,1188,4.254,1189,3.031,1190,2.422,1191,2.869,1192,2.869,1193,2.422,1194,2.869,1195,2.869,1196,2.869,1197,2.869,1198,2.422,1199,4.106,1200,2.869,1201,2.869,1202,1.79,1203,2.869,1204,1.79,1205,2.869,1206,1.79,1207,2.422,1208,1.79,1209,1.79,1210,1.79,1211,2.869,1212,1.79,1213,1.79,1214,2.869,1215,1.79,1216,2.869,1217,1.79,1218,2.869,1219,1.79,1220,2.869,1221,1.79,1222,1.79,1223,1.79,1224,1.79,1225,1.79,1226,2.389,1227,1.79,1228,1.79,1229,1.79,1230,1.79,1231,1.79,1232,1.79,1233,1.79,1234,1.79,1235,1.79,1236,1.79,1237,1.79,1238,1.511,1239,2.422,1240,2.869,1241,1.79,1242,1.79,1243,1.79,1244,3.59,1245,4.796,1246,1.79,1247,1.79,1248,1.79,1249,1.79,1250,1.79,1251,1.79,1252,1.79,1253,1.79,1254,1.79,1255,1.79,1256,3.031,1257,2.664,1258,2.664,1259,3.031,1260,3.59,1261,3.59,1262,4.106,1263,3.59,1264,4.106,1265,1.79,1266,1.79,1267,1.79,1268,1.79,1269,3.59,1270,1.79,1271,1.79,1272,1.511,1273,1.79,1274,1.79,1275,1.79,1276,1.79,1277,1.79,1278,2.869,1279,1.79,1280,1.79,1281,1.79,1282,1.79,1283,1.79,1284,1.79,1285,1.79,1286,1.79,1287,1.511,1288,1.511,1289,2.869,1290,2.869,1291,2.869,1292,2.869,1293,2.869,1294,2.422,1295,3.468,1296,3.468,1297,2.869,1298,2.869,1299,2.869,1300,2.869,1301,2.869,1302,2.869,1303,2.869,1304,2.869,1305,2.869,1306,1.79,1307,1.79,1308,1.79,1309,1.79,1310,2.664,1311,4.106,1312,1.79,1313,3.59,1314,2.869,1315,2.869,1316,2.869,1317,1.79,1318,1.511,1319,1.511,1320,1.79]],["title/components/EventListTableComponent.html",[0,0.151,184,0.682]],["body/components/EventListTableComponent.html",[0,0.19,1,0.47,2,0.943,3,0.168,4,0.146,5,0.666,6,0.666,7,0.666,8,0.666,9,0.125,13,0.821,14,1.139,16,0.666,19,1.731,20,1.507,21,0.542,22,0.94,23,0.943,25,0.943,27,0.214,28,0.522,30,0.765,35,1.271,41,0.765,44,2.024,45,1.395,47,0.86,48,0.027,49,0.756,50,0.633,51,0.86,56,1.166,57,1.275,67,0.732,71,0.289,74,1.088,75,1.923,76,0.763,78,0.168,79,0.316,80,0.581,81,0.817,85,0.622,91,0.542,113,1.361,118,1.277,120,0.713,126,3.98,130,1.647,132,0.763,133,0.763,134,1.157,138,0.763,139,0.817,142,1.935,148,0.713,153,0.876,155,1.239,156,1.01,157,0.542,158,1.01,159,1.01,160,0.666,161,1.361,162,0.666,163,1.219,164,0.505,165,0.666,166,0.47,167,0.622,168,0.666,169,0.47,170,0.622,171,0.542,172,0.436,173,0.666,174,0.47,175,0.666,176,0.505,177,0.505,178,1.01,179,0.47,180,1.441,181,0.436,182,0.436,183,0.666,184,0.959,185,1.615,186,0.666,187,0.505,188,0.666,189,0.47,190,0.666,191,0.47,192,0.666,193,0.666,194,0.47,195,1.275,196,0.666,197,0.666,198,0.666,199,0.009,200,0.013,201,0.009,232,1.088,263,1.305,264,1.462,272,1.277,275,1.157,277,1.394,293,1.783,294,0.763,315,1.712,325,3.221,329,2.063,335,2.063,336,2.718,346,2.153,350,1.277,364,1.176,405,1.176,406,1.535,447,4.271,484,1.65,500,1.712,555,0.94,571,1.252,584,1.397,624,1.088,625,1.088,671,1.948,673,1.01,680,3.273,690,0.94,691,1.176,810,2.223,937,1.712,972,1.712,1011,3.566,1012,3.566,1013,3.134,1014,3.98,1022,3.566,1028,3.566,1029,2.953,1036,1.948,1037,1.948,1046,3.134,1047,2.595,1048,2.848,1049,4.277,1050,1.948,1051,1.948,1057,1.712,1058,4.676,1059,2.953,1060,2.595,1061,1.948,1166,3.98,1168,3.98,1170,3.497,1171,4.817,1174,3.98,1176,3.98,1189,3.566,1190,3.98,1226,2.327,1238,3.98,1256,1.948,1257,1.712,1258,1.712,1321,1.948,1322,4.223,1323,3.497,1324,3.566,1325,3.566,1326,5.065,1327,3.497,1328,4.713,1329,4.713,1330,3.497,1331,3.497,1332,3.497,1333,2.307,1334,2.307,1335,2.307,1336,2.307,1337,2.307,1338,3.497,1339,3.497,1340,3.497,1341,3.497,1342,3.497,1343,2.307,1344,3.497,1345,2.307,1346,2.307,1347,2.307,1348,2.307,1349,2.307,1350,2.307,1351,2.307,1352,2.307,1353,2.307,1354,2.307,1355,2.307,1356,1.712,1357,2.307,1358,2.307,1359,2.307,1360,3.497,1361,2.307,1362,2.307,1363,2.307,1364,4.223,1365,4.713,1366,2.307,1367,2.307,1368,2.307,1369,2.307,1370,2.307,1371,1.948,1372,2.307,1373,2.307,1374,3.497,1375,2.307,1376,3.497,1377,2.307,1378,2.307,1379,2.307,1380,2.307,1381,2.307,1382,3.497,1383,3.497,1384,3.497,1385,3.497,1386,3.497,1387,3.497,1388,3.497,1389,3.497,1390,2.307,1391,2.307,1392,2.307,1393,2.307]],["title/modules/EventModule.html",[202,1.58,1394,2.229]],["body/modules/EventModule.html",[1,1.313,3,0.305,4,0.265,9,0.227,11,2.791,21,0.985,48,0.027,67,0.845,71,0.526,73,1.592,78,0.305,79,0.575,91,0.985,148,1.64,157,0.985,169,1.313,170,1.131,171,1.246,172,1.219,179,1.313,180,1.367,181,1.219,182,1.219,199,0.016,200,0.02,201,0.016,202,1.978,204,1.978,207,3.207,233,2.791,234,2.321,235,2.321,376,2.534,377,4.319,378,3.531,386,3.937,387,3.112,388,2.534,396,4.481,402,2.534,403,3.112,405,2.138,406,2.791,419,2.534,420,4.916,423,2.791,424,4.481,425,4.481,426,2.534,427,3.112,428,4.481,429,4.481,430,4.481,431,3.112,432,2.534,433,3.112,434,4.481,1394,4.599,1395,3.542,1396,4.194,1397,4.194]],["title/injectables/EventService.html",[44,1.272,487,1.708]],["body/injectables/EventService.html",[3,0.139,4,0.121,9,0.103,21,1.378,27,0.178,28,0.452,30,0.662,41,0.419,44,1.149,45,1.443,47,1.227,48,0.027,49,0.9,50,0.629,51,1.227,56,1.347,57,1.452,63,3.247,67,0.723,71,0.24,76,0.633,77,1.42,78,0.139,79,0.262,80,1.424,81,0.678,82,1.741,108,2.556,110,2.556,113,1.549,120,1.599,177,1.174,180,1.398,199,0.007,200,0.012,201,0.007,239,1.42,251,1.411,253,2.638,255,1.643,263,1.436,264,1.342,275,1.411,279,1.42,282,1.617,283,1.617,284,0.838,294,1.411,301,2.968,399,1.274,487,1.543,515,1.42,518,3.17,532,3.165,542,1.617,543,3.602,547,2.556,559,2.839,571,1.398,581,1.157,584,1.634,587,3.923,589,2.556,601,1.617,606,2.556,624,2.53,625,2.53,626,3.602,627,1.617,632,1.617,636,2.556,651,2.556,672,1.42,686,2.991,687,1.274,690,2.185,691,0.976,754,2.246,758,2.246,762,2.246,764,2.785,766,2.246,768,2.246,797,1.829,810,2.53,837,1.059,882,3.247,884,4.28,886,1.42,903,2.556,905,2.556,907,2.556,997,3.602,1185,4.663,1188,3.17,1193,2.556,1207,2.556,1239,2.556,1257,3.165,1258,3.165,1259,4.663,1272,3.17,1294,2.556,1324,3.17,1325,3.17,1371,3.602,1398,1.617,1399,3.754,1400,3.754,1401,3.754,1402,3.754,1403,3.754,1404,3.754,1405,3.754,1406,3.754,1407,3.754,1408,5.364,1409,3.027,1410,3.027,1411,3.027,1412,4.266,1413,3.027,1414,3.027,1415,3.027,1416,3.027,1417,3.027,1418,3.027,1419,3.027,1420,3.027,1421,3.027,1422,3.027,1423,3.027,1424,1.914,1425,3.027,1426,1.914,1427,3.027,1428,1.914,1429,1.914,1430,1.914,1431,3.027,1432,1.914,1433,1.914,1434,3.027,1435,1.914,1436,2.014,1437,3.027,1438,1.914,1439,3.027,1440,1.914,1441,1.914,1442,3.027,1443,1.914,1444,3.027,1445,1.914,1446,3.027,1447,5.364,1448,4.266,1449,1.914,1450,4.266,1451,3.027,1452,1.914,1453,3.027,1454,1.914,1455,1.914,1456,1.914,1457,1.914,1458,1.914,1459,3.754,1460,1.914,1461,1.914,1462,1.914,1463,1.914,1464,1.914,1465,1.914,1466,1.914,1467,1.914,1468,1.914,1469,1.914,1470,1.914,1471,1.914,1472,5.364,1473,3.754,1474,3.027,1475,1.914,1476,4.646,1477,4.646,1478,1.914,1479,1.914,1480,1.914,1481,1.914,1482,1.914,1483,1.914,1484,1.914,1485,1.914,1486,3.027,1487,1.914,1488,5.364,1489,4.266,1490,3.027,1491,3.027,1492,3.027,1493,3.027,1494,3.027,1495,3.027,1496,3.027,1497,3.027,1498,2.556,1499,1.914,1500,1.914,1501,1.914,1502,3.027,1503,3.027,1504,1.914,1505,1.914,1506,1.914,1507,1.914,1508,4.266,1509,3.027,1510,3.027,1511,3.027,1512,3.027,1513,3.027,1514,3.027,1515,3.027,1516,3.027,1517,3.027,1518,3.027,1519,3.027,1520,1.914,1521,3.027,1522,3.027,1523,3.027,1524,3.027,1525,3.027,1526,3.027,1527,3.027,1528,3.027,1529,3.027,1530,1.914,1531,3.027,1532,1.914,1533,1.914]],["title/components/HeaderComponent.html",[0,0.151,187,0.733]],["body/components/HeaderComponent.html",[0,0.236,1,0.687,2,1.241,3,0.246,4,0.213,5,0.975,6,0.975,7,0.975,8,0.975,9,0.182,13,1.081,14,1.412,15,2.132,16,0.975,19,1.826,20,1.59,21,0.793,23,1.241,25,1.241,27,0.313,28,0.687,30,1.007,34,2.29,35,1.516,41,0.739,45,1.384,47,0.937,48,0.027,49,0.839,50,0.58,51,0.937,56,1.23,57,1.415,67,0.656,68,1.593,71,0.423,75,1.987,76,1.117,78,0.246,79,0.463,80,1.159,82,1.512,85,0.911,91,0.793,130,1.043,133,1.117,138,1.86,139,1.63,141,1.593,157,0.793,158,1.329,159,1.329,160,0.975,161,1.623,162,0.975,163,1.512,164,0.739,165,0.975,166,0.687,167,0.911,168,0.975,169,0.687,170,0.911,171,0.793,172,0.638,173,0.975,174,0.687,175,0.975,176,0.739,177,0.739,178,1.329,179,0.687,180,1.426,181,0.638,182,0.638,183,0.975,184,0.687,185,0.793,186,0.975,187,1.23,188,0.975,189,0.687,190,0.975,191,0.687,192,1.512,193,0.975,194,0.687,195,0.85,196,0.975,197,0.975,198,0.975,199,0.013,200,0.018,201,0.013,242,4.42,246,4.42,247,4.747,250,2.246,251,1.946,255,2.461,263,1.043,264,0.975,275,1.522,279,2.505,288,3.886,289,2.246,290,2.851,291,2.851,292,2.851,296,2.851,297,2.851,301,2.547,304,3.062,329,2.473,335,2.015,339,2.851,346,2.346,350,1.868,351,2.505,352,2.505,364,1.721,365,2.04,388,2.781,467,3.062,806,2.346,998,2.505,1048,2.04,1057,2.505,1117,2.851,1310,3.414,1534,2.851,1535,5.235,1536,4.602,1537,4.602,1538,4.602,1539,3.376,1540,3.376,1541,3.376,1542,4.602,1543,5.235,1544,3.376,1545,3.376,1546,3.376,1547,3.886,1548,3.376]],["title/interfaces/IAddress.html",[63,1.854,677,0.904]],["body/interfaces/IAddress.html",[3,0.37,4,0.322,9,0.275,27,0.472,28,0.892,48,0.026,50,0.654,63,3.305,78,0.37,114,4.351,116,4.351,118,3.619,199,0.02,200,0.023,201,0.02,571,1.586,584,2.097,677,1.373,679,2.401,1549,4.299]],["title/interfaces/IContactPerson.html",[677,0.904,882,1.854]],["body/interfaces/IContactPerson.html",[3,0.37,4,0.322,9,0.275,27,0.472,28,0.892,48,0.026,50,0.654,78,0.37,199,0.02,200,0.023,201,0.02,571,1.621,677,1.373,679,2.401,882,3.305,908,4.851,910,4.851,912,4.851,1550,4.299]],["title/interfaces/IEvent.html",[677,0.904,686,1.708]],["body/interfaces/IEvent.html",[3,0.343,4,0.298,9,0.344,27,0.437,28,0.852,48,0.027,49,0.952,50,0.699,78,0.343,199,0.018,200,0.022,201,0.018,571,1.624,584,2.195,677,1.271,679,2.223,686,2.908,701,3.852,703,3.852,707,3.852,788,3.852,790,3.852,792,3.852,797,3.852,1551,3.98]],["title/interfaces/IMyEventRoot.html",[677,0.904,690,1.365]],["body/interfaces/IMyEventRoot.html",[3,0.304,4,0.264,9,0.33,21,1.435,27,0.387,28,0.79,48,0.027,49,0.912,50,0.715,63,2.311,67,0.729,77,3.098,78,0.304,114,2.778,116,2.778,118,2.311,199,0.016,200,0.02,201,0.016,571,1.644,584,2.227,673,2.675,677,1.126,679,1.97,686,2.129,687,2.778,690,2.156,701,3.691,703,3.691,707,3.691,788,3.691,790,3.691,792,3.691,797,3.691,882,2.311,884,4.532,886,3.098,908,3.098,910,3.098,912,3.098,1436,4.065,1552,3.526,1553,6.109,1554,6.109]],["title/components/LoginComponent.html",[0,0.151,189,0.682]],["body/components/LoginComponent.html",[0,0.211,1,0.558,2,1.072,3,0.199,4,0.173,5,1.147,6,0.791,7,0.791,8,0.791,9,0.148,13,0.933,14,1.261,15,1.904,16,0.791,19,1.777,20,1.548,21,0.644,22,1.619,23,1.072,25,1.072,27,0.254,28,0.593,30,0.87,34,2.089,35,1.383,41,0.6,43,2.678,45,1.425,47,0.558,48,0.027,49,0.698,50,0.619,51,0.558,56,1.191,57,1.291,65,2.762,67,0.712,71,0.344,72,1.293,73,1.041,75,1.775,76,0.907,78,0.199,79,0.376,81,0.971,82,0.791,85,0.739,91,0.644,100,1.875,113,0.791,120,1.445,127,2.199,130,1.585,131,1.397,132,0.907,133,0.907,134,1.547,136,1.2,138,1.878,139,1.928,145,1.517,146,1.517,147,1.517,148,0.847,155,0.971,156,1.2,157,0.644,158,1.147,159,1.147,160,0.791,161,1.48,162,0.791,163,1.35,164,0.6,165,0.791,166,0.558,167,0.739,168,0.791,169,0.558,170,0.739,171,0.644,172,0.518,173,0.791,174,0.558,175,0.791,176,0.6,177,1.122,178,1.147,179,0.558,180,1.204,181,0.518,182,0.518,183,0.791,184,0.558,185,0.644,186,0.791,187,0.6,188,0.791,189,1.044,190,0.791,191,0.558,192,0.791,193,0.791,194,0.558,195,0.69,196,0.791,197,0.791,198,0.791,199,0.011,200,0.015,201,0.011,244,2.587,251,1.801,253,2.985,255,2.383,263,0.847,264,0.791,275,1.547,284,1.2,293,2.026,294,1.315,304,2.644,311,2.401,329,1.619,343,1.824,362,1.656,467,2.644,484,1.293,488,1.517,555,1.904,571,0.644,584,0.907,600,1.656,621,4.33,624,1.293,625,1.293,649,1.517,673,1.2,803,1.656,806,2.383,810,1.293,812,3.469,815,2.644,816,3.111,817,2.034,828,2.034,833,1.824,837,1.517,839,3.111,841,2.034,844,2.315,851,3.804,852,2.949,853,3.804,857,2.034,858,3.777,859,1.824,860,1.824,861,1.824,862,1.656,863,2.401,864,2.401,865,2.199,900,2.034,916,3.412,917,3.412,1013,3.469,1015,4.33,1038,2.315,1039,2.315,1555,2.315,1556,4.675,1557,3.974,1558,4.33,1559,4.33,1560,4.675,1561,5.127,1562,5.127,1563,3.974,1564,2.741,1565,2.741,1566,2.741,1567,2.741,1568,2.741,1569,2.741,1570,2.741,1571,2.741,1572,2.741,1573,2.741,1574,2.741,1575,2.741,1576,2.741,1577,2.315,1578,2.741,1579,2.741,1580,2.741,1581,2.741,1582,3.974,1583,2.741,1584,2.315,1585,2.315,1586,2.315,1587,2.741,1588,2.315,1589,2.315,1590,2.741,1591,2.741,1592,4.33,1593,4.33,1594,3.356,1595,2.949,1596,2.949,1597,3.974,1598,3.974]],["title/components/SignUpComponent.html",[0,0.151,191,0.682]],["body/components/SignUpComponent.html",[0,0.204,1,0.527,2,1.028,3,0.188,4,0.164,5,1.101,6,0.748,7,0.748,8,0.748,9,0.14,13,0.895,14,1.22,15,1.843,16,0.748,19,1.763,20,1.535,21,0.608,22,1.553,23,1.028,25,1.028,27,0.24,28,0.569,30,0.834,34,2.033,35,1.346,41,0.567,43,2.625,45,1.412,47,0.527,48,0.027,49,0.675,50,0.622,51,0.527,56,1.092,57,1.257,65,2.714,67,0.667,71,0.325,72,1.221,73,0.983,75,2.02,76,0.857,78,0.188,79,0.355,81,0.917,85,0.698,91,0.608,100,1.798,113,0.748,120,1.178,127,2.11,130,1.644,131,1.32,132,1.497,133,1.497,134,1.651,136,1.134,138,1.903,139,1.884,145,1.433,146,1.433,147,1.433,148,0.8,155,0.917,156,1.134,157,0.608,158,1.101,159,1.101,160,0.748,161,1.441,162,0.748,163,1.306,164,0.567,165,0.748,166,0.527,167,0.698,168,0.748,169,0.527,170,0.698,171,0.608,172,0.49,173,0.748,174,0.527,175,0.748,176,0.567,177,1.092,178,1.101,179,0.527,180,1.172,181,0.49,182,0.49,183,0.748,184,0.527,185,0.608,186,0.748,187,0.567,188,0.748,189,0.527,190,0.748,191,1.016,192,1.704,193,0.748,194,0.527,195,0.652,196,0.748,197,0.748,198,0.748,199,0.01,200,0.015,201,0.01,244,2.504,251,1.76,255,2.329,263,1.178,264,1.101,275,1.76,293,2.307,294,0.857,304,2.537,307,2.829,311,2.304,329,2.033,331,1.723,335,1.134,343,1.723,362,1.565,410,4.323,484,1.221,488,1.433,555,1.843,571,0.608,584,0.857,600,1.565,624,1.221,625,1.221,649,1.433,673,1.134,803,1.565,806,2.307,810,2.354,811,3.011,812,3.357,815,2.537,816,3.011,817,1.921,828,1.921,832,1.921,833,1.723,834,1.723,835,2.537,836,1.723,837,1.433,838,1.723,839,3.011,841,1.921,851,3.703,852,2.829,853,3.703,856,3.016,857,1.921,858,3.828,859,1.723,860,1.723,861,1.723,862,1.565,863,2.304,864,2.304,865,2.504,866,1.723,867,1.921,868,1.921,900,1.921,916,3.321,917,3.321,988,2.187,1173,2.829,1547,3.219,1558,4.214,1559,4.214,1577,2.187,1584,2.187,1585,2.187,1586,2.187,1588,2.187,1589,2.187,1592,3.219,1593,3.219,1594,3.219,1595,2.829,1596,2.829,1599,5.486,1600,2.187,1601,4.525,1602,3.812,1603,4.525,1604,4.525,1605,4.991,1606,4.991,1607,3.812,1608,2.589,1609,2.589,1610,2.589,1611,2.589,1612,2.589,1613,2.589,1614,2.589,1615,2.589,1616,2.589,1617,2.589,1618,2.589,1619,2.589,1620,2.589,1621,2.589,1622,2.589,1623,2.589,1624,3.812,1625,2.589,1626,2.589,1627,2.589,1628,2.589,1629,2.589,1630,3.812,1631,3.812]],["title/components/StartSiteComponent.html",[0,0.151,194,0.682]],["body/components/StartSiteComponent.html",[0,0.179,1,0.424,2,0.872,3,0.152,4,0.132,5,0.602,6,0.602,7,0.602,8,0.602,9,0.113,13,0.759,14,1.069,16,0.602,19,1.701,20,1.481,21,0.489,22,1.82,23,0.872,25,0.872,27,0.193,30,0.708,35,1.205,41,0.867,45,0.867,47,0.424,48,0.027,49,0.592,50,0.215,51,0.424,56,0.708,57,0.814,67,0.261,68,0.983,71,0.261,78,0.152,79,0.286,80,1.125,85,0.562,91,0.489,129,2.731,130,1.381,132,1.6,133,1.311,134,1.311,136,0.912,138,1.311,139,1.146,141,1.525,142,2.194,148,1.225,151,1.79,155,1.713,156,1.956,157,0.489,158,1.144,159,0.934,160,0.602,161,1.478,162,0.602,163,1.144,164,0.456,165,0.602,166,0.424,167,1.205,168,0.602,169,0.424,170,0.562,171,0.489,172,0.394,173,0.602,174,0.424,175,0.602,176,0.456,177,0.456,178,0.934,179,0.424,180,1.049,181,0.394,182,0.394,183,0.602,184,0.424,185,0.489,186,0.602,187,0.456,188,0.602,189,0.424,190,0.602,191,0.424,192,0.602,193,0.602,194,0.91,195,1.39,196,1.144,197,0.602,198,0.602,199,0.008,200,0.012,201,0.008,301,1.79,322,3.315,325,1.954,329,2.473,332,1.546,335,2.241,336,2.954,348,1.546,349,2.399,350,1.153,355,1.546,364,2.278,365,1.954,366,2.973,369,1.546,371,1.759,372,1.759,440,2.973,816,2.152,993,3.347,995,2.152,998,2.399,1005,1.546,1006,1.546,1048,1.954,1060,1.546,1102,4.299,1107,3.315,1139,1.546,1173,4.299,1198,2.731,1295,2.731,1296,2.731,1318,2.731,1319,3.347,1498,2.731,1595,2.399,1596,2.399,1632,3.773,1633,1.759,1634,3.964,1635,3.234,1636,2.083,1637,2.083,1638,3.234,1639,3.964,1640,2.083,1641,2.083,1642,2.083,1643,3.234,1644,2.083,1645,5.119,1646,6.258,1647,3.234,1648,3.234,1649,3.234,1650,4.468,1651,3.234,1652,4.837,1653,3.234,1654,3.234,1655,3.234,1656,3.234,1657,6.141,1658,3.234,1659,5.119,1660,4.468,1661,4.468,1662,5.992,1663,5.521,1664,4.468,1665,4.468,1666,4.468,1667,3.234,1668,6.495,1669,3.234,1670,5.119,1671,5.521,1672,4.468,1673,3.234,1674,4.468,1675,3.234,1676,5.521,1677,4.468,1678,5.794,1679,4.468,1680,6.141,1681,3.234,1682,3.234,1683,3.234,1684,3.234,1685,3.234,1686,3.234,1687,5.119,1688,3.234,1689,3.234,1690,4.468,1691,3.234,1692,3.234,1693,3.234,1694,3.234,1695,3.234,1696,4.468,1697,3.234,1698,3.234,1699,3.234,1700,3.234,1701,3.234,1702,3.234,1703,3.234,1704,5.119,1705,3.234,1706,3.234,1707,3.234,1708,4.468,1709,3.234,1710,3.234,1711,3.234,1712,3.234,1713,3.234,1714,3.234,1715,3.234,1716,3.234,1717,3.234,1718,3.234,1719,3.234,1720,4.468,1721,4.468,1722,3.234,1723,3.234,1724,4.468,1725,3.234,1726,3.234,1727,3.234,1728,3.234,1729,3.234,1730,3.234,1731,3.234,1732,3.234,1733,3.234,1734,3.234,1735,3.234,1736,3.234,1737,3.234,1738,3.234,1739,3.234,1740,3.234,1741,3.234,1742,3.234,1743,3.234,1744,3.234,1745,4.468,1746,3.234,1747,3.234,1748,3.234,1749,3.234,1750,3.234,1751,3.234,1752,3.234,1753,3.234,1754,4.468,1755,3.234,1756,3.234,1757,3.234,1758,3.234,1759,3.234,1760,3.234,1761,3.234,1762,3.234,1763,3.234,1764,3.234,1765,3.234,1766,3.234,1767,3.234,1768,3.234,1769,3.234,1770,3.234,1771,3.234,1772,2.083,1773,2.083,1774,2.083,1775,2.083,1776,3.234,1777,3.234,1778,3.964,1779,2.083,1780,2.083,1781,2.083,1782,3.234,1783,2.083,1784,3.964,1785,5.521,1786,4.468,1787,2.083,1788,2.083,1789,2.083,1790,2.083,1791,2.083,1792,2.083,1793,2.083]],["title/interfaces/User.html",[555,1.365,677,0.904]],["body/interfaces/User.html",[3,0.369,4,0.321,9,0.274,27,0.47,28,0.89,48,0.026,50,0.615,78,0.434,177,1.457,199,0.019,200,0.023,201,0.019,555,2.428,571,1.62,597,3.066,677,1.607,679,2.393,803,4.024,1436,3.376,1794,3.764]],["title/interfaces/UserWithID.html",[597,2.025,677,0.904]],["body/interfaces/UserWithID.html",[3,0.365,4,0.317,9,0.271,27,0.465,28,0.883,48,0.026,50,0.65,78,0.431,177,1.452,199,0.019,200,0.023,201,0.019,555,2.041,571,1.631,597,3.576,677,1.596,679,2.364,803,4.011,1436,4.329,1794,3.718]],["title/coverage.html",[1795,3.865]],["body/coverage.html",[0,0.306,1,0.763,9,0.202,10,3.165,11,2.494,12,3.544,44,1.423,48,0.027,50,0.387,63,2.074,80,0.944,153,2.665,164,0.82,166,0.763,169,0.763,171,1.159,172,0.709,174,0.763,176,0.82,179,0.763,181,0.709,182,0.709,184,0.763,185,1.159,187,0.82,189,0.763,191,0.763,194,0.763,199,0.014,200,0.019,201,0.014,238,3.165,251,1.24,385,2.265,402,2.265,405,2.813,410,2.494,416,2.781,419,2.982,423,2.494,432,2.265,436,2.494,440,2.494,443,2.494,445,2.494,447,2.494,461,2.494,474,2.781,476,3.165,487,2.516,491,3.165,493,3.165,516,3.165,555,1.527,597,2.265,677,1.72,678,2.494,680,3.252,686,1.911,688,2.265,690,1.527,692,2.494,801,3.165,802,3.165,869,3.165,882,2.074,920,3.165,921,3.165,1007,3.165,1008,3.165,1046,2.781,1062,2.781,1063,3.662,1180,4.094,1226,2.494,1287,4.952,1321,3.165,1356,2.781,1398,3.165,1534,3.165,1549,3.165,1550,3.165,1551,3.165,1552,3.165,1555,3.165,1599,3.165,1600,3.165,1632,3.165,1633,3.165,1794,3.662,1795,3.165,1796,3.748,1797,3.748,1798,3.748,1799,3.748,1800,5.518,1801,5.864,1802,3.748,1803,5.864,1804,4.935,1805,3.165,1806,6.379,1807,4.935,1808,3.748,1809,3.748,1810,3.748,1811,3.748,1812,3.748,1813,3.748,1814,3.748,1815,3.748,1816,3.165,1817,3.748,1818,3.165,1819,3.165,1820,5.518,1821,3.165,1822,3.165,1823,4.168,1824,3.165,1825,3.748]],["title/dependencies.html",[376,2.436,1826,2.795]],["body/dependencies.html",[48,0.027,71,0.589,73,1.783,76,1.554,148,1.759,199,0.018,200,0.022,201,0.018,232,2.216,284,2.057,376,2.839,378,4.237,392,4.807,393,4.224,414,3.485,415,4.224,426,2.839,427,3.485,431,3.485,968,3.967,1827,4.698,1828,6.769,1829,4.698,1830,5.693,1831,4.698,1832,4.698,1833,4.698,1834,4.698,1835,4.698,1836,3.967,1837,4.698,1838,4.698,1839,4.698,1840,4.698,1841,4.698,1842,4.698,1843,4.698,1844,4.698,1845,4.698,1846,4.698,1847,4.698,1848,4.698,1849,4.698,1850,4.698,1851,4.698,1852,4.698,1853,4.698,1854,4.698,1855,4.698,1856,4.698,1857,4.698,1858,4.698,1859,4.698]],["title/miscellaneous/functions.html",[1860,1.86,1861,3.404]],["body/miscellaneous/functions.html",[27,0.472,47,1.29,48,0.026,49,0.946,51,1.29,199,0.02,200,0.023,201,0.02,405,2.596,416,4.703,584,1.684,680,2.596,688,3.609,1155,4.299,1180,4.703,1288,4.299,1356,4.431,1805,4.299,1816,5.043,1821,4.299,1860,3.388,1861,4.299,1862,5.091,1863,5.973,1864,5.091,1865,5.091,1866,5.091,1867,5.091]],["title/index.html",[27,0.259,1868,2.795,1869,2.795]],["body/index.html",[0,0.275,4,0.295,20,1.096,48,0.022,49,0.697,80,1.175,148,2.07,167,1.259,199,0.018,200,0.022,201,0.018,388,2.82,453,3.941,989,3.941,1836,5.158,1870,4.667,1871,5.67,1872,4.667,1873,6.108,1874,4.667,1875,4.667,1876,4.667,1877,5.67,1878,6.51,1879,4.667,1880,4.667,1881,4.667,1882,4.667,1883,4.667,1884,4.667,1885,4.667,1886,4.667,1887,6.108,1888,6.108,1889,4.667,1890,6.51,1891,4.667,1892,4.667,1893,4.667,1894,4.667,1895,4.667,1896,4.667,1897,3.941,1898,5.67,1899,5.67,1900,6.353,1901,4.667,1902,5.67,1903,5.67,1904,4.667,1905,6.353,1906,4.667,1907,4.667,1908,4.667,1909,6.108,1910,4.667,1911,4.667,1912,4.667]],["title/modules.html",[204,2.159]],["body/modules.html",[48,0.023,199,0.02,200,0.023,201,0.02,203,3.178,204,2.481,375,3.5,384,3.178,393,4.516,513,3.902,1394,3.5,1913,6.424,1914,6.424,1915,6.722,1916,6.087,1917,6.087]],["title/overview.html",[1918,3.865]],["body/overview.html",[1,1.238,2,1.113,48,0.027,157,0.969,164,1.428,166,1.176,169,1.238,172,1.15,174,1.176,176,1.264,179,1.238,181,1.15,182,1.15,184,1.176,187,1.264,189,1.176,191,1.176,194,1.176,199,0.016,200,0.02,201,0.016,202,1.947,203,3.492,204,1.947,234,2.284,235,2.284,346,2.104,375,4.716,376,2.494,377,3.062,378,2.746,379,3.485,380,3.485,381,3.485,382,3.485,383,3.485,384,3.492,385,3.492,386,3.898,387,3.062,388,2.494,459,2.746,474,3.062,515,3.062,679,1.947,987,3.485,1226,2.746,1394,4.562,1395,3.485,1918,3.485,1919,4.127,1920,4.127,1921,4.127]],["title/routes.html",[459,3.046]],["body/routes.html",[48,0.024,199,0.021,200,0.024,201,0.021,459,3.648]],["title/miscellaneous/variables.html",[1860,1.86,1922,3.404]],["body/miscellaneous/variables.html",[9,0.306,27,0.432,48,0.027,50,0.585,80,1.426,113,1.833,120,1.44,153,1.769,199,0.018,200,0.022,201,0.018,262,3.457,263,1.886,264,1.762,275,1.874,294,1.541,485,3.934,571,1.094,672,4.203,692,3.769,727,4.203,945,3.934,1310,3.457,1818,3.934,1819,4.783,1822,3.934,1823,5.362,1824,3.934,1860,3.1,1897,4.783,1922,3.934,1923,4.659,1924,4.659,1925,4.659,1926,4.659,1927,4.659,1928,4.659,1929,4.659,1930,4.659,1931,4.659,1932,4.659,1933,5.665,1934,4.659,1935,4.659,1936,4.659,1937,4.659,1938,4.659]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":153,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["0.4cm",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["0.7",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.26",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["0.836",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"overview.html":{}}}],["1.9.0",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["1/17",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1704,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["100",{"_index":155,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["1000",{"_index":651,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["1000px",{"_index":1781,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["100px",{"_index":1307,"title":{},"body":{"components/EventListComponent.html":{}}}],["11",{"_index":1921,"title":{},"body":{"overview.html":{}}}],["11rem",{"_index":1775,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["12",{"_index":1717,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["120",{"_index":1178,"title":{},"body":{"components/EventFormComponent.html":{}}}],["14px",{"_index":1390,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["15",{"_index":1919,"title":{},"body":{"overview.html":{}}}],["153",{"_index":864,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["15px",{"_index":1049,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["18px",{"_index":1793,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["1920",{"_index":1723,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["196",{"_index":868,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/SignUpComponent.html":{}}}],["1rem",{"_index":137,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["2",{"_index":987,"title":{},"body":{"components/CreateEventComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["2020",{"_index":1646,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["209",{"_index":1315,"title":{},"body":{"components/EventListComponent.html":{}}}],["20px",{"_index":1787,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["236",{"_index":1002,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["253",{"_index":1316,"title":{},"body":{"components/EventListComponent.html":{}}}],["255",{"_index":865,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["2c2d2f",{"_index":1548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2rem",{"_index":1791,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["3000",{"_index":626,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["36px",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1226,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["50",{"_index":858,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["5cd9b7145437172e109998d8",{"_index":604,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["5rem",{"_index":152,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["6.3.3",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["6000",{"_index":1490,"title":{},"body":{"injectables/EventService.html":{}}}],["61",{"_index":1056,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["7",{"_index":1920,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["7.3.9",{"_index":1875,"title":{},"body":{"index.html":{}}}],["7.5.3",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["8.5.1",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":993,"title":{},"body":{"components/CreateEventComponent.html":{},"components/StartSiteComponent.html":{}}}],["800",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["85",{"_index":135,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["900",{"_index":996,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["__await",{"_index":967,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["__v",{"_index":1553,"title":{},"body":{"interfaces/IMyEventRoot.html":{}}}],["_id",{"_index":1436,"title":{},"body":{"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["a:hover",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/StartSiteComponent.html":{}}}],["absolute",{"_index":857,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["abstractcontrol",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":815,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["activatedroute",{"_index":938,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{}}}],["activatedroutesnapshot",{"_index":480,"title":{},"body":{"guards/AuthGard.html":{}}}],["actual_component",{"_index":198,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["adambozhiproj",{"_index":1870,"title":{},"body":{"index.html":{}}}],["address",{"_index":21,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["address.city",{"_index":108,"title":{},"body":{"components/AddressFormComponent.html":{},"injectables/EventService.html":{}}}],["address.line",{"_index":110,"title":{},"body":{"components/AddressFormComponent.html":{},"injectables/EventService.html":{}}}],["address.zipcode",{"_index":112,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["address.zipcode.tostring",{"_index":1523,"title":{},"body":{"injectables/EventService.html":{}}}],["addresse",{"_index":126,"title":{},"body":{"components/AddressFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["addressform",{"_index":29,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["addressformcomponent",{"_index":1,"title":{"components/AddressFormComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adgangskode",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["adgangskoden",{"_index":852,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["adressen",{"_index":1125,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["af",{"_index":1678,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["afstemninger",{"_index":1709,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["afterviewinit",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["afvist",{"_index":1104,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["agelimit",{"_index":788,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["agelimitctrl",{"_index":742,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["agelimitform",{"_index":741,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["aktiviteter",{"_index":1669,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["alder",{"_index":1176,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["alderen",{"_index":1131,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["aldersgrænse",{"_index":1175,"title":{},"body":{"components/EventFormComponent.html":{}}}],["aldre",{"_index":1133,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["align",{"_index":1319,"title":{},"body":{"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["alle",{"_index":1132,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["allevents",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["allowmultiselect",{"_index":1361,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["alpha.1",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["ambitionen",{"_index":1746,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["angular",{"_index":1836,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1358,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["angular/cdk/layout",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/cdk/stepper",{"_index":966,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["angular/common",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["angular/compiler",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"dependencies.html":{}}}],["angular/core/src/render3/util",{"_index":1468,"title":{},"body":{"injectables/EventService.html":{}}}],["angular/forms",{"_index":73,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AppModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"modules/EventModule.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":232,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"dependencies.html":{}}}],["angular/material/dialog",{"_index":1087,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["angular/platform",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/router/src/utils/preactivation",{"_index":486,"title":{},"body":{"guards/AuthGard.html":{}}}],["angularmaterialmodule",{"_index":203,"title":{"modules/AngularMaterialModule.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["anuglar",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":20,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"index.html":{}}}],["app.component",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":164,"title":{"components/AppComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applyfilter",{"_index":1327,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1332,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["appmodule",{"_index":375,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":384,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arragementer",{"_index":1304,"title":{},"body":{"components/EventListComponent.html":{}}}],["arrangement",{"_index":1674,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["arrangementer",{"_index":1650,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["arranger",{"_index":595,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["arrangøren",{"_index":1099,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["arraybuffer).subarray(0",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arrow",{"_index":1061,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["artifacts",{"_index":1891,"title":{},"body":{"index.html":{}}}],["attend",{"_index":1137,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["attraktivt",{"_index":1691,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["auth/auth.guard",{"_index":462,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/authenticate.service",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{}}}],["auth/change",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/edit",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/login/login.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/sign",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/token.middleware",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/user.model",{"_index":1355,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["auth0/angular",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticateService.html":{},"dependencies.html":{}}}],["authdata",{"_index":659,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authdata.expirationdate.gettime",{"_index":663,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authdata.jwt",{"_index":665,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authdata.userid",{"_index":666,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authenticate.service",{"_index":488,"title":{},"body":{"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["authenticateautomatically",{"_index":524,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authenticateservice",{"_index":251,"title":{"injectables/AuthenticateService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["authgard",{"_index":461,"title":{"guards/AuthGard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":385,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubs",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["authmodule",{"_index":513,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authrequest",{"_index":507,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["authservie",{"_index":497,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authstatus",{"_index":1624,"title":{},"body":{"components/SignUpComponent.html":{}}}],["authstatuslistner",{"_index":517,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["authstatussub",{"_index":1603,"title":{},"body":{"components/SignUpComponent.html":{}}}],["authstatussubs",{"_index":1183,"title":{},"body":{"components/EventListComponent.html":{}}}],["authtoken",{"_index":505,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":133,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["automatically",{"_index":1882,"title":{},"body":{"index.html":{}}}],["autorenew",{"_index":1044,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["available",{"_index":1914,"title":{},"body":{"modules.html":{}}}],["backedend_url",{"_index":518,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["background",{"_index":138,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["background:rgba(255,255,255,0.1",{"_index":1047,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["background:rgba(255,255,255,0.9",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["background:transparent",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["bearer",{"_index":511,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["begivenhederne",{"_index":1715,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["begynder",{"_index":1701,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["behavior",{"_index":1773,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["berigende",{"_index":1695,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["beskrivelse",{"_index":1167,"title":{},"body":{"components/EventFormComponent.html":{}}}],["betydning",{"_index":1738,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["bevidstheden",{"_index":1732,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["bidrage",{"_index":1759,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["billede",{"_index":1179,"title":{},"body":{"components/EventFormComponent.html":{}}}],["bio",{"_index":698,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["black",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{}}}],["blacklistedroutes",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["blev",{"_index":1660,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["blevet",{"_index":1103,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["blive",{"_index":1666,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["block",{"_index":1006,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["bningsarrangement",{"_index":1703,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["bold",{"_index":1004,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["boolean",{"_index":484,"title":{},"body":{"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["bootstrap",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"dependencies.html":{}}}],["border",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["box",{"_index":143,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["breakpointobserver",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpoints",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1915,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["bruger",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/EditUsersComponent.html":{},"components/SignUpComponent.html":{}}}],["brugere",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":1890,"title":{},"body":{"index.html":{}}}],["builder",{"_index":52,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["button",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["button:hover",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["både",{"_index":1697,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["canactivate",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{}}}],["canactivate(route",{"_index":479,"title":{},"body":{"guards/AuthGard.html":{}}}],["card",{"_index":131,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["categories",{"_index":695,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["category",{"_index":678,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"coverage.html":{}}}],["category.viewvalue",{"_index":1169,"title":{},"body":{"components/EventFormComponent.html":{}}}],["center",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["change",{"_index":167,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"index.html":{}}}],["changedetection",{"_index":17,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["changedetectionstrategy",{"_index":70,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":18,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["changepassword",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticateService.html":{}}}],["changepassword(oldpassword",{"_index":549,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["changepasswordcomponent",{"_index":166,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordform",{"_index":807,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["check",{"_index":989,"title":{},"body":{"components/CreateEventComponent.html":{},"index.html":{}}}],["checkmode",{"_index":931,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["checkmode(eventid",{"_index":940,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["christian",{"_index":1726,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["city",{"_index":114,"title":{},"body":{"components/AddressFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IMyEventRoot.html":{}}}],["cityctrl",{"_index":98,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["cityform",{"_index":97,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["class",{"_index":79,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["clear",{"_index":1342,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["clearauthdata",{"_index":525,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":645,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["cli",{"_index":1873,"title":{},"body":{"index.html":{}}}],["close",{"_index":1136,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["cluster_appmodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_eventmodule",{"_index":1395,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_declarations",{"_index":1396,"title":{},"body":{"modules/EventModule.html":{}}}],["code",{"_index":1885,"title":{},"body":{"index.html":{}}}],["col",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["color:red",{"_index":1053,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["color:rgb(173",{"_index":1001,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["color:rgb(61",{"_index":1055,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["color:rgba(255,255,255,0.9",{"_index":994,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["color:royalblue",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/StartSiteComponent.html":{}}}],["color:transparent",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["color:white",{"_index":1048,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["column",{"_index":1391,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"overview.html":{}}}],["config",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(declinedmailobject",{"_index":1532,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(res",{"_index":1272,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["console.log(useremail",{"_index":641,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["const",{"_index":113,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["constructor(authservice",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"components/EditUsersComponent.html":{},"components/HeaderComponent.html":{}}}],["constructor(authservie",{"_index":495,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["constructor(builder",{"_index":42,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["constructor(dialogref",{"_index":1072,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["constructor(eventservice",{"_index":937,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["constructor(formbuilder",{"_index":817,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(http",{"_index":542,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(public",{"_index":1117,"title":{},"body":{"components/EventDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["contact",{"_index":170,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["contactemail",{"_index":908,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"interfaces/IContactPerson.html":{},"interfaces/IMyEventRoot.html":{}}}],["contactemailctrl",{"_index":899,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["contactform",{"_index":870,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["contactname",{"_index":910,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"interfaces/IContactPerson.html":{},"interfaces/IMyEventRoot.html":{}}}],["contactnamectrl",{"_index":895,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["contactperson",{"_index":884,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{}}}],["contactperson)).subscribe(res",{"_index":1487,"title":{},"body":{"injectables/EventService.html":{}}}],["contactperson.contactemail",{"_index":903,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{}}}],["contactperson.contactname",{"_index":905,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{}}}],["contactperson.contactphone",{"_index":907,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{}}}],["contactpersonformcomponent",{"_index":169,"title":{"components/ContactPersonFormComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactphone",{"_index":912,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"interfaces/IContactPerson.html":{},"interfaces/IMyEventRoot.html":{}}}],["contactphonectrl",{"_index":897,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["container",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["content",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["control",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.value",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":999,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["cost",{"_index":790,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["costctrl",{"_index":751,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["costform",{"_index":750,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["courier",{"_index":1785,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["cover",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1795,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":91,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["createdupdatedevent",{"_index":932,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["createeventcomponent",{"_index":172,"title":{"components/CreateEventComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createeventformdata",{"_index":1409,"title":{},"body":{"injectables/EventService.html":{}}}],["createeventformdata(event",{"_index":1423,"title":{},"body":{"injectables/EventService.html":{}}}],["createuser",{"_index":526,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["createuser(user",{"_index":554,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["creator",{"_index":1554,"title":{},"body":{"interfaces/IMyEventRoot.html":{}}}],["currentaddress",{"_index":1399,"title":{},"body":{"injectables/EventService.html":{}}}],["currentcardid",{"_index":1184,"title":{},"body":{"components/EventListComponent.html":{}}}],["currentcontactperson",{"_index":1400,"title":{},"body":{"injectables/EventService.html":{}}}],["currentevent",{"_index":1401,"title":{},"body":{"injectables/EventService.html":{}}}],["currentpage",{"_index":1324,"title":{},"body":{"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["currentrootevent",{"_index":1402,"title":{},"body":{"injectables/EventService.html":{}}}],["dage",{"_index":1722,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["dagene",{"_index":1707,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["danmark",{"_index":1663,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["danmark.i",{"_index":1764,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["dansk",{"_index":1754,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["danske",{"_index":1739,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["data",{"_index":1067,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{}}}],["data.agelimit",{"_index":1135,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.city",{"_index":1127,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.endtime",{"_index":1124,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.expiresin",{"_index":611,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["data.line",{"_index":1126,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.name",{"_index":1118,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.starttime",{"_index":1122,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["data.token",{"_index":609,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["data.userid",{"_index":616,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["data.zipcode",{"_index":1129,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dataservice",{"_index":1074,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["datasource",{"_index":1011,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["date",{"_index":581,"title":{},"body":{"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["date(event.endtime",{"_index":779,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["date(event.starttime",{"_index":778,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["date(eventroot.endtime",{"_index":1483,"title":{},"body":{"injectables/EventService.html":{}}}],["date(expirationdate",{"_index":675,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["date.starttimectrl",{"_index":786,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["datepicker",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["datestring",{"_index":1867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datetime",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"dependencies.html":{}}}],["datetime/date",{"_index":683,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["de",{"_index":1708,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["declarations",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"overview.html":{}}}],["decline",{"_index":1298,"title":{},"body":{"components/EventListComponent.html":{}}}],["declinedmailobject",{"_index":1529,"title":{},"body":{"injectables/EventService.html":{}}}],["declinedmailobject).subscribe(res",{"_index":1531,"title":{},"body":{"injectables/EventService.html":{}}}],["declinerequstedevent",{"_index":1410,"title":{},"body":{"injectables/EventService.html":{}}}],["declinerequstedevent(event",{"_index":1425,"title":{},"body":{"injectables/EventService.html":{}}}],["decode",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["decoration",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["decorators",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["deep",{"_index":1060,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/StartSiteComponent.html":{}}}],["deep.mat",{"_index":1777,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["default",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["del",{"_index":1677,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["delete_forever",{"_index":1045,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["deleteevent",{"_index":1411,"title":{},"body":{"injectables/EventService.html":{}}}],["deleteevent(id",{"_index":1427,"title":{},"body":{"injectables/EventService.html":{}}}],["deleteicon",{"_index":1052,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["deleteuser",{"_index":527,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{}}}],["deleteuser(id",{"_index":557,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["deleteuser(userid",{"_index":1017,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["den",{"_index":1121,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dependencies",{"_index":376,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":1728,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["descctrl",{"_index":739,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["descform",{"_index":738,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["description",{"_index":792,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["det",{"_index":1657,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["dev",{"_index":1880,"title":{},"body":{"index.html":{}}}],["development",{"_index":1876,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1064,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{}}}],["dialog'},{'name",{"_index":178,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["dialog.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/EventListComponent.html":{},"modules/EventModule.html":{}}}],["dialog.component.css",{"_index":1065,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["dialog.component.html",{"_index":1066,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1063,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1111,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1114,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":1113,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":1075,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1115,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1085,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1084,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1112,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1076,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1077,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1081,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["dialog/email",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{},"coverage.html":{}}}],["dialog/event",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1068,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1286,"title":{},"body":{"components/EventListComponent.html":{}}}],["dialogref.afterclosed().subscribe(res",{"_index":1271,"title":{},"body":{"components/EventListComponent.html":{}}}],["dig",{"_index":1653,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["din",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["directive",{"_index":160,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["directives",{"_index":197,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1889,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1894,"title":{},"body":{"index.html":{}}}],["display",{"_index":1005,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["display:none",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["displayedcolumns",{"_index":1012,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["displayevent",{"_index":1278,"title":{},"body":{"components/EventListComponent.html":{}}}],["dist",{"_index":1893,"title":{},"body":{"index.html":{}}}],["dit",{"_index":1673,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["documentation",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["dropdown",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":586,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["dynamic",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":916,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["e2e",{"_index":1906,"title":{},"body":{"index.html":{}}}],["edit",{"_index":85,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["edit/:eventid",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editeventsubject",{"_index":1403,"title":{},"body":{"injectables/EventService.html":{}}}],["editusers",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["edituserscomponent",{"_index":174,"title":{"components/EditUsersComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":159,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["element._id",{"_index":1043,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["element.address.city",{"_index":1384,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.address.line",{"_index":1383,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.agelimit",{"_index":1389,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.cost",{"_index":1388,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.email",{"_index":1042,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["element.endtime",{"_index":1387,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.name",{"_index":1382,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.starttime",{"_index":1386,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["element.theme",{"_index":1385,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["elementref",{"_index":1236,"title":{},"body":{"components/EventListComponent.html":{}}}],["eller",{"_index":1497,"title":{},"body":{"injectables/EventService.html":{}}}],["email",{"_index":177,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["emailctrl",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["emaildialogcomponent",{"_index":176,"title":{"components/EmailDialogComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailform",{"_index":898,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["emailvalidator",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["emitonstatuschanged",{"_index":31,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["en",{"_index":1173,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["end",{"_index":1905,"title":{},"body":{"index.html":{}}}],["endamount",{"_index":1185,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["endbutton",{"_index":1320,"title":{},"body":{"components/EventListComponent.html":{}}}],["endtime",{"_index":703,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["endtimectrl",{"_index":747,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["endtimeform",{"_index":746,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["entrycomponents",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["er",{"_index":1102,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/StartSiteComponent.html":{}}}],["error",{"_index":997,"title":{},"body":{"components/CreateEventComponent.html":{},"injectables/EventService.html":{}}}],["error.error.message",{"_index":1503,"title":{},"body":{"injectables/EventService.html":{}}}],["errordata",{"_index":621,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/LoginComponent.html":{}}}],["errordata.error.message",{"_index":623,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["errordata.fadingtime",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["errordata.message",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{}}}],["errordatasubs",{"_index":1013,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{}}}],["errorlistener",{"_index":519,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["errormessage",{"_index":862,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["et",{"_index":1690,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["europæiske",{"_index":1752,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["event",{"_index":180,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["event'},{'name",{"_index":173,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["event).subscribe",{"_index":1485,"title":{},"body":{"injectables/EventService.html":{}}}],["event).subscribe(res",{"_index":1501,"title":{},"body":{"injectables/EventService.html":{}}}],["event.agelimit",{"_index":760,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["event.agelimit.tostring",{"_index":1514,"title":{},"body":{"injectables/EventService.html":{}}}],["event.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventModule.html":{}}}],["event.component.css",{"_index":924,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.html",{"_index":925,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts",{"_index":921,"title":{},"body":{"components/CreateEventComponent.html":{},"coverage.html":{}}}],["event.component.ts:101",{"_index":949,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:107",{"_index":947,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:113",{"_index":942,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:122",{"_index":950,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:27",{"_index":963,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:28",{"_index":956,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:29",{"_index":962,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:30",{"_index":964,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:31",{"_index":960,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:32",{"_index":961,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:33",{"_index":958,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:34",{"_index":957,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:35",{"_index":959,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:36",{"_index":939,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:43",{"_index":951,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:59",{"_index":941,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:74",{"_index":954,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:95",{"_index":944,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.cost",{"_index":756,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["event.cost.tostring",{"_index":1518,"title":{},"body":{"injectables/EventService.html":{}}}],["event.description",{"_index":758,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event.endtime",{"_index":768,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event.imagepath",{"_index":764,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event.imagepath.name",{"_index":1520,"title":{},"body":{"injectables/EventService.html":{}}}],["event.name",{"_index":754,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event.service",{"_index":74,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["event.starttime",{"_index":766,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event.target",{"_index":718,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["event.theme",{"_index":762,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["event/address",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["event/contact",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["event/create",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateEventComponent.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["event/email",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["event/event",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["event/publish",{"_index":1500,"title":{},"body":{"injectables/EventService.html":{}}}],["eventdata.event.cost",{"_index":1291,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdata.event.description",{"_index":1293,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdata.event.name",{"_index":1289,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdata.event.theme",{"_index":1292,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdata.events",{"_index":1371,"title":{},"body":{"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["eventdata.events.filter(eventroot",{"_index":1482,"title":{},"body":{"injectables/EventService.html":{}}}],["eventdata.events.map(eventroot",{"_index":1260,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdata.formattedstarttime",{"_index":1290,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventdialogcomponent",{"_index":179,"title":{"components/EventDialogComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":54,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["eventen",{"_index":1119,"title":{},"body":{"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{}}}],["eventform",{"_index":699,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["eventformcomponent",{"_index":181,"title":{"components/EventFormComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventid",{"_index":926,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{}}}],["eventlistcomponent",{"_index":182,"title":{"components/EventListComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventlisttablecomponent",{"_index":184,"title":{"components/EventListTableComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventmodule",{"_index":1394,"title":{"modules/EventModule.html":{}},"body":{"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["eventname",{"_index":1450,"title":{},"body":{"injectables/EventService.html":{}}}],["eventroot",{"_index":1082,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{}}}],["eventroot.address.city",{"_index":1281,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.address.line",{"_index":1280,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.address.zipcode",{"_index":1284,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.agelimit",{"_index":1282,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.contactperson.contactemail",{"_index":1095,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{}}}],["eventroot.contactperson.contactname",{"_index":1094,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{}}}],["eventroot.cost",{"_index":1279,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.imagepath",{"_index":1283,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventroot.name",{"_index":1093,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{}}}],["events",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["events/user",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{}}}],["eventservice",{"_index":44,"title":{"injectables/EventService.html":{}},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["eventsperpage",{"_index":1325,"title":{},"body":{"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["eventsupdatedsubject",{"_index":1404,"title":{},"body":{"injectables/EventService.html":{}}}],["eventsupdatedsubjectlistener",{"_index":1257,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["eventtopublish",{"_index":1273,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventtopublish.creator",{"_index":1274,"title":{},"body":{"components/EventListComponent.html":{}}}],["execute",{"_index":1902,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":1311,"title":{},"body":{"components/EventListComponent.html":{}}}],["expirationdate",{"_index":562,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["expirationdate.toisostring",{"_index":654,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["expiresin",{"_index":662,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["export",{"_index":78,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["exports",{"_index":234,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"overview.html":{}}}],["extracteventfromroot",{"_index":688,"title":{},"body":{"interfaces/Category.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extracteventfromroot(rootevent",{"_index":1865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extracteventfromroot(this.eventservice.currentrootevent",{"_index":981,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["f",{"_index":816,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["f5",{"_index":1496,"title":{},"body":{"injectables/EventService.html":{}}}],["fadingtime",{"_index":625,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["false",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1107,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/StartSiteComponent.html":{}}}],["fcontrols",{"_index":781,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["fd",{"_index":1508,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('agelimit",{"_index":1513,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('city",{"_index":1524,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('contactemail",{"_index":1527,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('contactname",{"_index":1525,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('contactphone",{"_index":1526,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('cost",{"_index":1517,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('creatorid",{"_index":1528,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('description",{"_index":1511,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('endtime",{"_index":1516,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('imagepath",{"_index":1519,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('line",{"_index":1521,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('name",{"_index":1510,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('starttime",{"_index":1515,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('theme",{"_index":1512,"title":{},"body":{"injectables/EventService.html":{}}}],["fd.append('zipcode",{"_index":1522,"title":{},"body":{"injectables/EventService.html":{}}}],["februar",{"_index":1710,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["fejrer",{"_index":1765,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["feltet",{"_index":853,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["festlig",{"_index":1683,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["fgemail",{"_index":1558,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["fgnewpassword",{"_index":808,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["fgoldpassword",{"_index":809,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["fgpassword",{"_index":1559,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["field",{"_index":156,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":727,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"miscellaneous/variables.html":{}}}],["filereader.addeventlistener(\"loadend",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1884,"title":{},"body":{"index.html":{}}}],["filtervalue",{"_index":1334,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1373,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["find",{"_index":1649,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["firstsection",{"_index":1774,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["fixed",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1896,"title":{},"body":{"index.html":{}}}],["flere",{"_index":1302,"title":{},"body":{"components/EventListComponent.html":{}}}],["flex",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{}}}],["flex:1",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["float",{"_index":1140,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["focused",{"_index":1776,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["fokus",{"_index":1751,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["font",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListTableComponent.html":{},"components/StartSiteComponent.html":{}}}],["forløb",{"_index":1749,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["form",{"_index":22,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["form'},{'name",{"_index":163,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["form.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["form.component.css",{"_index":24,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["form.component.html",{"_index":26,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["form.component.ts",{"_index":12,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:118",{"_index":1154,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:128",{"_index":1153,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:14",{"_index":885,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:15",{"_index":875,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:16",{"_index":876,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:163",{"_index":1150,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:167",{"_index":1165,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:17",{"_index":66,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:170",{"_index":1156,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:175",{"_index":1148,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:18",{"_index":53,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:189",{"_index":1147,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:19",{"_index":46,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:23",{"_index":880,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:24",{"_index":61,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:29",{"_index":1157,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:35",{"_index":1159,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:36",{"_index":1163,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:37",{"_index":1158,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:38",{"_index":1145,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:39",{"_index":1146,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:40",{"_index":1160,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:41",{"_index":1162,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:42",{"_index":1161,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:43",{"_index":1144,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:46",{"_index":1151,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:49",{"_index":59,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:63",{"_index":883,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:67",{"_index":64,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:74",{"_index":1152,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:78",{"_index":878,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:82",{"_index":60,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:85",{"_index":58,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:87",{"_index":877,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form.component.ts:88",{"_index":1149,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:94",{"_index":55,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["form.component.ts:98",{"_index":879,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["form/address",{"_index":11,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AppModule.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["form/contact",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/ContactPersonFormComponent.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["form/event",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Category.html":{},"components/EventFormComponent.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["formatdate",{"_index":1356,"title":{},"body":{"components/EventListTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdate(datestring",{"_index":1866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatdate(eventroot.endtime",{"_index":1264,"title":{},"body":{"components/EventListComponent.html":{}}}],["formatdate(eventroot.starttime",{"_index":1262,"title":{},"body":{"components/EventListComponent.html":{}}}],["formattedendtime",{"_index":1263,"title":{},"body":{"components/EventListComponent.html":{}}}],["formattedstarttime",{"_index":1261,"title":{},"body":{"components/EventListComponent.html":{}}}],["formbuilder",{"_index":43,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formdata",{"_index":1509,"title":{},"body":{"injectables/EventService.html":{}}}],["formgroup",{"_index":65,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formålet",{"_index":1730,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["fornavn/efternavn",{"_index":915,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["fortæl",{"_index":1098,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["frobs",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":1287,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1861,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1908,"title":{},"body":{"index.html":{}}}],["galt",{"_index":1493,"title":{},"body":{"injectables/EventService.html":{}}}],["gathering",{"_index":697,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["ge",{"_index":1747,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["generate",{"_index":1887,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1872,"title":{},"body":{"index.html":{}}}],["genforenet",{"_index":1661,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["genforenignen",{"_index":1648,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["genforeningen",{"_index":1645,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["genforeningens",{"_index":1734,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["get('imageform",{"_index":723,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["get('imagepathctrl",{"_index":724,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["get(this.backedend_url",{"_index":1481,"title":{},"body":{"injectables/EventService.html":{}}}],["getaddressformstatus",{"_index":933,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["getaddressformstatus(isvalid",{"_index":943,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["getaddressfromform",{"_index":32,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["getallusers",{"_index":528,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["getauthdata",{"_index":529,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["getauthstatuslistener",{"_index":530,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EventListComponent.html":{}}}],["getcontactformstatus",{"_index":934,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["getcontactformstatus(isvalid",{"_index":946,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["getcontactpersonfromform",{"_index":872,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["getediteventlistener",{"_index":1412,"title":{},"body":{"injectables/EventService.html":{}}}],["geteventformstatus",{"_index":935,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["geteventformstatus(isvalid",{"_index":948,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["geteventfromform",{"_index":787,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["getevents",{"_index":1190,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["getevents(startamount",{"_index":1201,"title":{},"body":{"components/EventListComponent.html":{}}}],["geteventsonroutechanged",{"_index":1191,"title":{},"body":{"components/EventListComponent.html":{}}}],["geteventsonroutechanged(startamount",{"_index":1203,"title":{},"body":{"components/EventListComponent.html":{}}}],["getf",{"_index":828,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["getfcontrols",{"_index":1164,"title":{},"body":{"components/EventFormComponent.html":{}}}],["getisauthenticated",{"_index":531,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["getlimitedamountofevents",{"_index":1413,"title":{},"body":{"injectables/EventService.html":{}}}],["getlimitedamountofevents(startamount",{"_index":1431,"title":{},"body":{"injectables/EventService.html":{}}}],["getmessagelistener",{"_index":532,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/CreateEventComponent.html":{},"injectables/EventService.html":{}}}],["getminutesfromdate",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getminutesfromdate(number",{"_index":1288,"title":{},"body":{"components/EventListComponent.html":{},"miscellaneous/functions.html":{}}}],["getoneevent",{"_index":1414,"title":{},"body":{"injectables/EventService.html":{}}}],["getoneevent(_id",{"_index":1434,"title":{},"body":{"injectables/EventService.html":{}}}],["getrequestedevents",{"_index":1415,"title":{},"body":{"injectables/EventService.html":{}}}],["getrequestedevents(startamount",{"_index":1437,"title":{},"body":{"injectables/EventService.html":{}}}],["getrequstedevents",{"_index":1192,"title":{},"body":{"components/EventListComponent.html":{}}}],["getrequstedevents(startamount",{"_index":1205,"title":{},"body":{"components/EventListComponent.html":{}}}],["getrequstedthemeevents",{"_index":1416,"title":{},"body":{"injectables/EventService.html":{}}}],["getrequstedthemeevents(theme",{"_index":1439,"title":{},"body":{"injectables/EventService.html":{}}}],["getting",{"_index":1868,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":533,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["gettokenexpirationdate",{"_index":534,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["gettokenexpirationdate(token",{"_index":567,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["getuserevents",{"_index":1193,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["getuserevents(startamount",{"_index":1207,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["getuserid",{"_index":535,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["getuserschangedlistener",{"_index":536,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["gik",{"_index":1492,"title":{},"body":{"injectables/EventService.html":{}}}],["go",{"_index":1911,"title":{},"body":{"index.html":{}}}],["gode",{"_index":1766,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["gradient",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1913,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1000,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["group",{"_index":992,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["grænseland",{"_index":1756,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["grænsen",{"_index":1727,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["guard",{"_index":474,"title":{"guards/AuthGard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":475,"title":{},"body":{"guards/AuthGard.html":{}}}],["h1",{"_index":1789,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["h3",{"_index":1788,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["hammerjs",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["handleerrormessage",{"_index":1015,"title":{},"body":{"components/EditUsersComponent.html":{},"components/LoginComponent.html":{}}}],["hans",{"_index":1101,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["header",{"_index":1310,"title":{},"body":{"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":188,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["header.component.css",{"_index":1535,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1536,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":187,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":509,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["height",{"_index":151,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["hele",{"_index":1671,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["help",{"_index":1909,"title":{},"body":{"index.html":{}}}],["historiske",{"_index":1721,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["horizontal",{"_index":145,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["host",{"_index":1059,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["hover",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["html",{"_index":158,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["htmlelement",{"_index":1639,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["htmlinputelement",{"_index":1543,"title":{},"body":{"components/HeaderComponent.html":{}}}],["htmlinputelement).files[0",{"_index":719,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["http",{"_index":547,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["http://localhost:3000/event",{"_index":1475,"title":{},"body":{"injectables/EventService.html":{}}}],["http://localhost:3000/requestedevents",{"_index":1478,"title":{},"body":{"injectables/EventService.html":{}}}],["http://localhost:4200",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["http_interceptors",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":543,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["httpclientmodule",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["httphandler",{"_index":501,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":504,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":499,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://newmousleheventappp.herokuapp.com",{"_index":589,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["hvad",{"_index":1647,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["hvor",{"_index":1724,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["hvorfor",{"_index":1100,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["iaddress",{"_index":63,"title":{"interfaces/IAddress.html":{}},"body":{"components/AddressFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IAddress.html":{},"interfaces/IMyEventRoot.html":{},"coverage.html":{}}}],["iaddress.interface",{"_index":77,"title":{},"body":{"components/AddressFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{}}}],["icon",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{}}}],["icontactperson",{"_index":882,"title":{"interfaces/IContactPerson.html":{}},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IContactPerson.html":{},"interfaces/IMyEventRoot.html":{},"coverage.html":{}}}],["icontactperson.interface",{"_index":886,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{}}}],["id",{"_index":559,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["identifier",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":686,"title":{"interfaces/IEvent.html":{}},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"coverage.html":{}}}],["ievent.interface",{"_index":687,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{}}}],["image",{"_index":149,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["imageform",{"_index":748,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["imagepath",{"_index":707,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["imagepathctrl",{"_index":721,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["imagepreview",{"_index":704,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["img",{"_index":154,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["import",{"_index":67,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["important",{"_index":142,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"components/StartSiteComponent.html":{}}}],["imports",{"_index":233,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventModule.html":{}}}],["imyeventroot",{"_index":690,"title":{"interfaces/IMyEventRoot.html":{}},"body":{"interfaces/Category.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"interfaces/IMyEventRoot.html":{},"coverage.html":{}}}],["imyeventroot.interface",{"_index":691,"title":{},"body":{"interfaces/Category.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["ind",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicator::after",{"_index":1312,"title":{},"body":{"components/EventListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["ingen",{"_index":1303,"title":{},"body":{"components/EventListComponent.html":{}}}],["initaddressform",{"_index":33,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["initchangepasswordform",{"_index":813,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["initcontactform",{"_index":873,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["initeventform",{"_index":732,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["initial",{"_index":1393,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["initialselection",{"_index":1360,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["initloginform",{"_index":1561,"title":{},"body":{"components/LoginComponent.html":{}}}],["initsignupform",{"_index":1605,"title":{},"body":{"components/SignUpComponent.html":{}}}],["inject",{"_index":1086,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1083,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["injectable",{"_index":487,"title":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}},"body":{"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["injectables",{"_index":515,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{},"overview.html":{}}}],["inline",{"_index":1318,"title":{},"body":{"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["input",{"_index":68,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["intercept",{"_index":494,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":498,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":491,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":492,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":677,"title":{"interfaces/Category.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{}}}],["interfaces",{"_index":679,"title":{},"body":{"interfaces/Category.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"overview.html":{}}}],["isaddressformvalid",{"_index":927,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["isadmin",{"_index":537,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["isallselected",{"_index":1328,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["isauthenticated",{"_index":489,"title":{},"body":{"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/EventListComponent.html":{}}}],["isautheticated",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["iscollapsed",{"_index":1186,"title":{},"body":{"components/EventListComponent.html":{}}}],["iscontactformvalid",{"_index":928,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["iserrormessage",{"_index":624,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["iseventformvalid",{"_index":929,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["isformvalid",{"_index":871,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["ishandset",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["isundefined",{"_index":969,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{}}}],["isundefined(isvalid",{"_index":982,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["isuserauthenticated",{"_index":1187,"title":{},"body":{"components/EventListComponent.html":{}}}],["isvalid",{"_index":945,"title":{},"body":{"components/CreateEventComponent.html":{},"miscellaneous/variables.html":{}}}],["italic",{"_index":1790,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["item",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["januar",{"_index":1705,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["js",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["jubilæet",{"_index":1686,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["jubilæumsåret",{"_index":1664,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["juli",{"_index":1718,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["jwt",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticateService.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":544,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["jwthelperservice",{"_index":545,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["jwtmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["kan",{"_index":1675,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["karma",{"_index":1904,"title":{},"body":{"index.html":{}}}],["kategori",{"_index":1168,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["kendskabet",{"_index":1748,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["koden",{"_index":854,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["kommune",{"_index":1656,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["kong",{"_index":1725,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["kulminerer",{"_index":1716,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["kulturelle",{"_index":1737,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["københavn",{"_index":1706,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["label",{"_index":995,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/StartSiteComponent.html":{}}}],["landet",{"_index":1672,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["large",{"_index":1138,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["layoutmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":859,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["legend",{"_index":157,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"overview.html":{}}}],["li",{"_index":1139,"title":{},"body":{"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["li:hover",{"_index":1792,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["line",{"_index":118,"title":{},"body":{"components/AddressFormComponent.html":{},"injectables/AuthenticateService.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IMyEventRoot.html":{}}}],["linear",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["linectrl",{"_index":103,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["lineform",{"_index":102,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["list",{"_index":185,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":183,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["list.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{}}}],["list.component.css",{"_index":1181,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.html",{"_index":1182,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts",{"_index":1180,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["list.component.ts:111",{"_index":1208,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:128",{"_index":1212,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:137",{"_index":1215,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:146",{"_index":1219,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:158",{"_index":1221,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:17",{"_index":1224,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:177",{"_index":1222,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:18",{"_index":1228,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:19",{"_index":1227,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:20",{"_index":1229,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:21",{"_index":1223,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:22",{"_index":1234,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:23",{"_index":1235,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:24",{"_index":1230,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:25",{"_index":1232,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:26",{"_index":1231,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:27",{"_index":1233,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:28",{"_index":1200,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:35",{"_index":1225,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:38",{"_index":1210,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:52",{"_index":1209,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:57",{"_index":1217,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:64",{"_index":1204,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:76",{"_index":1202,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:93",{"_index":1206,"title":{},"body":{"components/EventListComponent.html":{}}}],["list/event",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":673,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["localstorage.getitem('expiration",{"_index":669,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.getitem('token",{"_index":668,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.getitem('userid",{"_index":670,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.removeitem('expiration",{"_index":657,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.removeitem('token",{"_index":656,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.removeitem('userid",{"_index":658,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.setitem('expiration",{"_index":653,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.setitem('token",{"_index":652,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["localstorage.setitem('userid",{"_index":655,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["log",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["logge",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["login",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticateService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":190,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["login(user",{"_index":574,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["login.component.css",{"_index":1556,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1557,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":189,"title":{"components/LoginComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1560,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":538,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["lokalt",{"_index":1698,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["luk",{"_index":1105,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["læs",{"_index":1714,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["mail",{"_index":917,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["map",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventService.html":{}}}],["map(result",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["margin",{"_index":132,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["markerer",{"_index":1719,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["markeret",{"_index":1667,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["markering",{"_index":1685,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["markeringen",{"_index":1758,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["marts",{"_index":1711,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["mastertoggle",{"_index":1329,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["mat",{"_index":130,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["mat_dialog_data",{"_index":228,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["matbutton",{"_index":953,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["matbuttonmodule",{"_index":209,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matcard",{"_index":1213,"title":{},"body":{"components/EventListComponent.html":{}}}],["matcard.id",{"_index":1268,"title":{},"body":{"components/EventListComponent.html":{}}}],["matcardmodule",{"_index":211,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matcheckboxmodule",{"_index":231,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matching",{"_index":200,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":218,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matdialog",{"_index":1116,"title":{},"body":{"components/EventDialogComponent.html":{},"components/EventListComponent.html":{}}}],["matdialogmodule",{"_index":216,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matdialogref",{"_index":1073,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["matdividermodule",{"_index":219,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["material.module",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["material.module.ts",{"_index":206,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matexpansionmodule",{"_index":213,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matformfieldmodule",{"_index":210,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matgridlistmodule",{"_index":229,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["maticonmodule",{"_index":226,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matinput",{"_index":1080,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["matinputmodule",{"_index":208,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matlistmodule",{"_index":217,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matnativedatemodule",{"_index":221,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matpaginator",{"_index":1028,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["matpaginatormodule",{"_index":215,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matprogressbarmodule",{"_index":220,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":214,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matradiomodule",{"_index":225,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matselectmodule",{"_index":224,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matsidenav",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":222,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["matsteppermodule",{"_index":223,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattabledatasource",{"_index":1022,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["mattabledatasource(users",{"_index":1035,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["mattablemodule",{"_index":230,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattabsmodule",{"_index":227,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["mattoolbarmodule",{"_index":212,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["maxdate",{"_index":706,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["maxevents",{"_index":1405,"title":{},"body":{"injectables/EventService.html":{}}}],["md",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["md2",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["med",{"_index":1662,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["mellem",{"_index":1177,"title":{},"body":{"components/EventFormComponent.html":{}}}],["menu",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["mere",{"_index":1296,"title":{},"body":{"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["message",{"_index":810,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["message.message",{"_index":856,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/SignUpComponent.html":{}}}],["messagedata",{"_index":836,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/SignUpComponent.html":{}}}],["messagedata.fadingtime",{"_index":838,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/SignUpComponent.html":{}}}],["messagelistener",{"_index":1406,"title":{},"body":{"injectables/EventService.html":{}}}],["messagesubs",{"_index":811,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/SignUpComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["mime",{"_index":693,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["mimetype",{"_index":692,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mindate",{"_index":705,"title":{},"body":{"interfaces/Category.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["mine",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["minmun",{"_index":1130,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["miscellaneous",{"_index":1860,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":38,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["module",{"_index":202,"title":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"overview.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["monospac",{"_index":1786,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["more",{"_index":1910,"title":{},"body":{"index.html":{}}}],["moz",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["multi",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["naboskab",{"_index":1767,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namectrl",{"_index":736,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["nameform",{"_index":735,"title":{},"body":{"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["nationale",{"_index":1742,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["nationalt",{"_index":1700,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["navigate",{"_index":1881,"title":{},"body":{"index.html":{}}}],["navn",{"_index":1166,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["ndre",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["nearest",{"_index":1644,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["new",{"_index":80,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":550,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{}}}],["newpasswordicon",{"_index":1054,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["next",{"_index":500,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/EventListTableComponent.html":{}}}],["next.handle(authrequest",{"_index":512,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":148,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AppModule.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbalertmodule",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["ngbdropdownmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["ngbmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["ngbtimepickermodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["ngdropdown",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":207,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{}}}],["ngondestroy",{"_index":34,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["ngx",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["nodejs.timer",{"_index":593,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["noget",{"_index":1491,"title":{},"body":{"injectables/EventService.html":{}}}],["none",{"_index":141,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["normal",{"_index":1784,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["notification_important",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["now",{"_index":661,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["now.gettime",{"_index":664,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["nsker",{"_index":1688,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["nu",{"_index":1729,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["null",{"_index":99,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["number",{"_index":584,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"interfaces/IAddress.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["nummer",{"_index":919,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/EventDialogComponent.html":{}}}],["numrows",{"_index":1376,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["numselected",{"_index":1374,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["nutidig",{"_index":1761,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["nuværende",{"_index":850,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["ny",{"_index":855,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{}}}],["næste",{"_index":127,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["o",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":672,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"miscellaneous/variables.html":{}}}],["observable.create",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observer",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(null",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officielt",{"_index":1702,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["og",{"_index":1668,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["ogs",{"_index":1676,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["oldpaasword",{"_index":846,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["oldpassword",{"_index":552,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["om",{"_index":1733,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["onchange",{"_index":814,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["onchangedpage",{"_index":1330,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["onchangedpage(pagedata",{"_index":1344,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["onclose",{"_index":1070,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["oncollapse",{"_index":1194,"title":{},"body":{"components/EventListComponent.html":{}}}],["oncollapse(matcard",{"_index":1211,"title":{},"body":{"components/EventListComponent.html":{}}}],["ondecline",{"_index":1195,"title":{},"body":{"components/EventListComponent.html":{}}}],["ondecline(event",{"_index":1214,"title":{},"body":{"components/EventListComponent.html":{}}}],["ondelete",{"_index":1196,"title":{},"body":{"components/EventListComponent.html":{}}}],["ondelete(eventid",{"_index":1216,"title":{},"body":{"components/EventListComponent.html":{}}}],["ondestroy",{"_index":15,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["onimagepicked",{"_index":1141,"title":{},"body":{"components/EventFormComponent.html":{}}}],["onimagepicked(event",{"_index":717,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["onlogin",{"_index":1562,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["onpublish",{"_index":1197,"title":{},"body":{"components/EventListComponent.html":{}}}],["onpublish(eventroot",{"_index":1218,"title":{},"body":{"components/EventListComponent.html":{}}}],["onreadmore",{"_index":1198,"title":{},"body":{"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["onreadmore(eventroot",{"_index":1220,"title":{},"body":{"components/EventListComponent.html":{}}}],["onreadmore(sectiontwo",{"_index":1638,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["onrequestedevents",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearchclicked",{"_index":1537,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsearchclicked(input",{"_index":1542,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsend",{"_index":1071,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["onsend(eventroot",{"_index":1078,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["onsignup",{"_index":1606,"title":{},"body":{"components/SignUpComponent.html":{}}}],["opdater",{"_index":1294,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["opdater/slet",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["oplevelser",{"_index":1696,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["opret",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["oprette",{"_index":1631,"title":{},"body":{"components/SignUpComponent.html":{}}}],["oprigtig",{"_index":1630,"title":{},"body":{"components/SignUpComponent.html":{}}}],["oprindelig",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":51,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1341,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["out",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":69,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["over",{"_index":1670,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["overflow",{"_index":1392,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["overview",{"_index":1918,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetime",{"_index":682,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["owldatetimemodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["owlnativedatetimemodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["p",{"_index":1652,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["package",{"_index":1826,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["padding:250px",{"_index":1783,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["pagedata",{"_index":1346,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["pagedata.pageindex",{"_index":1367,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["pagedata.pagesize",{"_index":1369,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["pageevent",{"_index":1238,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["pagesize=${eventsperpage}&page=${currentpage}&theme=${theme",{"_index":1479,"title":{},"body":{"injectables/EventService.html":{}}}],["paginator",{"_index":1014,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["panel",{"_index":1313,"title":{},"body":{"components/EventListComponent.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":965,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{}}}],["parammap.get('eventid",{"_index":975,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["parammap.has('eventid",{"_index":974,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["parammap.has('isrequstedevents",{"_index":1250,"title":{},"body":{"components/EventListComponent.html":{}}}],["party",{"_index":696,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["password",{"_index":803,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["password'},{'name",{"_index":168,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["password.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":804,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.html",{"_index":805,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts",{"_index":802,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":823,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:14",{"_index":825,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:15",{"_index":824,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:16",{"_index":827,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:17",{"_index":826,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:18",{"_index":818,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:22",{"_index":822,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:25",{"_index":820,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:37",{"_index":819,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:47",{"_index":829,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:51",{"_index":821,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password/change",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["passwordctrl",{"_index":841,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{}}}],["person",{"_index":171,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{}}}],["personname",{"_index":1447,"title":{},"body":{"injectables/EventService.html":{}}}],["perspektiv",{"_index":1753,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["phoneform",{"_index":896,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["pick",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Category.html":{},"components/EventFormComponent.html":{},"modules/EventModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["plads",{"_index":1713,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["politiske",{"_index":1736,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["position",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["positiv",{"_index":1760,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["post",{"_index":1128,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["postevent",{"_index":1417,"title":{},"body":{"injectables/EventService.html":{}}}],["postevent(event",{"_index":1442,"title":{},"body":{"injectables/EventService.html":{}}}],["postnummer",{"_index":129,"title":{},"body":{"components/AddressFormComponent.html":{},"components/StartSiteComponent.html":{}}}],["prefer",{"_index":1370,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["preview",{"_index":150,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["primary",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["pris",{"_index":1170,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["prod",{"_index":1895,"title":{},"body":{"index.html":{}}}],["production",{"_index":1897,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["profilering",{"_index":1762,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["program",{"_index":1694,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["programmet",{"_index":1679,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["project",{"_index":1871,"title":{},"body":{"index.html":{}}}],["promise",{"_index":485,"title":{},"body":{"guards/AuthGard.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":28,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{}}}],["protractor",{"_index":1907,"title":{},"body":{"index.html":{}}}],["provide",{"_index":236,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"components/CreateEventComponent.html":{}}}],["providedin",{"_index":601,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["providers",{"_index":235,"title":{},"body":{"modules/AngularMaterialModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateEventComponent.html":{},"modules/EventModule.html":{},"overview.html":{}}}],["prøv",{"_index":1494,"title":{},"body":{"injectables/EventService.html":{}}}],["public",{"_index":806,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["publish",{"_index":1297,"title":{},"body":{"components/EventListComponent.html":{}}}],["publishevent",{"_index":1418,"title":{},"body":{"injectables/EventService.html":{}}}],["publishevent(event",{"_index":1444,"title":{},"body":{"injectables/EventService.html":{}}}],["q",{"_index":1359,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["queryparams",{"_index":1472,"title":{},"body":{"injectables/EventService.html":{}}}],["r",{"_index":1658,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["reactiveformsmodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{}}}],["reader",{"_index":726,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["reader.onload",{"_index":728,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["reader.readasdataurl(file",{"_index":731,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["reader.result",{"_index":730,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["readme",{"_index":1912,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1448,"title":{},"body":{"injectables/EventService.html":{}}}],["reasonctrl",{"_index":1089,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["reasonfordecline",{"_index":1079,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["reasonfordecline.value",{"_index":1096,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["reasonform",{"_index":1069,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["red",{"_index":998,"title":{},"body":{"components/CreateEventComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["regionalt",{"_index":1699,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["reload",{"_index":1883,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["replaysubject",{"_index":1459,"title":{},"body":{"injectables/EventService.html":{}}}],["req",{"_index":503,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":508,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":510,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reqevent",{"_index":1407,"title":{},"body":{"injectables/EventService.html":{}}}],["requested",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["requestedevents",{"_index":1484,"title":{},"body":{"injectables/EventService.html":{}}}],["requestedevents/:isrequstedevents",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["res.message",{"_index":1489,"title":{},"body":{"injectables/EventService.html":{}}}],["reset",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"overview.html":{}}}],["resetuserpassword",{"_index":539,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{}}}],["resetuserpassword(useremail",{"_index":577,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{}}}],["response.message",{"_index":638,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["result",{"_index":199,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["result.message",{"_index":630,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["result.user",{"_index":634,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["results",{"_index":201,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1720,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["return",{"_index":120,"title":{},"body":{"components/AddressFormComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":56,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["rgb(0",{"_index":1003,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["rgb(196",{"_index":867,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/SignUpComponent.html":{}}}],["rgb(221",{"_index":1314,"title":{},"body":{"components/EventListComponent.html":{}}}],["rgb(255",{"_index":863,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["rgba(0",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/EventDialogComponent.html":{},"components/StartSiteComponent.html":{}}}],["ripple",{"_index":1779,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["roman",{"_index":1109,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["root",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["root'},{'name",{"_index":165,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["rootevent",{"_index":1155,"title":{},"body":{"components/EventFormComponent.html":{},"miscellaneous/functions.html":{}}}],["rootevent.agelimit",{"_index":759,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.cost",{"_index":755,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.description",{"_index":757,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.endtime",{"_index":767,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.imagepath",{"_index":763,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.name",{"_index":753,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.starttime",{"_index":765,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["rootevent.theme",{"_index":761,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["route",{"_index":477,"title":{},"body":{"guards/AuthGard.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{}}}],["router",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{}}}],["routermodule",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":482,"title":{},"body":{"guards/AuthGard.html":{}}}],["routes",{"_index":459,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rows",{"_index":1339,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["royalblue",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["run",{"_index":1878,"title":{},"body":{"index.html":{}}}],["running",{"_index":1898,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":76,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/subscription",{"_index":1031,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["rxjs/operators",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventService.html":{}}}],["samfund",{"_index":1740,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["samle",{"_index":1689,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sammenhængende",{"_index":1693,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["samtidig",{"_index":1757,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["save",{"_index":990,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["saveauthdata",{"_index":540,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["saveauthdata(token",{"_index":580,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["saveevent",{"_index":936,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["saveevent(submitbtn",{"_index":952,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["scaffolding",{"_index":1886,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":1772,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["se",{"_index":1295,"title":{},"body":{"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["secondsection",{"_index":1782,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["section",{"_index":1780,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sectiontwo",{"_index":1641,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sectiontwo.scrollintoview({behavior",{"_index":1642,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["select",{"_index":1058,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["selected",{"_index":1340,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["selectedtab",{"_index":930,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["selection",{"_index":1326,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["selectionmodel",{"_index":1357,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["selectionmodel(allowmultiselect",{"_index":1363,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["selects",{"_index":1338,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["selvforståelse",{"_index":1743,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["send",{"_index":1106,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["senddeclinedmail",{"_index":1419,"title":{},"body":{"injectables/EventService.html":{}}}],["senddeclinedmail(eventname",{"_index":1446,"title":{},"body":{"injectables/EventService.html":{}}}],["sendpublishedmail",{"_index":1420,"title":{},"body":{"injectables/EventService.html":{}}}],["sendpublishedmail(eventname",{"_index":1451,"title":{},"body":{"injectables/EventService.html":{}}}],["sentiment_very_satisfied",{"_index":1654,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["serif",{"_index":1110,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["serve",{"_index":1879,"title":{},"body":{"index.html":{}}}],["server",{"_index":1877,"title":{},"body":{"index.html":{}}}],["setadrressform",{"_index":36,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["setadrressform(address",{"_index":62,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["setauthtimer",{"_index":541,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["setauthtimer(duration",{"_index":583,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["setcontactform",{"_index":874,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["setcontactform(contactperson",{"_index":881,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["seteventform",{"_index":1142,"title":{},"body":{"components/EventFormComponent.html":{}}}],["seteventform(event",{"_index":769,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["setnewvalues",{"_index":1143,"title":{},"body":{"components/EventFormComponent.html":{}}}],["setnewvalues(rootevent",{"_index":752,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["settimeout",{"_index":649,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["settings",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":144,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["share",{"_index":1300,"title":{},"body":{"components/EventListComponent.html":{}}}],["shorthand",{"_index":674,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["showerror",{"_index":923,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["showmoreevents",{"_index":1199,"title":{},"body":{"components/EventListComponent.html":{}}}],["siden",{"_index":1498,"title":{},"body":{"injectables/EventService.html":{},"components/StartSiteComponent.html":{}}}],["sidenav",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":192,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["signup",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["signupcomponent",{"_index":191,"title":{"components/SignUpComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":1604,"title":{},"body":{"components/SignUpComponent.html":{}}}],["site",{"_index":196,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["site.component",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["site.component.css",{"_index":1634,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["site.component.html",{"_index":1635,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["site.component.ts",{"_index":1633,"title":{},"body":{"components/StartSiteComponent.html":{},"coverage.html":{}}}],["site.component.ts:12",{"_index":1637,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["site.component.ts:15",{"_index":1640,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["site.component.ts:8",{"_index":1636,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["site/start",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/StartSiteComponent.html":{},"coverage.html":{}}}],["size",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/EditUsersComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListTableComponent.html":{},"components/StartSiteComponent.html":{}}}],["skabe",{"_index":1681,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["skal",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["skelsættende",{"_index":1735,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["skift",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["slet",{"_index":1024,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListComponent.html":{}}}],["slut",{"_index":1174,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["slutter",{"_index":1123,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["smooth",{"_index":1643,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddressFormComponent.html":{},"modules/AngularMaterialModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"index.html":{}}}],["spacer",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{}}}],["span",{"_index":1057,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{}}}],["spinner",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/SignUpComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event",{"_index":1863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../extracteventfromroot.ts",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mime",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.middleware.ts",{"_index":1864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/anuglar",{"_index":205,"title":{},"body":{"modules/AngularMaterialModule.html":{}}}],["src/app/app",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":476,"title":{},"body":{"guards/AuthGard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:11",{"_index":478,"title":{},"body":{"guards/AuthGard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":483,"title":{},"body":{"guards/AuthGard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":493,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:10",{"_index":502,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:6",{"_index":496,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/authenticate.service",{"_index":1237,"title":{},"body":{"components/EventListComponent.html":{}}}],["src/app/auth/authenticate.service.ts",{"_index":516,"title":{},"body":{"injectables/AuthenticateService.html":{},"coverage.html":{}}}],["src/app/auth/authenticate.service.ts:100",{"_index":558,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:111",{"_index":578,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:12",{"_index":598,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:121",{"_index":568,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:124",{"_index":576,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:13",{"_index":599,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:134",{"_index":585,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:14",{"_index":591,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:140",{"_index":582,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:146",{"_index":553,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:15",{"_index":592,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:152",{"_index":548,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:16",{"_index":588,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:17",{"_index":596,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:170",{"_index":561,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:18",{"_index":594,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:188",{"_index":566,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:19",{"_index":590,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:191",{"_index":564,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:195",{"_index":563,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:198",{"_index":570,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:20",{"_index":546,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:26",{"_index":572,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:31",{"_index":573,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:37",{"_index":565,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:41",{"_index":575,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:62",{"_index":551,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:75",{"_index":556,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/authenticate.service.ts:89",{"_index":560,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["src/app/auth/change",{"_index":801,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/edit",{"_index":1007,"title":{},"body":{"components/EditUsersComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1555,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":1573,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:18",{"_index":1574,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:19",{"_index":1571,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":1572,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:21",{"_index":1575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:22",{"_index":1570,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:23",{"_index":1563,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:26",{"_index":1569,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":1567,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:34",{"_index":1576,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:37",{"_index":1564,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:48",{"_index":1565,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:60",{"_index":1568,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:76",{"_index":1566,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/sign",{"_index":1599,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/auth/token.middleware.ts",{"_index":1805,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/user.model.ts",{"_index":1794,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{}}}],["src/app/event/address",{"_index":10,"title":{},"body":{"components/AddressFormComponent.html":{},"coverage.html":{}}}],["src/app/event/contact",{"_index":869,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"coverage.html":{}}}],["src/app/event/create",{"_index":920,"title":{},"body":{"components/CreateEventComponent.html":{},"coverage.html":{}}}],["src/app/event/email",{"_index":1062,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventListComponent.html":{},"coverage.html":{}}}],["src/app/event/event",{"_index":680,"title":{},"body":{"interfaces/Category.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/event/event.module.ts",{"_index":1397,"title":{},"body":{"modules/EventModule.html":{}}}],["src/app/event/event.service.ts",{"_index":1398,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/event/event.service.ts:122",{"_index":1441,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:135",{"_index":1445,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:157",{"_index":1428,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:178",{"_index":1454,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:18",{"_index":1458,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:19",{"_index":1456,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:20",{"_index":1457,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:202",{"_index":1435,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:21",{"_index":1455,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:210",{"_index":1424,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:22",{"_index":1463,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:23",{"_index":1460,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:24",{"_index":1462,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:25",{"_index":1461,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:26",{"_index":1465,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:27",{"_index":1464,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:28",{"_index":1466,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:284",{"_index":1449,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:29",{"_index":1422,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:295",{"_index":1452,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:34",{"_index":1433,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:38",{"_index":1430,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:42",{"_index":1429,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:46",{"_index":1432,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:61",{"_index":1438,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:75",{"_index":1440,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:90",{"_index":1426,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/event.service.ts:99",{"_index":1443,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/event/iaddress.interface.ts",{"_index":1549,"title":{},"body":{"interfaces/IAddress.html":{},"coverage.html":{}}}],["src/app/event/icontactperson.interface.ts",{"_index":1550,"title":{},"body":{"interfaces/IContactPerson.html":{},"coverage.html":{}}}],["src/app/event/ievent.interface.ts",{"_index":1551,"title":{},"body":{"interfaces/IEvent.html":{},"coverage.html":{}}}],["src/app/event/imyeventroot.interface.ts",{"_index":1552,"title":{},"body":{"interfaces/IMyEventRoot.html":{},"coverage.html":{}}}],["src/app/event/mime",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/header/header.component.ts",{"_index":1534,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:11",{"_index":1546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:12",{"_index":1538,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:13",{"_index":1545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":1540,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":1544,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:27",{"_index":1541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:30",{"_index":1539,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/helper/extracteventfromroot",{"_index":689,"title":{},"body":{"interfaces/Category.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["src/app/helper/extracteventfromroot.ts",{"_index":1821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/start",{"_index":1632,"title":{},"body":{"components/StartSiteComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":195,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["startamount",{"_index":1188,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["startamount=${startamount}&endamount=${endamount",{"_index":1473,"title":{},"body":{"injectables/EventService.html":{}}}],["started",{"_index":1869,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1120,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["startsitecomponent",{"_index":194,"title":{"components/StartSiteComponent.html":{}},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["starttime",{"_index":701,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["starttimectrl",{"_index":745,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["starttimeform",{"_index":744,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["state",{"_index":481,"title":{},"body":{"guards/AuthGard.html":{}}}],["statements",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":122,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["statusemitter",{"_index":40,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["step",{"_index":147,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["stepper",{"_index":146,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["stepper_global_options",{"_index":922,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["sticky",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":1892,"title":{},"body":{"index.html":{}}}],["string",{"_index":571,"title":{},"body":{"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":1467,"title":{},"body":{"injectables/EventService.html":{}}}],["style",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"components/StartSiteComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["styleurls",{"_index":23,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["styrke",{"_index":1731,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["subject",{"_index":587,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["submitbtn",{"_index":955,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["submitted",{"_index":812,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe(data",{"_index":608,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["subscribe(errordata",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(event",{"_index":1504,"title":{},"body":{"injectables/EventService.html":{}}}],["subscribe(eventdata",{"_index":1258,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{}}}],["subscribe(isauthenticated",{"_index":1243,"title":{},"body":{"components/EventListComponent.html":{}}}],["subscribe(messagedata",{"_index":834,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe(res",{"_index":1502,"title":{},"body":{"injectables/EventService.html":{}}}],["subscribe(response",{"_index":637,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["subscribe(result",{"_index":629,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["subscription",{"_index":75,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["subtitle",{"_index":1309,"title":{},"body":{"components/EventListComponent.html":{}}}],["successmessage",{"_index":866,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/SignUpComponent.html":{}}}],["support",{"_index":1916,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1917,"title":{},"body":{"modules.html":{}}}],["sydlige",{"_index":1763,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["synlig",{"_index":1684,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["synligt",{"_index":1692,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["særlig",{"_index":1712,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sætte",{"_index":1750,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sønderborg",{"_index":1655,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["sønderjylland",{"_index":1659,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["tab",{"_index":991,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["table",{"_index":1046,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":186,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["table.component",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["table.component.css",{"_index":1322,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.html",{"_index":1323,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts",{"_index":1321,"title":{},"body":{"components/EventListTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:20",{"_index":1348,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:21",{"_index":1349,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:22",{"_index":1353,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:23",{"_index":1352,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:24",{"_index":1350,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:25",{"_index":1347,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:26",{"_index":1351,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:27",{"_index":1354,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:28",{"_index":1331,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:32",{"_index":1343,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:42",{"_index":1345,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:48",{"_index":1335,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:66",{"_index":1333,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:70",{"_index":1336,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table.component.ts:77",{"_index":1337,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["table/event",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventListTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":1051,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["telefon/mobil",{"_index":918,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["test",{"_index":1901,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1900,"title":{},"body":{"index.html":{}}}],["text",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/EditUsersComponent.html":{},"components/EventDialogComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/StartSiteComponent.html":{}}}],["th",{"_index":1050,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["theme",{"_index":797,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{}}}],["themectrl",{"_index":734,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["themeform",{"_index":733,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.addressform",{"_index":95,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('cityform').setvalue",{"_index":107,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('cityform').value.cityctrl",{"_index":115,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('lineform').setvalue",{"_index":109,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('lineform').value.linectrl",{"_index":119,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('zipcodeform').setvalue",{"_index":111,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.get('zipcodeform').value.zipcodectrl",{"_index":117,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.statuschanges.subscribe(status",{"_index":121,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.addressform.valuechanges.subscribe",{"_index":88,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.authlistenersubs",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authlistenersubs.unsubscribe",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authservice",{"_index":1242,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.authservice.authenticateautomatically",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.changepassword(oldpaasword",{"_index":849,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.authservice.createuser(user",{"_index":1628,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.authservice.deleteuser(userid",{"_index":1040,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["this.authservice.getallusers",{"_index":1032,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["this.authservice.getauthstatuslistener().subscribe",{"_index":1623,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.authservice.getauthstatuslistener().subscribe(isautheticated",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authservice.getisauthenticated",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGard.html":{},"components/EventListComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authservice.getmessagelistener",{"_index":833,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.authservice.getuserid",{"_index":1239,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["this.authservice.getuserschangedlistener().subscribe(users",{"_index":1033,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["this.authservice.login(user",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authservice.resetuserpassword(useremail",{"_index":1041,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["this.authservie.gettoken",{"_index":506,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authstatuslistner.asobservable",{"_index":676,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.authstatuslistner.next(false",{"_index":644,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.authstatuslistner.next(true",{"_index":619,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.authstatussub",{"_index":1622,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.authstatussub.unsubscribe",{"_index":1629,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.authstatussubs",{"_index":1241,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.authstatussubs.unsubscribe",{"_index":1246,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["this.builder.group",{"_index":96,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["this.changepasswordform",{"_index":830,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.controls",{"_index":843,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.invalid",{"_index":845,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.checkmode(this.eventid",{"_index":971,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.clearauthdata",{"_index":646,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.contactform",{"_index":894,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('emailform').setvalue",{"_index":902,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('emailform').value.contactemailctrl",{"_index":909,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('nameform').setvalue",{"_index":904,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('nameform').value.contactnamectrl",{"_index":911,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('phoneform').setvalue",{"_index":906,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.get('phoneform').value.contactphonectrl",{"_index":913,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.statuschanges.subscribe(status",{"_index":914,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.contactform.valuechanges.subscribe",{"_index":889,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.createdupdatedevent",{"_index":978,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.createeventformdata(event",{"_index":1486,"title":{},"body":{"injectables/EventService.html":{}}}],["this.currentcardid",{"_index":1267,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.currentpage",{"_index":1365,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.currentrootevent",{"_index":1505,"title":{},"body":{"injectables/EventService.html":{}}}],["this.dataservice.declinerequstedevent(eventroot",{"_index":1097,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["this.dataservice.getlimitedamountofevents(this.eventsperpage",{"_index":1364,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.dataservice.senddeclinedmail",{"_index":1092,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["this.datasource",{"_index":1034,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["this.datasource.data.foreach(row",{"_index":1380,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.datasource.data.length",{"_index":1377,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.datasource.filter",{"_index":1372,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.datasource.paginator",{"_index":1036,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["this.dialog.open(emaildialogcomponent",{"_index":1270,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.dialog.open(eventdialogcomponent",{"_index":1285,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.dialogref.close",{"_index":1091,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["this.editeventsubject.asobservable",{"_index":1470,"title":{},"body":{"injectables/EventService.html":{}}}],["this.editeventsubject.next(event",{"_index":1506,"title":{},"body":{"injectables/EventService.html":{}}}],["this.emitonstatuschanged",{"_index":94,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["this.endamount",{"_index":1245,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.errordata",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errordatasubs",{"_index":1039,"title":{},"body":{"components/EditUsersComponent.html":{},"components/LoginComponent.html":{}}}],["this.errordatasubs.unsubscribe",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errorlistener.asobservable",{"_index":605,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.errorlistener.next({message",{"_index":622,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.eventform",{"_index":722,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.controls",{"_index":782,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('agelimitform').setvalue",{"_index":774,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('costform').setvalue",{"_index":776,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('descform').setvalue",{"_index":773,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('endtimeform').setvalue",{"_index":770,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('imageform').patchvalue",{"_index":720,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('imageform').setvalue",{"_index":775,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('imageform').value.imagepathctrl",{"_index":780,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('nameform').setvalue",{"_index":772,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('starttimeform').setvalue",{"_index":777,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('starttimeform').valuechanges.subscribe(date",{"_index":784,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.get('themeform').setvalue",{"_index":771,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.statuschanges.subscribe(status",{"_index":800,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventform.valuechanges.subscribe",{"_index":711,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventid",{"_index":976,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.events",{"_index":1259,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["this.events.length",{"_index":1477,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice",{"_index":972,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["this.eventservice.currentaddress",{"_index":92,"title":{},"body":{"components/AddressFormComponent.html":{},"components/CreateEventComponent.html":{}}}],["this.eventservice.currentcontactperson",{"_index":892,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{}}}],["this.eventservice.currentevent",{"_index":714,"title":{},"body":{"interfaces/Category.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["this.eventservice.currentrootevent.address",{"_index":89,"title":{},"body":{"components/AddressFormComponent.html":{},"components/CreateEventComponent.html":{}}}],["this.eventservice.currentrootevent.contactperson",{"_index":890,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{}}}],["this.eventservice.declinerequstedevent(eventroot",{"_index":1276,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.deleteevent(eventid",{"_index":1248,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getediteventlistener().subscribe(event",{"_index":86,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{}}}],["this.eventservice.getediteventlistener().subscribe(eventroot",{"_index":709,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.eventservice.getlimitedamountofevents(startamount",{"_index":1255,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getoneevent(eventid",{"_index":977,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.eventservice.getrequestedevents(startamount",{"_index":1265,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getuserevents(startamount",{"_index":1266,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.postevent",{"_index":979,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.eventservice.publishevent(eventtopublish",{"_index":1275,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.sendpublishedmail",{"_index":1277,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.updateevent",{"_index":980,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.eventsperpage",{"_index":1368,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.eventsupdatedsubject.asobservable",{"_index":1471,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventsupdatedsubject.next",{"_index":1476,"title":{},"body":{"injectables/EventService.html":{}}}],["this.fcontrols.agelimitform.get('agelimitctrl').value",{"_index":789,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.costform.get('costctrl').value",{"_index":791,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.descform.get('descctrl').value",{"_index":793,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.endtimeform.get('endtimectrl').value",{"_index":794,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.imageform.get('imagepathctrl').value",{"_index":796,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.nameform.get('namectrl').value",{"_index":799,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.starttimeform.get('starttimectrl').value",{"_index":795,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fcontrols.themeform.get('themectrl').value",{"_index":798,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.fgemail",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fgemail.value.emailctrl",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fgnewpassword",{"_index":842,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.fgnewpassword.value.passwordctrl",{"_index":848,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.fgoldpassword",{"_index":840,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.fgoldpassword.value.passwordctrl",{"_index":847,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.fgpassword",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fgpassword.value.passwordctrl",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formbuilder.group",{"_index":839,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EmailDialogComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.getaddressfromform",{"_index":90,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.getauthdata",{"_index":660,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.getcontactpersonfromform",{"_index":891,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.geteventfromform",{"_index":713,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.getevents",{"_index":1366,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.getevents(startamount",{"_index":1254,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getevents(this.startamount",{"_index":1249,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.geteventsonroutechanged(this.startamount",{"_index":1244,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getrequstedevents(startamount",{"_index":1251,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.gettokenexpirationdate(token",{"_index":618,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.getuserevents(startamount",{"_index":1253,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getuserid",{"_index":603,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.handleerrormessage",{"_index":1038,"title":{},"body":{"components/EditUsersComponent.html":{},"components/LoginComponent.html":{}}}],["this.http",{"_index":1480,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.delete(this.backedend_url",{"_index":636,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["this.http.get",{"_index":1474,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get('http://localhost:3000/event/user/events",{"_index":1499,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(this.backedend_url",{"_index":632,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["this.http.post('http://localhost:3000/user/declinedmail",{"_index":1530,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.post('http://localhost:3000/user/publishedmail",{"_index":1533,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.post(this.backedend_url",{"_index":606,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["this.http.put(this.backedend_url",{"_index":627,"title":{},"body":{"injectables/AuthenticateService.html":{},"injectables/EventService.html":{}}}],["this.imagepreview",{"_index":729,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.initaddressform",{"_index":83,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.initchangepasswordform",{"_index":831,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.initcontactform",{"_index":887,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.initeventform",{"_index":708,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.initloginform",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.initsignupform",{"_index":1621,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.isaddressformvalid",{"_index":983,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.isallselected",{"_index":1378,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.isauthenticated",{"_index":614,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.iscollapsed",{"_index":1269,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.iscontactformvalid",{"_index":985,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.iseventformvalid",{"_index":984,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.isloading",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isuserauthenticated",{"_index":1240,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.jwt",{"_index":613,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.jwthelper.gettokenexpirationdate(token",{"_index":643,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.loginform",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":650,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.maxdate",{"_index":785,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.message",{"_index":835,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/SignUpComponent.html":{}}}],["this.messagelistener.asobservable",{"_index":1469,"title":{},"body":{"injectables/EventService.html":{}}}],["this.messagelistener.next",{"_index":1488,"title":{},"body":{"injectables/EventService.html":{}}}],["this.messagesubs",{"_index":832,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/SignUpComponent.html":{}}}],["this.messagesubs.unsubscribe",{"_index":988,"title":{},"body":{"components/CreateEventComponent.html":{},"components/SignUpComponent.html":{}}}],["this.mode",{"_index":84,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EventFormComponent.html":{}}}],["this.paginator",{"_index":1037,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["this.reasonform",{"_index":1088,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":973,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventListComponent.html":{}}}],["this.router.navigate",{"_index":647,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EventListComponent.html":{}}}],["this.router.navigate(['/allevents",{"_index":620,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/CreateEventComponent.html":{}}}],["this.router.navigate(['/login",{"_index":490,"title":{},"body":{"guards/AuthGard.html":{}}}],["this.router.navigate(['requestedevents/true",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url",{"_index":1252,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.saveauthdata(token",{"_index":617,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.selectedtab",{"_index":986,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.selection",{"_index":1362,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.selection.clear",{"_index":1379,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.selection.select(row",{"_index":1381,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.selection.selected.length",{"_index":1375,"title":{},"body":{"components/EventListTableComponent.html":{}}}],["this.setadrressform(event.address",{"_index":87,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.setadrressform(this.eventservice.currentaddress",{"_index":93,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["this.setauthtimer(expiresin",{"_index":667,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.setauthtimer(tokenexpiresin",{"_index":612,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.setcontactform(event.contactperson",{"_index":888,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.setcontactform(this.eventservice.currentcontactperson",{"_index":893,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["this.seteventform(extracteventfromroot(eventroot",{"_index":710,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.seteventform(this.eventservice.currentevent",{"_index":715,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.setnewvalues(this.eventservice.currentrootevent",{"_index":712,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this.sidenav.toggle",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signupform",{"_index":1625,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.signupform.controls",{"_index":1626,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.signupform.invalid",{"_index":1627,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.statusemitter.emit(false",{"_index":125,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["this.statusemitter.emit(true",{"_index":124,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["this.submitted",{"_index":844,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.tokentimer",{"_index":648,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.updatedeventssubs",{"_index":1256,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["this.updatedeventssubs.unsubscribe",{"_index":1247,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.userid",{"_index":615,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EventListComponent.html":{}}}],["this.userisauthenticated",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.users",{"_index":633,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.userschangedsubject.asobservable",{"_index":602,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.userschangedsubject.next(this.users",{"_index":635,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.userschangedsubject.next(this.users.filter(user",{"_index":639,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["this.validatemaxenddate",{"_index":716,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["this_expr",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["thumb_up",{"_index":1299,"title":{},"body":{"components/EventListComponent.html":{}}}],["tid",{"_index":1171,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["til",{"_index":1680,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["tilbage",{"_index":128,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["tilmed",{"_index":1771,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["time.class",{"_index":685,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["time/date",{"_index":684,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["times",{"_index":1108,"title":{},"body":{"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{}}}],["title",{"_index":1308,"title":{},"body":{"components/EventListComponent.html":{}}}],["toggle::after",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesidenav",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":569,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["tokenexpiresin",{"_index":610,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["tokengetter",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["tokengetterfromstorage",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokentimer",{"_index":520,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["toolbar",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["toolbar.mat",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":136,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["top:0",{"_index":1317,"title":{},"body":{"components/EventListComponent.html":{}}}],["totalevents",{"_index":1408,"title":{},"body":{"injectables/EventService.html":{}}}],["transform",{"_index":860,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["transition",{"_index":140,"title":{},"body":{"components/AddressFormComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["translate",{"_index":861,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EventListComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["transparent",{"_index":139,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["true",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGard.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["trykke",{"_index":1495,"title":{},"body":{"injectables/EventService.html":{}}}],["tslib",{"_index":968,"title":{},"body":{"components/CreateEventComponent.html":{},"dependencies.html":{}}}],["tslint:disable",{"_index":671,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EventListTableComponent.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"guards/AuthGard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IContactPerson.html":{},"interfaces/IEvent.html":{},"interfaces/IMyEventRoot.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.validator",{"_index":694,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["type.validator.ts",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1507,"title":{},"body":{"injectables/EventService.html":{}}}],["typeof(control.value",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tysk",{"_index":1769,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["tyske",{"_index":1755,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["tyskland",{"_index":1745,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["tæt",{"_index":1651,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["ud",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["udfyld",{"_index":851,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["udpeget",{"_index":1768,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["uint8array(filereader.result",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ul",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":837,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"injectables/EventService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["underline",{"_index":1778,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["unit",{"_index":1899,"title":{},"body":{"index.html":{}}}],["up",{"_index":1547,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignUpComponent.html":{}}}],["up'},{'name",{"_index":193,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["up.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.css",{"_index":1601,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.html",{"_index":1602,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1600,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:14",{"_index":1618,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:15",{"_index":1619,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:16",{"_index":1613,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:17",{"_index":1616,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:18",{"_index":1614,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:19",{"_index":1615,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:20",{"_index":1617,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:21",{"_index":1607,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:23",{"_index":1612,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:25",{"_index":1610,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1608,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:56",{"_index":1620,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:59",{"_index":1611,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:73",{"_index":1609,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["updatedeventssubs",{"_index":1189,"title":{},"body":{"components/EventListComponent.html":{},"components/EventListTableComponent.html":{}}}],["updateevent",{"_index":1421,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent(id",{"_index":1453,"title":{},"body":{"injectables/EventService.html":{}}}],["updatevalueandvalidity",{"_index":725,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["url(\"https://source.unsplash.com/1600x900/?denmark",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["use",{"_index":1888,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":555,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{}}}],["user._id",{"_index":640,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["user.model",{"_index":600,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUsersComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["user/change",{"_index":628,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["user/login",{"_index":607,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["user/resetpassword",{"_index":642,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["user/signup",{"_index":631,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["useremail",{"_index":579,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{}}}],["userid",{"_index":521,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{}}}],["userisauthenticated",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["users",{"_index":522,"title":{},"body":{"injectables/AuthenticateService.html":{},"components/EditUsersComponent.html":{}}}],["users'},{'name",{"_index":175,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["users.component",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.css",{"_index":1009,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.html",{"_index":1010,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts",{"_index":1008,"title":{},"body":{"components/EditUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:15",{"_index":1023,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:16",{"_index":1025,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:17",{"_index":1030,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:18",{"_index":1027,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:19",{"_index":1026,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:20",{"_index":1016,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:24",{"_index":1020,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:34",{"_index":1019,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:44",{"_index":1018,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users.component.ts:50",{"_index":1021,"title":{},"body":{"components/EditUsersComponent.html":{}}}],["users/edit",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUsersComponent.html":{},"coverage.html":{}}}],["userschangedsubject",{"_index":523,"title":{},"body":{"injectables/AuthenticateService.html":{}}}],["userwithid",{"_index":597,"title":{"interfaces/UserWithID.html":{}},"body":{"injectables/AuthenticateService.html":{},"interfaces/User.html":{},"interfaces/UserWithID.html":{},"coverage.html":{}}}],["usevalue",{"_index":237,"title":{},"body":{"modules/AngularMaterialModule.html":{},"components/CreateEventComponent.html":{}}}],["util",{"_index":970,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{}}}],["valid",{"_index":123,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["validatemaxenddate",{"_index":783,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["validators",{"_index":72,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.compose([validators.required",{"_index":749,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["validators.email",{"_index":900,"title":{},"body":{"components/ContactPersonFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.max(120",{"_index":743,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["validators.maxlength(100",{"_index":901,"title":{},"body":{"components/ContactPersonFormComponent.html":{}}}],["validators.maxlength(2000",{"_index":740,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["validators.maxlength(25",{"_index":106,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["validators.maxlength(50",{"_index":737,"title":{},"body":{"interfaces/Category.html":{},"components/ContactPersonFormComponent.html":{},"components/EventFormComponent.html":{}}}],["validators.maxlength(60",{"_index":101,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["validators.minlength(10",{"_index":1090,"title":{},"body":{"components/EmailDialogComponent.html":{}}}],["validators.required",{"_index":100,"title":{},"body":{"components/AddressFormComponent.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["value",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"interfaces/Category.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":161,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["variable",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1922,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velkommen",{"_index":1134,"title":{},"body":{"components/EventDialogComponent.html":{}}}],["venskabet",{"_index":1744,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["venskabsår",{"_index":1770,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["version",{"_index":1874,"title":{},"body":{"index.html":{}}}],["vi",{"_index":1687,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["via",{"_index":1903,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/EditUsersComponent.html":{},"components/EventFormComponent.html":{},"components/EventListTableComponent.html":{}}}],["viewchild('drawer",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('endtime",{"_index":702,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["viewchild('starttime",{"_index":700,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["viewchild(matpaginator",{"_index":1029,"title":{},"body":{"components/EditUsersComponent.html":{},"components/EventListTableComponent.html":{}}}],["viewvalue",{"_index":681,"title":{},"body":{"interfaces/Category.html":{},"components/EventFormComponent.html":{}}}],["vil",{"_index":1665,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["vis",{"_index":1301,"title":{},"body":{"components/EventListComponent.html":{}}}],["vise",{"_index":1305,"title":{},"body":{"components/EventListComponent.html":{}}}],["void",{"_index":57,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticateService.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"injectables/EventService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["vores",{"_index":1741,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["vælg",{"_index":1172,"title":{},"body":{"components/EventFormComponent.html":{}}}],["værdig",{"_index":1682,"title":{},"body":{"components/StartSiteComponent.html":{}}}],["være",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["webkit",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CreateEventComponent.html":{}}}],["white",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/HeaderComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["whitelisteddomains",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":134,"title":{},"body":{"components/AddressFormComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/ContactPersonFormComponent.html":{},"components/CreateEventComponent.html":{},"components/EditUsersComponent.html":{},"components/EmailDialogComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/EventListTableComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/StartSiteComponent.html":{}}}],["x1f629;&#x1f629",{"_index":1306,"title":{},"body":{"components/EventListComponent.html":{}}}],["z",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["zipcode",{"_index":116,"title":{},"body":{"components/AddressFormComponent.html":{},"components/EventListComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IMyEventRoot.html":{}}}],["zipcodectrl",{"_index":105,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["zipcodeform",{"_index":104,"title":{},"body":{"components/AddressFormComponent.html":{}}}],["zone.js",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddressFormComponent.html":{"url":"components/AddressFormComponent.html","title":"component - AddressFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddressFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/address-form/address-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-form\n            \n\n            \n                styleUrls\n                ./address-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./address-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitOnStatusChanged\n                            \n                            \n                                getAddressFromForm\n                            \n                            \n                                initAddressForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAdrressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusEmitter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/address-form/address-form.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/address-form/address-form.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusEmitter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/address-form/address-form.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitOnStatusChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitOnStatusChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddressFromForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddressFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAddressForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitAddressForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAdrressForm\n                        \n                        \n                    \n                \n            \n            \n                \nsetAdrressForm(address: IAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/address-form/address-form.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                IAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/address-form/address-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {  EventService } from '../event.service';\nimport { Subscription } from 'rxjs';\nimport { IAddress } from '../IAddress.interface';\n\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-address-form',\n  templateUrl: './address-form.component.html',\n  styleUrls: ['./address-form.component.css']\n})\n\nexport class AddressFormComponent implements OnInit, OnDestroy {\n\n  addressForm: FormGroup;\n  @Input() mode;\n  @Output() statusEmitter: EventEmitter = new EventEmitter();\n\n  constructor(private builder: FormBuilder,\n              private eventService: EventService) { }\n\n  ngOnInit() {\n    this.initAddressForm();\n    if (this.mode === 'edit') {\n      this.eventService.getEditEventListener().subscribe(event => {\n        this.setAdrressForm(event.address);\n      });\n\n      this.addressForm.valueChanges.subscribe(() => {\n        this.eventService.currentRootEvent.address = this.getAddressFromForm();\n      });\n    }\n    if (this.mode === 'create') {\n      if (this.eventService.currentAddress) {\n        this.setAdrressForm(this.eventService.currentAddress);\n      }\n      this.addressForm.valueChanges.subscribe(() => {\n\n        this.eventService.currentAddress = this.getAddressFromForm();\n      });\n\n    }\n    this.emitOnStatusChanged();\n\n  }\n\n  initAddressForm() {\n\n    this.addressForm = this.builder.group({\n\n      cityForm:  this.builder.group({\n        cityCtrl: [null, [Validators.required, Validators.maxLength(60)]]\n      }),\n\n      lineForm:  this.builder.group({\n        lineCtrl: [null, [Validators.required, Validators.maxLength(60)]]\n      }),\n      zipCodeForm: this.builder.group({\n        zipCodeCtrl: [null, [Validators.required, Validators.maxLength(25)]]\n      })\n    });\n\n  }\n\n  setAdrressForm(address: IAddress) {\n    this.addressForm.get('cityForm').setValue({\n      cityCtrl: address.city\n    });\n\n    this.addressForm.get('lineForm').setValue({\n      lineCtrl: address.line\n    });\n\n    this.addressForm.get('zipCodeForm').setValue({\n      zipCodeCtrl: address.zipCode\n    });\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  getAddressFromForm() {\n    const address: IAddress = {\n       city: this.addressForm.get('cityForm').value.cityCtrl,\n       zipCode: this.addressForm.get('zipCodeForm').value.zipCodeCtrl,\n       line: this.addressForm.get('lineForm').value.lineCtrl\n    };\n    return address;\n  }\n\n  emitOnStatusChanged() {\n    this.addressForm.statusChanges.subscribe(status => {\n      if (status === 'VALID') {\n        this.statusEmitter.emit(true);\n      } else {\n        this.statusEmitter.emit(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n     \n     \n        \n\n          \n            \n               Addresse \n              \n                \n              \n              \n            \n                Næste\n                \n            \n          \n  \n          \n            \n               By \n              \n                  \n              \n              \n                Tilbage\n                Næste\n                \n            \n          \n  \n          \n            \n               Postnummer\n              \n                \n              \n              \n                Tilbage\n                Næste\n                \n            \n          \n        \n     \n      \n    \n    \n\n    \n                \n                    ./address-form.component.css\n                \n                \nmat-card {\n    margin: auto;\n    width: 85%;\n    margin-top: 1rem;\n    background: transparent;\n    transition: none !important;\n    box-shadow: none !important;\n\n}\n\n\nmat-horizontal-stepper{\n  background: transparent;\n}\n\nmat-step{\n  background: transparent;\n}\n\nform{\n  background: transparent;\n}\n\nng-template{\n  background: transparent;\n}\n\n.image-preview {\n    height: 5rem;\n    margin: 1rem 0;\n  }\n  \n  .image-preview img {\n    height: 100%;\n  }\n\n  mat-form-field{\n    width: 100%;\n    background: transparent;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       Addresse                                                                                       Næste                                                                             By                                                                             Tilbage                Næste                                                                             Postnummer                                                                          Tilbage                Næste                                                             '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularMaterialModule.html":{"url":"modules/AngularMaterialModule.html","title":"module - AngularMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/anuglar-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatListModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatProgressBarModule,\n    MatNativeDateModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatIconModule,\n    MatTabsModule,\n    MAT_DIALOG_DATA,\n    MatGridListModule,\n    MatTableModule,\n    MatCheckboxModule,\n  } from '@angular/material';\n\n\n@NgModule({\n\n  imports: [MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatListModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatProgressBarModule,\n    MatNativeDateModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatIconModule,\n    MatTabsModule,\n    MatGridListModule],\n    exports: [\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatListModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatProgressBarModule,\n    MatNativeDateModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatIconModule,\n    MatTabsModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatGridListModule],\n\n    providers: [ { provide: MAT_DIALOG_DATA, useValue: {}}]\n})\nexport class AngularMaterialModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoading\n                            \n                            \n                                sidenav\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onRequestedEvents\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticateService, breakpointObserver: BreakpointObserver, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRequestedEvents\n                        \n                        \n                    \n                \n            \n            \n                \nonRequestedEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { AuthenticateService } from './Auth/Authenticate.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { MatSidenav } from '@angular/material';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  @ViewChild('drawer') sidenav: MatSidenav;\n  isLoading;\n\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  );\n\n  constructor(private authService: AuthenticateService, private breakpointObserver: BreakpointObserver, private router: Router) {}\n  ngOnInit() {\n    this.authService.authenticateAutomatically();\n    this.userIsAuthenticated = this.authService.getIsAuthenticated();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAutheticated => {\n    this.userIsAuthenticated = isAutheticated;\n  });\n\n}\n\nonRequestedEvents() {\n  this.isLoading = true;\n  this.router.navigate(['requestedEvents/true']);\n  this.isLoading = false;\n}\n\nonLogout() {\n  this.isLoading = true;\n  this.authService.logout();\n  this.isLoading = false;\n}\nngOnDestroy() {\n  this.authListenerSubs.unsubscribe();\n}\n\ntoggleSidenav() {\n  this.sidenav.toggle();\n}\n\n}\n\n    \n\n    \n        \n\n  \n     Menu\n    \n\n      \n        event\n        Mine Events\n\n      \n          notification_important\n        Requested events\n    \n\n  \n\n  \n\n    \n\n        \n          menu\n        \n\n\n      \n        \n        \n          \n            \n               Events\n            \n          \n        \n        \n        \n          \n\n              \n                   New Event\n                \n          \n        \n\n        \n          \n\n              \n                   Log in\n                \n          \n        \n\n        \n          \n              \n                  \n                    \n                      settings\n                    \n                    \n                      Opret Bruger\n                       Ændre profil\n                       Skift adgangskode\n                       Opdater/slet brugere\n                      Log Ud\n        \n                    \n                  \n                \n        \n          \n        \n\n\n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \nmat-sidenav-container{\n  background: linear-gradient( rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) ), url(\"https://source.unsplash.com/1600x900/?denmark\") no-repeat center center fixed; \n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  height: 100%; \n}\n\n\nmat-sidenav-container{\n  background-color: rgba(0, 0, 0, 0.836)\n}\n.sidenav-container {\n    height: 100%;\n  }\n\n  mat-spinner{\n    margin: auto;\n  }\n\nmat-sidenav-content{\n  margin: auto;\n}\n  \n.sidenav {\n    width: 200px;\n    background:transparent;\n    color: white;\n    font-weight: 800;\n  }\n  \n  .sidenav .mat-toolbar {\n    background-color:transparent;\n    \n  }\n  \n  .mat-toolbar.mat-primary {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background: transparent;\n    color: black;\n\n  }\n  \nmat-toolbar{\n  color: black;\n  background-color:transparent;\n \n}\n\nbutton:hover{\n  color: royalblue;\n \n }\n\n button {\n  color: white;\n  background: transparent; \n  \n }\n.spacer {\n  flex: 1 1 auto;\n}\n .col{\n   padding: 0;\n   border: 0;\n }\n .dropdown-toggle::after {\n  display:none;\n}\n.events{\n  flex:1 1 auto;\n}\n#dropdown {\n  width: 70px;\n  height: 36px;\n  background:rgba(255,255,255,0.9);\n}\n\nul{\n  text-decoration: none;\n  border-style: none; \n  list-style: none;\n}\n\n#list-item-icon {\nmargin-right: 0.4cm;\n\n}\n\na:hover {\n  color:royalblue\n  }\n\n\n  #dropdown{\n    background-color: transparent;\n    border-color: transparent;\n    color: white;\n  }\n\n  #dropdown :hover{\n    color: royalblue;\n  }\n  .ngDropDown{\n    background-color: transparent;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Menu                  event        Mine Events                notification_important        Requested events                              menu                                                                   Events                                                                                         New Event                                                                                     Log in                                                                                                                              settings                                                              Opret Bruger                       Ændre profil                       Skift adgangskode                       Opdater/slet brugere                      Log Ud                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressFormComponent\n\nAddressFormComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressFormComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nContactPersonFormComponent\n\nContactPersonFormComponent\n\nAppModule -->\n\nContactPersonFormComponent->AppModule\n\n\n\n\n\nCreateEventComponent\n\nCreateEventComponent\n\nAppModule -->\n\nCreateEventComponent->AppModule\n\n\n\n\n\nEditUsersComponent\n\nEditUsersComponent\n\nAppModule -->\n\nEditUsersComponent->AppModule\n\n\n\n\n\nEmailDialogComponent\n\nEmailDialogComponent\n\nAppModule -->\n\nEmailDialogComponent->AppModule\n\n\n\n\n\nEventDialogComponent\n\nEventDialogComponent\n\nAppModule -->\n\nEventDialogComponent->AppModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nAppModule -->\n\nEventFormComponent->AppModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nAppModule -->\n\nEventListComponent->AppModule\n\n\n\n\n\nEventListTableComponent\n\nEventListTableComponent\n\nAppModule -->\n\nEventListTableComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nStartSiteComponent\n\nStartSiteComponent\n\nAppModule -->\n\nStartSiteComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressFormComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ChangePasswordComponent\n                        \n                        \n                            ContactPersonFormComponent\n                        \n                        \n                            CreateEventComponent\n                        \n                        \n                            EditUsersComponent\n                        \n                        \n                            EmailDialogComponent\n                        \n                        \n                            EventDialogComponent\n                        \n                        \n                            EventFormComponent\n                        \n                        \n                            EventListComponent\n                        \n                        \n                            EventListTableComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SignUpComponent\n                        \n                        \n                            StartSiteComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EmailDialogComponent\n                        \n                        \n                            EventDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AngularMaterialModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEventComponent } from './Event/create-event/create-event.component';\nimport { EventListComponent } from './Event/event-list/event-list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './Auth/login/login.component';\nimport { SignUpComponent } from './Auth/sign-up/sign-up.component';\nimport { AuthInterceptor } from './Auth/auth.interceptor';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { tokenGetterFromStorage } from './Auth/token.middleware';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { EventFormComponent } from './Event/event-form/event-form.component';\nimport { AddressFormComponent } from './Event/address-form/address-form.component';\nimport { ContactPersonFormComponent } from './Event/contact-person-form/contact-person-form.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { NgbModule, NgbTimepickerModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EventDialogComponent } from './Event/event-dialog/event-dialog.component';\nimport { NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ChangePasswordComponent } from './Auth/change-password/change-password.component';\nimport { AngularMaterialModule } from './anuglar-material.module';\nimport { StartSiteComponent } from './start-site/start-site.component';\nimport { EmailDialogComponent } from './Event/email-dialog/email-dialog.component';\nimport { EditUsersComponent } from './Auth/edit-users/edit-users.component';\nimport { EventListTableComponent } from './Event/event-list-table/event-list-table.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEventComponent,\n    EventListComponent,\n    HeaderComponent,\n    LoginComponent,\n    SignUpComponent,\n    EventFormComponent,\n    AddressFormComponent,\n    ContactPersonFormComponent,\n    EventDialogComponent,\n    ChangePasswordComponent,\n    StartSiteComponent,\n    EmailDialogComponent,\n    EditUsersComponent,\n    EventListTableComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgbModule,\n    NgbTimepickerModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbAlertModule,\n    NgbDropdownModule,\n    AngularMaterialModule,\n    JwtModule.forRoot(\n      {\n        config: {\n          tokenGetter: tokenGetterFromStorage,\n          whitelistedDomains: ['http://localhost:4200/'],\n          blacklistedRoutes: []\n        }\n      }),\n    LayoutModule,\n  ],\n  entryComponents: [\n    EventDialogComponent,\n    EmailDialogComponent\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateEventComponent } from './Event/create-event/create-event.component';\nimport { EventListComponent } from './Event/event-list/event-list.component';\nimport { LoginComponent } from './Auth/login/login.component';\nimport { SignUpComponent } from './Auth/sign-up/sign-up.component';\nimport { AuthGard } from './Auth/auth.guard';\nimport { ChangePasswordComponent } from './Auth/change-password/change-password.component';\nimport { StartSiteComponent } from './start-site/start-site.component';\nimport { EditUsersComponent } from './Auth/edit-users/edit-users.component';\nimport { EventListTableComponent } from './Event/event-list-table/event-list-table.component';\n\nconst routes: Routes = [\n  {\n    path: 'allEvents',\n    component: EventListComponent\n  },\n  {\n    path: '',\n    component: StartSiteComponent\n  },\n\n  {\n    path: 'create',\n    component: CreateEventComponent\n  },\n\n  {\n    path: 'edit/:eventId',\n    component: CreateEventComponent,\n    canActivate: [AuthGard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignUpComponent\n  },\n  {\n    path: 'requestedEvents/:isRequstedEvents',\n    component: EventListComponent\n  },\n  {\n    path: 'events/user',\n    component: EventListComponent\n  },\n  {\n    path: 'changePassword',\n    component: ChangePasswordComponent\n  },\n  {\n    path: 'editUsers',\n    component: EditUsersComponent\n  },\n  {\n    path: 'events',\n    component: EventListTableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGard]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGard.html":{"url":"guards/AuthGard.html","title":"guard - AuthGard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/Auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate } from '@angular/router/src/utils/preactivation';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthenticateService } from './Authenticate.service';\n\n@Injectable()\nexport class AuthGard implements CanActivate {\n\n    path: ActivatedRouteSnapshot[];\n    route: ActivatedRouteSnapshot;\n\n    constructor(private authService: AuthenticateService, private router: Router) { }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): boolean | Observable | Promise {\n\n        const isAuthenticated = this.authService.getIsAuthenticated();\n        if (isAuthenticated) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n        return isAuthenticated;\n    }\n\n\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Auth/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authServie: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/auth.interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authServie\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/auth.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticateService } from './Authenticate.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\nconstructor( private authServie: AuthenticateService) {}\n\n    intercept(req: HttpRequest, next: HttpHandler) {\n        const authToken = this.authServie.getToken();\n\n        const authRequest = req.clone({\n            headers: req.headers.set('authorization', 'Bearer ' + authToken)\n        });\n        return next.handle(authRequest);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Auth/auth.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\n\n@NgModule({\n    exports: []\n})\nexport class AuthModule{\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticateService.html":{"url":"injectables/AuthenticateService.html","title":"injectable - AuthenticateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Auth/Authenticate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListner\n                            \n                            \n                                    Private\n                                BACKEDEND_URL\n                            \n                            \n                                    Private\n                                errorListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                jwt\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                    Private\n                                usersChangedSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticateAutomatically\n                            \n                            \n                                changePassword\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuthenticated\n                            \n                            \n                                getMessageListener\n                            \n                            \n                                getToken\n                            \n                            \n                                getTokenExpirationDate\n                            \n                            \n                                getUserId\n                            \n                            \n                                getUsersChangedListener\n                            \n                            \n                                isAdmin\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetUserPassword\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/Authenticate.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticateAutomatically\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticateAutomatically()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(oldPassword, newPassword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldPassword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { jwt: any; expirationDate: any; userId: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessageListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessageListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTokenExpirationDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetTokenExpirationDate(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersChangedListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersChangedListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetUserPassword(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/Authenticate.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BACKEDEND_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://newmousleheventappp.herokuapp.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jwt\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NodeJS.Timer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'arranger'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserWithID[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersChangedSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/Authenticate.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, UserWithID } from './User.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticateService {\n    private users: UserWithID[];\n    private usersChangedSubject = new Subject();\n    private isAuthenticated = false;\n    private jwt;\n    private authStatusListner = new Subject();\n    private userId = 'arranger';\n    private tokenTimer: NodeJS.Timer;\n    private errorListener = new Subject();\n    private BACKEDEND_URL = 'https://newmousleheventappp.herokuapp.com';\n    constructor(private http: HttpClient, private router: Router, private jwtHelper: JwtHelperService) {\n\n    }\n\n\ngetUsersChangedListener() {\n return this.usersChangedSubject.asObservable();\n}\n\n\nisAdmin() {\n    if (this.getUserId() === '5cd9b7145437172e109998d8') {\n        return true;\n    }\n    return false;\n}\n    getMessageListener() {\n        return this.errorListener.asObservable();\n    }\n\n    login(user: User) {\n        this.http.post(this.BACKEDEND_URL + '/user/login/', user)\n            .subscribe(data => {\n                const token = data.token;\n\n                if (token) {\n                    const tokenExpiresIn = data.expiresIn;\n                    this.setAuthTimer(tokenExpiresIn);\n                    this.jwt = token;\n                    this.isAuthenticated = true;\n                    this.userId = data.userId;\n                    this.saveAuthData(token, this.getTokenExpirationDate(token), this.userId);\n                    this.authStatusListner.next(true);\n                    this.router.navigate(['/allEvents']);\n                }\n            }, errorData => {\n                this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n            });\n    }\n\n\n    changePassword(oldPassword, newPassword) {\n        const user = {\n            oldPassword,\n            newPassword\n        };\n        this.http.put(this.BACKEDEND_URL + '/user/change/', user)\n        .subscribe(result => {\n            this.errorListener.next({message: result.message, isErrorMessage: false, fadingTime: 3000});\n        }, errorData => {\n            this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n        });\n    }\n\n    createUser(user: User) {\n\n        this.http.post(this.BACKEDEND_URL + '/user/signup/', user)\n            .subscribe(result => {\n                this.errorListener.next({message: result.message, isErrorMessage: false, fadingTime: 3000});\n                this.router.navigate(['/allEvents']);\n            }, errorData => {\n                this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n            }\n\n            );\n    }\n\n\n     getAllUsers() {\n        this.http.get(this.BACKEDEND_URL + '/user/')\n            .subscribe(result => {\n                this.users = [...result.user];\n                this.usersChangedSubject.next(this.users);\n            }, errorData => {\n                this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n            }\n            );\n    }\n\n    deleteUser(id) {\n        this.http.delete(this.BACKEDEND_URL + '/user/' + id)\n        .subscribe(response => {\n                this.errorListener.next({message: response.message, isErrorMessage: false, fadingTime: 3000});\n                this.usersChangedSubject.next(this.users.filter(user => user._id !== id));\n            }, errorData => {\n                this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n            }\n        );\n    }\n\n    resetUserPassword(userEmail: string) {\n        console.log(userEmail);\n        this.http.put(this.BACKEDEND_URL + '/user/resetPassword', {email: userEmail})\n        .subscribe(response => {\n            this.errorListener.next({message: response.message, isErrorMessage: false, fadingTime: 3000});\n        }, errorData => {\n            this.errorListener.next({message: errorData.error.message, isErrorMessage: true, fadingTime: 3000});\n        }\n    );\n    }\n    getTokenExpirationDate(token) {\n        return this.jwtHelper.getTokenExpirationDate(token);\n    }\n    logout() {\n        this.jwt = false;\n        this.isAuthenticated = false;\n        this.authStatusListner.next(false);\n        clearTimeout(this.tokenTimer);\n        this.clearAuthData();\n        this.userId = 'arranger';\n        this.router.navigate(['']);\n    }\n\n    private setAuthTimer(duration: number) {\n        this.tokenTimer = setTimeout(() => {\n            this.logout();\n        }, duration * 1000);\n    }\n\n    private saveAuthData(token: string, expirationDate: Date, userId: string) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('expiration', expirationDate.toISOString());\n        localStorage.setItem('userId', userId);\n    }\n\n    private clearAuthData() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('expiration');\n        localStorage.removeItem('userId');\n    }\n\n    authenticateAutomatically() {\n        const authData = this.getAuthData();\n        if (!authData) {\n            return;\n        }\n        const now = new Date();\n        const expiresIn = authData.expirationDate.getTime() - now.getTime();\n\n        if (expiresIn > 0) {\n            this.jwt = authData.jwt,\n            this.isAuthenticated = true;\n            this.userId = authData.userId;\n            this.setAuthTimer(expiresIn / 1000);\n            this.authStatusListner.next(true);\n        }\n\n    }\n\n    private getAuthData() {\n        const token = localStorage.getItem('token');\n        const expirationDate = localStorage.getItem('expiration');\n        const userId = localStorage.getItem('userId');\n\n        if (!token || !expirationDate) {\n            return;\n        }\n        return {\n            jwt: token,\n            // tslint:disable-next-line: object-literal-shorthand\n            expirationDate: new Date(expirationDate),\n// tslint:disable-next-line: object-literal-shorthand\n            userId: userId\n        };\n\n    }\n\n    getToken() {\n        return this.jwt;\n    }\n    getIsAuthenticated() {\n        return this.isAuthenticated;\n    }\n\n    getAuthStatusListener() {\n        return this.authStatusListner.asObservable();\n    }\n    getUserId() {\n\n        return this.userId;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/event-form/event-form.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  Output,\n  ViewChild,\n  Input,\n  OnDestroy,\n  EventEmitter,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {  EventService } from '../event.service';\nimport { OwlDateTime } from 'ng-pick-datetime/date-time/date-time.class';\nimport { IEvent } from '../IEvent.interface';\nimport { extractEventFromRoot } from 'src/app/helper/extractEventFromRoot';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\nimport { mimeType } from '../mime-type.validator';\n\nexport interface Category {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.css']\n})\nexport class EventFormComponent implements OnInit, OnDestroy {\n  categories: Category[] = [\n    { value: 'Party', viewValue: 'Party' },\n    { value: 'Gathering', viewValue: 'Gathering' },\n    { value: 'Bio', viewValue: 'Bio' }\n  ];\n\n  eventForm: FormGroup;\n  @ViewChild('startTime') startTime: OwlDateTime;\n  @ViewChild('endTime') endTime: OwlDateTime;\n  @Input() mode: string;\n  @Output() statusEmitter: EventEmitter = new EventEmitter();\n  imagePreview: string;\n  minDate = new Date();\n  maxDate = new Date();\n  imagePath: any;\n\n  constructor(private builder: FormBuilder, private eventService: EventService) {}\n  ngOnInit() {\n    this.initEventForm();\n\n    if (this.mode === 'edit') {\n      this.eventService.getEditEventListener().subscribe(eventRoot => {\n        this.setEventForm(extractEventFromRoot(eventRoot));\n      });\n\n      this.eventForm.valueChanges.subscribe(() => {\n        this.setNewValues(this.eventService.currentRootEvent, this.getEventFromForm());\n      });\n    }\n\n    if (this.mode === 'create') {\n      if (this.eventService.currentEvent) {\n        this.setEventForm(this.eventService.currentEvent);\n      }\n      this.eventForm.valueChanges.subscribe(() => {\n\n        this.eventService.currentEvent = this.getEventFromForm();\n      });\n    }\n\n    this.validateMaxEndDate();\n    this.emitOnStatusChanged();\n  }\n\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.eventForm.get('imageForm').patchValue({ imagePathCtrl: file });\n    this.eventForm\n      .get('imageForm')\n      .get('imagePathCtrl')\n      .updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  initEventForm() {\n    this.eventForm = this.builder.group({\n      themeForm: this.builder.group({\n        themeCtrl: [null, Validators.required]\n      }),\n      nameForm: this.builder.group({\n        nameCtrl: [null, [Validators.required, Validators.maxLength(50)]]\n      }),\n      descForm: this.builder.group({\n        descCtrl: [null, [Validators.required, Validators.maxLength(2000)]]\n      }),\n      ageLimitForm: this.builder.group({\n        ageLimitCtrl: [null, [Validators.required, Validators.max(120)]]\n      }),\n      startTimeForm: this.builder.group({\n        startTimeCtrl: ['', Validators.required]\n      }),\n      endTimeForm: this.builder.group({\n        endTimeCtrl: ['', Validators.required]\n      }),\n      imageForm: this.builder.group({\n        imagePathCtrl: ['', Validators.compose([Validators.required]), mimeType]\n      }),\n      costForm: this.builder.group({\n        costCtrl: [null, Validators.required]\n      })\n    });\n  }\n\n\n  setNewValues(rootEvent: IMyEventRoot, event: IEvent) {\n    rootEvent.name = event.name;\n    rootEvent.cost = event.cost;\n    rootEvent.description = event.description;\n    rootEvent.ageLimit = event.ageLimit;\n    rootEvent.theme = event.theme;\n    rootEvent.imagePath = event.imagePath;\n    rootEvent.startTime = event.startTime;\n    rootEvent.endTime = event.endTime;\n  }\n  setEventForm(event: IEvent) {\n\n      this.eventForm.get('endTimeForm').setValue({\n        endTimeCtrl: new Date()\n      });\n\n      this.eventForm.get('themeForm').setValue({\n      themeCtrl: event.theme\n    });\n      this.eventForm.get('nameForm').setValue({\n      nameCtrl: event.name\n    });\n      this.eventForm.get('descForm').setValue({\n      descCtrl: event.description\n    });\n      this.eventForm.get('ageLimitForm').setValue({\n      ageLimitCtrl: event.ageLimit\n    });\n      this.eventForm.get('imageForm').setValue({\n      imagePathCtrl: event.imagePath\n    });\n      this.eventForm.get('costForm').setValue({\n      costCtrl: event.cost\n    });\n      this.eventForm.get('startTimeForm').setValue({\n      startTimeCtrl: new Date(event.startTime)\n    });\n\n      this.eventForm.get('endTimeForm').setValue({\n      endTimeCtrl: new Date(event.endTime)\n    });\n      this.imagePreview = this.eventForm.get('imageForm').value.imagePathCtrl;\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  get fControls() {\n    return this.eventForm.controls;\n  }\n  validateMaxEndDate() {\n    this.eventForm.get('startTimeForm').valueChanges.subscribe(date => {\n      this.maxDate = date.startTimeCtrl;\n    });\n  }\n   getEventFromForm() {\n  const event: IEvent = {\n    ageLimit: this.fControls.ageLimitForm.get('ageLimitCtrl').value,\n    cost: this.fControls.costForm.get('costCtrl').value,\n    description: this.fControls.descForm.get('descCtrl').value,\n    endTime: this.fControls.endTimeForm.get('endTimeCtrl').value,\n    startTime: this.fControls.startTimeForm.get('startTimeCtrl').value,\n    imagePath: this.fControls.imageForm.get('imagePathCtrl').value,\n    theme: this.fControls.themeForm.get('themeCtrl').value,\n    name: this.fControls.nameForm.get('nameCtrl').value\n  };\n  return event;\n  }\n\n  emitOnStatusChanged() {\n    this.eventForm.statusChanges.subscribe(status => {\n      if (status === 'VALID') {\n        this.statusEmitter.emit(true);\n      } else {\n        this.statusEmitter.emit(false);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Auth/change-password/change-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                changePasswordForm\n                            \n                            \n                                fgNewPassword\n                            \n                            \n                                fgOldPassword\n                            \n                            \n                                message\n                            \n                            \n                                messageSubs\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initChangePasswordForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/change-password/change-password.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initChangePasswordForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitChangePasswordForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/change-password/change-password.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/change-password/change-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/change-password/change-password.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgNewPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgOldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/Auth/change-password/change-password.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../User.model';\nimport { AuthenticateService } from '../Authenticate.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: FormGroup;\n  fgOldPassword: FormGroup;\n  fgNewPassword: FormGroup;\n  submitted = false;\n  messageSubs: Subscription;\n  message: { message: string; isErrorMessage: boolean; fadingTime: number; };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthenticateService\n  ) {}\n\n  ngOnInit() {\n    this.changePasswordForm = this.initChangePasswordForm();\n\n    this.messageSubs = this.authService.getMessageListener()\n    .subscribe(messageData => {\n      this.message = messageData;\n      setTimeout(() => {\n        this.message = undefined;\n      }, messageData.fadingTime);\n    });\n  }\n\n  initChangePasswordForm() {\n    return this.formBuilder.group({\n      fgOldPassword: this.fgOldPassword = this.formBuilder.group({\n        passwordCtrl: ['', Validators.required]\n      }),\n      fgNewPassword: this.fgNewPassword = this.formBuilder.group({\n        passwordCtrl: ['', Validators.required]\n      })\n    });\n  }\n  get f() {\n    return this.changePasswordForm.controls;\n  }\n\n  onChange() {\n    this.submitted = true;\n    if (this.changePasswordForm.invalid) {\n      return;\n    }\n\n    const oldPaasword = this.fgOldPassword.value.passwordCtrl;\n    const newPassword = this.fgNewPassword.value.passwordCtrl;\n\n    this.authService.changePassword(oldPaasword, newPassword);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n           Nuværende Adgangskode \n          \n            \n\n            \n              Udfyld adgangskoden feltet for at ændre koden\n            \n          \n          \n            Næste\n          \n        \n      \n\n      \n        \n           Ny Adgangskode \n          \n            \n\n            \n              Udfyld adgangskoden feltet for at ændre koden\n            \n          \n\n        \n      \n\n    \n  \n\n\n  \n    Ændre\n  \n\n\n\n\n\n  {{message.message}} \n\n\n\n  {{message.message}} \n\n\n\n    \n\n    \n                \n                    ./change-password.component.css\n                \n                mat-card{\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 50%;\n    background:rgba(255,255,255,0.9);\n\n}\n\n\nmat-form-field{\nwidth: 100%;\nbackground: transparent;\n\n}\n\nmat-horizontal-stepper{\n    background: transparent;\n}\n\nmat-step{\n    background: transparent;\n}\n\nform{\n    background: transparent;\n}\n\nng-template{\n    background: transparent;\n}\n\n#errorMessage{\n    background-color: rgb(255, 153, 153);\n    color: rgb(255, 255, 255);  \n    width: 50%;\n    margin: auto;\n}\n\n#successMessage{\n    background-color: rgb(196, 255, 196);\n    color: white;\n    width: 50%;\n    margin: auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Nuværende Adgangskode                                                 Udfyld adgangskoden feltet for at ændre koden                                            Næste                                                 Ny Adgangskode                                                 Udfyld adgangskoden feltet for at ændre koden                                                Ændre    {{message.message}}   {{message.message}} '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonFormComponent.html":{"url":"components/ContactPersonFormComponent.html","title":"component - ContactPersonFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/contact-person-form/contact-person-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person-form\n            \n\n            \n                styleUrls\n                ./contact-person-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                isFormValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitOnStatusChanged\n                            \n                            \n                                getContactPersonFromForm\n                            \n                            \n                                initContactForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setContactForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusEmitter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusEmitter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitOnStatusChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitOnStatusChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContactPersonFromForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetContactPersonFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initContactForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitContactForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContactForm\n                        \n                        \n                    \n                \n            \n            \n                \nsetContactForm(contactPerson: IContactPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contactPerson\n                                    \n                                                IContactPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/contact-person-form/contact-person-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, Input, OnDestroy, EventEmitter} from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { EventService } from '../event.service';\nimport { IContactPerson } from '../IContactPerson.interface';\n\n\n@Component({\n  selector: 'app-contact-person-form',\n  templateUrl: './contact-person-form.component.html',\n  styleUrls: ['./contact-person-form.component.css']\n})\nexport class ContactPersonFormComponent implements OnInit, OnDestroy {\n\n  contactForm: FormGroup;\n  @Input() mode;\n  @Output() statusEmitter = new EventEmitter();\n  isFormValid = false;\n\n  constructor(private builder: FormBuilder,\n              private eventService: EventService,\n  ) { }\n\n  ngOnInit() {\n\n    this.initContactForm();\n    this.emitOnStatusChanged();\n    if (this.mode === 'edit') {\n      this.eventService.getEditEventListener().subscribe(event => {\n        this.setContactForm(event.contactPerson);\n      });\n\n      this.contactForm.valueChanges.subscribe(() => {\n        this.eventService.currentRootEvent.contactPerson = this.getContactPersonFromForm();\n      });\n    }\n    if (this.mode === 'create') {\n      if (this.eventService.currentContactPerson) {\n        this.setContactForm(this.eventService.currentContactPerson);\n      }\n      this.contactForm.valueChanges.subscribe(() => {\n\n        this.eventService.currentContactPerson = this.getContactPersonFromForm();\n      });\n\n    }\n\n  }\n\n  initContactForm() {\n    this.contactForm = this.builder.group({\n      nameForm: this.builder.group({\n        contactNameCtrl: [null, [Validators.required, Validators.maxLength(50)]]\n      }),\n      phoneForm: this.builder.group({\n        contactPhoneCtrl: [null, [Validators.required, Validators.maxLength(50)]]\n      }),\n      emailForm: this.builder.group({\n          contactEmailCtrl: [null, [Validators.required, Validators.email, Validators.maxLength(100)]]\n        })\n    });\n  }\n\n  setContactForm(contactPerson: IContactPerson) {\n\n    this.contactForm.get('emailForm').setValue({\n      contactEmailCtrl: contactPerson.contactEmail\n    });\n\n    this.contactForm.get('nameForm').setValue({\n      contactNameCtrl: contactPerson.contactName\n    });\n\n    this.contactForm.get('phoneForm').setValue({\n      contactPhoneCtrl: contactPerson.contactPhone\n    });\n  }\n\n  getContactPersonFromForm() {\n    const person: IContactPerson = {\n       contactEmail: this.contactForm.get('emailForm').value.contactEmailCtrl,\n       contactName: this.contactForm.get('nameForm').value.contactNameCtrl,\n       contactPhone: this.contactForm.get('phoneForm').value.contactPhoneCtrl\n    };\n    return person;\n  }\n\n  emitOnStatusChanged() {\n\n    this.contactForm.statusChanges.subscribe(status => {\n      if (status === 'VALID') {\n        this.statusEmitter.emit(true);\n      } else {\n        this.statusEmitter.emit(false);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n\n    }\n  }\n\n\n\n    \n\n    \n        \n\n\n\n  \n  \n    \n       Fornavn/Efternavn \n      \n        \n      \n      \n       \n        Næste\n        \n    \n  \n\n  \n    \n       E-mail \n      \n        \n      \n      \n        Tilbage\n        Næste\n        \n    \n  \n\n  \n    \n       Telefon/Mobil nummer\n      \n          \n      \n      \n        Tilbage\n        \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./contact-person-form.component.css\n                \n                \nmat-card {\n    margin: auto;\n    width: 85%;\n    margin-top: 1rem;\n    background: transparent;\n    transition: none !important;\n    box-shadow: none !important;\n\n}\n\n\nmat-horizontal-stepper{\n  background: transparent;\n}\n\nmat-step{\n  background: transparent;\n}\n\nform{\n  background: transparent;\n}\n\nng-template{\n  background: transparent;\n}\n\n.image-preview {\n    height: 5rem;\n    margin: 1rem 0;\n  }\n  \n  .image-preview img {\n    height: 100%;\n  }\n\n  mat-form-field{\n    width: 100%;\n    background: transparent;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               Fornavn/Efternavn                                          Næste                           E-mail                                   Tilbage        Næste                           Telefon/Mobil nummer                                    Tilbage              '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEventComponent.html":{"url":"components/CreateEventComponent.html","title":"component - CreateEventComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateEventComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/create-event/create-event.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { showError: true }\n}\n                \n            \n\n\n            \n                selector\n                app-create-event\n            \n\n            \n                styleUrls\n                ./create-event.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-event.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventId\n                            \n                            \n                                isAddressFormValid\n                            \n                            \n                                isContactFormValid\n                            \n                            \n                                isEventFormValid\n                            \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                messageSubs\n                            \n                            \n                                minDate\n                            \n                            \n                                mode\n                            \n                            \n                                selectedTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkMode\n                            \n                            \n                                createdUpdatedEvent\n                            \n                            \n                                getAddressFormStatus\n                            \n                            \n                                getContactFormStatus\n                            \n                            \n                                getEventFormStatus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/create-event/create-event.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkMode\n                        \n                        \n                    \n                \n            \n            \n                \ncheckMode(eventId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createdUpdatedEvent\n                        \n                        \n                    \n                \n            \n            \n                \ncreatedUpdatedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddressFormStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddressFormStatus(isValid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isValid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContactFormStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetContactFormStatus(isValid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isValid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFormStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFormStatus(isValid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isValid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveEvent\n                        \n                        \n                    \n                \n            \n            \n                \nsaveEvent(submitBtn: MatButton)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/create-event/create-event.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submitBtn\n                                    \n                                            MatButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAddressFormValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isContactFormValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEventFormValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'create'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTab\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/create-event/create-event.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { EventService } from '../event.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Subscription } from 'rxjs';\nimport { __await } from 'tslib';\nimport { isUndefined } from 'util';\nimport { extractEventFromRoot } from 'src/app/helper/extractEventFromRoot';\nimport { MatButton } from '@angular/material';\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.css'],\n  providers: [\n    {\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: { showError: true }\n    }\n  ]\n})\nexport class CreateEventComponent implements OnInit, OnDestroy {\n  mode = 'create';\n  private eventId: string;\n  minDate = new Date();\n  selectedTab;\n  message: { message: string; isErrorMessage: boolean; fadingTime: number };\n  messageSubs: Subscription;\n  isContactFormValid: any;\n  isAddressFormValid: any;\n  isEventFormValid: any;\n  isLoading;\n  constructor(\n    private eventService: EventService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.checkMode(this.eventId);\n\n    this.messageSubs = this.eventService\n      .getMessageListener()\n      .subscribe(messageData => {\n        this.message = messageData;\n        setTimeout(() => {\n          this.message = undefined;\n        }, messageData.fadingTime);\n        setTimeout(() => {\n          this.router.navigate(['/allEvents']);\n        }, messageData.fadingTime);\n      });\n  }\n\n  checkMode(eventId: string) {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('eventId')) {\n        this.mode = 'edit';\n        eventId = paramMap.get('eventId');\n        this.eventId = eventId;\n        this.eventService.getOneEvent(eventId);\n        this.createdUpdatedEvent();\n      } else {\n        this.mode = 'create';\n        eventId = null;\n      }\n    });\n  }\n\n  saveEvent(submitBtn: MatButton) {\n    if (this.mode === 'create') {\n      this.isLoading = true;\n      this.eventService.postEvent(\n        this.eventService.currentEvent,\n        this.eventService.currentAddress,\n        this.eventService.currentContactPerson);\n      this.isLoading = false;\n\n    } else {\n      this.isLoading = true;\n      this.eventService.updateEvent(\n        this.eventId,\n        extractEventFromRoot(this.eventService.currentRootEvent),\n        this.eventService.currentRootEvent.address,\n        this.eventService.currentRootEvent.contactPerson\n      );\n      this.isLoading = false;\n    }\n  }\n\n  getAddressFormStatus(isValid: any) {\n\n    if (!isUndefined(isValid)) {\n      this.isAddressFormValid = isValid;\n    }\n   }\n   getEventFormStatus(isValid: any) {\n\n    if (!isUndefined(isValid)) {\n      this.isEventFormValid = isValid;\n    }\n   }\n   getContactFormStatus(isValid: any) {\n\n    if (!isUndefined(isValid)) {\n      this.isContactFormValid = isValid;\n    }\n   }\n   createdUpdatedEvent() {\n     setTimeout(() => {\n      this.selectedTab = 1;\n    }, 100);\n\n     setTimeout(() => {\n      this.selectedTab = 2;\n    }, 100);\n  }\n  ngOnDestroy(): void {\n    this.messageSubs.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n    \n      check\n    \n\n    \n\n      \n      \n\n    \n\n  \n\n\n  \n\n    \n      check\n    \n\n    \n       \n    \n  \n\n  \n\n\n    \n      check\n    \n\n    \n      \n    \n\n  \n\n\n\n\n\n\n\n\n   Save Event\n\n\n   Save Event\n\n\n\n\n  {{message.message}}\n\n\n\n  {{message.message}}\n\n    \n\n    \n                \n                    ./create-event.component.css\n                \n                \n  mat-spinner{\n    margin: auto;\n  }\n\n  mat-tab-group{\n    margin: auto;\n    width: 80%;\n    background:rgba(255,255,255,0.9);\n  }\n\n  mat-tab{\n    background-color:rgba(255,255,255,0.9);\n  }\n\n  mat-tab-label{\n    font-weight: 900;\n    color: black;\n  }\n\n  .mat-icon-error {\n    color: red;\n  }\n\n  .mat-icon-correct {\n    color: green;\n  }\n\n  button{\n    background-color:rgb(173, 236, 255);\n    color: rgb(0, 0, 0); \n    font-weight: bold;\n    display: block;\n    margin: auto;\n    width: 80%;\n  }\n  \n  #errorMessage{\n    background-color: rgb(255, 153, 153);\n    color: rgb(255, 255, 255);  \n\n}\n\n#successMessage{\n    background-color: rgb(196, 255, 196);\n    color: white;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            check                                      check                                 check                       Save Event   Save Event  {{message.message}}  {{message.message}}'\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateEventComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUsersComponent.html":{"url":"components/EditUsersComponent.html","title":"component - EditUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Auth/edit-users/edit-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-users\n            \n\n            \n                styleUrls\n                ./edit-users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                errorDataSubs\n                            \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                handleErrorMessage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/edit-users/edit-users.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/edit-users/edit-users.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/edit-users/edit-users.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/edit-users/edit-users.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetUserPassword(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/edit-users/edit-users.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['ID', 'E-mail', 'Ny Adgangskode', 'Slet Bruger']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorDataSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/edit-users/edit-users.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../User.model';\nimport { AuthenticateService } from '../Authenticate.service';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { isUndefined } from 'util';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n@Component({\n  selector: 'app-edit-users',\n  templateUrl: './edit-users.component.html',\n  styleUrls: ['./edit-users.component.css']\n})\nexport class EditUsersComponent implements OnInit {\n\n  dataSource: MatTableDataSource;\n  displayedColumns: string[] = ['ID', 'E-mail', 'Ny Adgangskode', 'Slet Bruger'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  message: { message: string; isErrorMessage: boolean; fadingTime: number; };\n  errorDataSubs: Subscription;\n  isLoading;\n\n  constructor(private authService: AuthenticateService) { }\n\n  ngOnInit() {\n  this.authService.getAllUsers();\n  this.authService.getUsersChangedListener().subscribe(users => {\n    this.dataSource = new MatTableDataSource(users);\n    this.dataSource.paginator = this.paginator;\n  });\n  this.handleErrorMessage();\n  }\n\n\nhandleErrorMessage() {\n  this.errorDataSubs = this.authService.getMessageListener()\n  .subscribe(messageData => {\n    this.message = messageData;\n    setTimeout(() => {\n      this.message = undefined;\n    }, messageData.fadingTime);\n  });\n}\n\n  deleteUser(userId) {\n    this.isLoading = true;\n    this.authService.deleteUser(userId);\n    this.isLoading = false;\n  }\n\n  resetUserPassword(userEmail: string) {\n    this.isLoading = true;\n    this.authService.resetUserPassword(userEmail);\n    this.isLoading = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n     E-mail \n     {{element.email}} \n  \n\n  \n     ID \n     {{element._id}} \n  \n\n  \n     Ny AdgangsKode \n     \n       \n       autorenew\n       \n  \n\n  \n     Slet Bruger \n     \n     \n     delete_forever \n    \n  \n\n\n  \n  \n\n\n\n\n\n  {{message.message}} \n\n\n\n  {{message.message}} \n\n\n\n\n    \n\n    \n                \n                    ./edit-users.component.css\n                \n                table {\n    margin: auto;\n    width: 100%;\n    background:rgba(255,255,255,0.1);\n    color: white;\n  }\n\n  ng-container{\n      color:white;\n      font-size: 15px;\n  }\n\n  th{\n      color:white;\n      font-size: 15px;\n  }\n\n  td{\n      color:white;\n      font-size: 15px;\n  }\n\n  button{\n      background-color: transparent;\n      font-size: 15px;\n  }\n  \n#deleteIcon{\n    color:red;\n\n}\n#newPasswordIcon{\n    color:rgb(61, 255, 61);\n\n}\n\nmat-paginator, span, select, mat-select-value{\n    background:rgba(255,255,255,0.1);\n    color: white;\n    font-size: 15px;\n}\n\n  :host /deep/ .mat-select-value-text {\n    color: white !important;\n  }\n\n  :host /deep/ .mat-select-arrow {\n    color: white !important;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       E-mail      {{element.email}}          ID      {{element._id}}          Ny AdgangsKode                    autorenew                Slet Bruger                delete_forever             {{message.message}}   {{message.message}} '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailDialogComponent.html":{"url":"components/EmailDialogComponent.html","title":"component - EmailDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/email-dialog/email-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-dialog\n            \n\n            \n                styleUrls\n                ./email-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                reasonForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, dataService: EventService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/email-dialog/email-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSend\n                        \n                        \n                    \n                \n            \n            \n                \nonSend(eventRoot: IMyEventRoot, reasonForDecline: MatInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventRoot\n                                    \n                                                IMyEventRoot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reasonForDecline\n                                    \n                                            MatInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reasonForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/email-dialog/email-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatInput } from '@angular/material';\nimport { EventService } from '../event.service';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-email-dialog',\n  templateUrl: './email-dialog.component.html',\n  styleUrls: ['./email-dialog.component.css']\n})\nexport class EmailDialogComponent implements OnInit {\n  reasonForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dataService: EventService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.reasonForm = this.formBuilder.group({\n      reasonCtrl: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onSend(eventRoot: IMyEventRoot, reasonForDecline: MatInput) {\n\n    this.dataService.sendDeclinedMail(\n      eventRoot.name,\n      eventRoot.contactPerson.contactName,\n      eventRoot.contactPerson.contactEmail,\n      reasonForDecline.value\n    );\n    this.dialogRef.close();\n    this.dataService.declineRequstedEvent(eventRoot);\n  }\n}\n\n    \n\n    \n        \n Fortæl arrangøren hvorfor hans event er blevet afvist\n\n\n\n    \n\n\n\n\n    Luk\n     Send\n\n\n    \n\n    \n                \n                    ./email-dialog.component.css\n                \n                label{\n    font-family: 'Times New Roman', Times, serif;\n}\n\nmat-input{\n    width: 100%;\n}\nmat-form-field{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Fortæl arrangøren hvorfor hans event er blevet afvist        Luk     Send'\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDialogComponent.html":{"url":"components/EventDialogComponent.html","title":"component - EventDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/event-dialog/event-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-dialog\n            \n\n            \n                styleUrls\n                ./event-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                event\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/event-dialog/event-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-dialog/event-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-dialog/event-dialog.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-dialog/event-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-dialog/event-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMyEventRoot\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-dialog/event-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\n\n@Component({\n  selector: 'app-event-dialog',\n  templateUrl: './event-dialog.component.html',\n  styleUrls: ['./event-dialog.component.css']\n})\nexport class EventDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\nevent: IMyEventRoot;\n\n  ngOnInit() {\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n\n}\n\n    \n\n    \n         {{data.name}}\n\n\n\n    \n        \n            \n                 Eventen Starter den: \n                 {{data.startTime}}\n            \n\n        \n        \n            \n                 Eventen Slutter den: \n                 {{data.endTime}}\n            \n\n        \n    \n\n    \n        \n            \n                 Adressen:\n                 {{data.line}}\n            \n        \n\n        \n            \n                 By:\n                 {{data.city}}\n            \n        \n\n        \n            \n                 Post nummer: \n                 {{data.zipCode}}\n            \n        \n\n        \n                \n                     Minmun alderen:\n                     Alle aldre er velkommen\n                     0\"> {{data.ageLimit}}\n                \n            \n    \n    \n\n\n\n    Close\n     Attend\n\n    \n\n    \n                \n                    ./event-dialog.component.css\n                \n                label{\n    font-family: 'Times New Roman', Times, serif;\n    font-size: large;\n    margin-right: 1rem;\n}\n\nli{\nlist-style-type: none;\ntext-decoration: none;\n}\n\n.data{\n    float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{data.name}}                                         Eventen Starter den:                  {{data.startTime}}                                                         Eventen Slutter den:                  {{data.endTime}}                                                                 Adressen:                 {{data.line}}                                                         By:                 {{data.city}}                                                         Post nummer:                  {{data.zipCode}}                                                                 Minmun alderen:                     Alle aldre er velkommen                     0\"> {{data.ageLimit}}                                        Close     Attend'\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventFormComponent.html":{"url":"components/EventFormComponent.html","title":"component - EventFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/event-form/event-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-form\n            \n\n            \n                styleUrls\n                ./event-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                endTime\n                            \n                            \n                                eventForm\n                            \n                            \n                                imagePath\n                            \n                            \n                                imagePreview\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitOnStatusChanged\n                            \n                            \n                                getEventFromForm\n                            \n                            \n                                initEventForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImagePicked\n                            \n                            \n                                setEventForm\n                            \n                            \n                                setNewValues\n                            \n                            \n                                validateMaxEndDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusEmitter\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/event-form/event-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusEmitter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitOnStatusChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitOnStatusChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initEventForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitEventForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImagePicked\n                        \n                        \n                    \n                \n            \n            \n                \nonImagePicked(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEventForm\n                        \n                        \n                    \n                \n            \n            \n                \nsetEventForm(event: IEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                IEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNewValues\n                        \n                        \n                    \n                \n            \n            \n                \nsetNewValues(rootEvent: IMyEventRoot, event: IEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rootEvent\n                                    \n                                                IMyEventRoot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                IEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateMaxEndDate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateMaxEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-form/event-form.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { value: 'Party', viewValue: 'Party' },\n    { value: 'Gathering', viewValue: 'Gathering' },\n    { value: 'Bio', viewValue: 'Bio' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OwlDateTime\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('endTime')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePreview\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OwlDateTime\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('startTime')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-form/event-form.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fControls\n                    \n                \n\n                \n                    \n                        getfControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/Event/event-form/event-form.component.ts:167\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Output,\n  ViewChild,\n  Input,\n  OnDestroy,\n  EventEmitter,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {  EventService } from '../event.service';\nimport { OwlDateTime } from 'ng-pick-datetime/date-time/date-time.class';\nimport { IEvent } from '../IEvent.interface';\nimport { extractEventFromRoot } from 'src/app/helper/extractEventFromRoot';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\nimport { mimeType } from '../mime-type.validator';\n\nexport interface Category {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.css']\n})\nexport class EventFormComponent implements OnInit, OnDestroy {\n  categories: Category[] = [\n    { value: 'Party', viewValue: 'Party' },\n    { value: 'Gathering', viewValue: 'Gathering' },\n    { value: 'Bio', viewValue: 'Bio' }\n  ];\n\n  eventForm: FormGroup;\n  @ViewChild('startTime') startTime: OwlDateTime;\n  @ViewChild('endTime') endTime: OwlDateTime;\n  @Input() mode: string;\n  @Output() statusEmitter: EventEmitter = new EventEmitter();\n  imagePreview: string;\n  minDate = new Date();\n  maxDate = new Date();\n  imagePath: any;\n\n  constructor(private builder: FormBuilder, private eventService: EventService) {}\n  ngOnInit() {\n    this.initEventForm();\n\n    if (this.mode === 'edit') {\n      this.eventService.getEditEventListener().subscribe(eventRoot => {\n        this.setEventForm(extractEventFromRoot(eventRoot));\n      });\n\n      this.eventForm.valueChanges.subscribe(() => {\n        this.setNewValues(this.eventService.currentRootEvent, this.getEventFromForm());\n      });\n    }\n\n    if (this.mode === 'create') {\n      if (this.eventService.currentEvent) {\n        this.setEventForm(this.eventService.currentEvent);\n      }\n      this.eventForm.valueChanges.subscribe(() => {\n\n        this.eventService.currentEvent = this.getEventFromForm();\n      });\n    }\n\n    this.validateMaxEndDate();\n    this.emitOnStatusChanged();\n  }\n\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.eventForm.get('imageForm').patchValue({ imagePathCtrl: file });\n    this.eventForm\n      .get('imageForm')\n      .get('imagePathCtrl')\n      .updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  initEventForm() {\n    this.eventForm = this.builder.group({\n      themeForm: this.builder.group({\n        themeCtrl: [null, Validators.required]\n      }),\n      nameForm: this.builder.group({\n        nameCtrl: [null, [Validators.required, Validators.maxLength(50)]]\n      }),\n      descForm: this.builder.group({\n        descCtrl: [null, [Validators.required, Validators.maxLength(2000)]]\n      }),\n      ageLimitForm: this.builder.group({\n        ageLimitCtrl: [null, [Validators.required, Validators.max(120)]]\n      }),\n      startTimeForm: this.builder.group({\n        startTimeCtrl: ['', Validators.required]\n      }),\n      endTimeForm: this.builder.group({\n        endTimeCtrl: ['', Validators.required]\n      }),\n      imageForm: this.builder.group({\n        imagePathCtrl: ['', Validators.compose([Validators.required]), mimeType]\n      }),\n      costForm: this.builder.group({\n        costCtrl: [null, Validators.required]\n      })\n    });\n  }\n\n\n  setNewValues(rootEvent: IMyEventRoot, event: IEvent) {\n    rootEvent.name = event.name;\n    rootEvent.cost = event.cost;\n    rootEvent.description = event.description;\n    rootEvent.ageLimit = event.ageLimit;\n    rootEvent.theme = event.theme;\n    rootEvent.imagePath = event.imagePath;\n    rootEvent.startTime = event.startTime;\n    rootEvent.endTime = event.endTime;\n  }\n  setEventForm(event: IEvent) {\n\n      this.eventForm.get('endTimeForm').setValue({\n        endTimeCtrl: new Date()\n      });\n\n      this.eventForm.get('themeForm').setValue({\n      themeCtrl: event.theme\n    });\n      this.eventForm.get('nameForm').setValue({\n      nameCtrl: event.name\n    });\n      this.eventForm.get('descForm').setValue({\n      descCtrl: event.description\n    });\n      this.eventForm.get('ageLimitForm').setValue({\n      ageLimitCtrl: event.ageLimit\n    });\n      this.eventForm.get('imageForm').setValue({\n      imagePathCtrl: event.imagePath\n    });\n      this.eventForm.get('costForm').setValue({\n      costCtrl: event.cost\n    });\n      this.eventForm.get('startTimeForm').setValue({\n      startTimeCtrl: new Date(event.startTime)\n    });\n\n      this.eventForm.get('endTimeForm').setValue({\n      endTimeCtrl: new Date(event.endTime)\n    });\n      this.imagePreview = this.eventForm.get('imageForm').value.imagePathCtrl;\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  get fControls() {\n    return this.eventForm.controls;\n  }\n  validateMaxEndDate() {\n    this.eventForm.get('startTimeForm').valueChanges.subscribe(date => {\n      this.maxDate = date.startTimeCtrl;\n    });\n  }\n   getEventFromForm() {\n  const event: IEvent = {\n    ageLimit: this.fControls.ageLimitForm.get('ageLimitCtrl').value,\n    cost: this.fControls.costForm.get('costCtrl').value,\n    description: this.fControls.descForm.get('descCtrl').value,\n    endTime: this.fControls.endTimeForm.get('endTimeCtrl').value,\n    startTime: this.fControls.startTimeForm.get('startTimeCtrl').value,\n    imagePath: this.fControls.imageForm.get('imagePathCtrl').value,\n    theme: this.fControls.themeForm.get('themeCtrl').value,\n    name: this.fControls.nameForm.get('nameCtrl').value\n  };\n  return event;\n  }\n\n  emitOnStatusChanged() {\n    this.eventForm.statusChanges.subscribe(status => {\n      if (status === 'VALID') {\n        this.statusEmitter.emit(true);\n      } else {\n        this.statusEmitter.emit(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n         Event navn \n        \n          \n        \n        \n\n          Næste\n        \n      \n    \n\n    \n      \n         Beskrivelse \n        \n          \n        \n        \n          Tilbage\n          Næste\n        \n      \n    \n\n    \n      \n         Kategori \n        \n          \n            \n              {{category.viewValue}}\n            \n          \n        \n        \n          Tilbage\n          Næste\n        \n      \n    \n\n    \n      \n         Pris\n        \n        \n            \n          \n\n        \n          Tilbage\n        \n      \n    \n\n  \n\n\n  \n\n    \n      \n        Start Tid\n\n        \n\n          \n       \n             \n            Vælg en start tid\n           \n       \n        \n\n        \n          Næste\n        \n\n      \n    \n\n\n    \n      \n          \n        Slut Tid\n      \n          \n\n            \n        \n\n        \n        \n          Tilbage\n          Næste\n        \n      \n    \n\n    \n      \n        \n           AldersGrænse\n          \n           Vælg en aldersgrænse for eventen\n          \n           vælg en alder mellem 1-120\n        \n        \n          Tilbage\n          Næste\n        \n      \n    \n\n    \n      \n\n         Billede\n\n        \n          \n        \n\n        \n          \n        \n\n        \n          Tilbage\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./event-form.component.css\n                \n                \nmat-card {\n    margin: auto;\n    width: 85%;\n    margin-top: 1rem;\n    background: transparent;\n    transition: none !important;\n    box-shadow: none !important;\n\n}\n\n\nmat-horizontal-stepper{\n  background: transparent;\n}\n\nmat-step{\n  background: transparent;\n}\n\nform{\n  background: transparent;\n}\n\nng-template{\n  background: transparent;\n}\n\n.image-preview {\n    height: 5rem;\n    margin: 1rem 0;\n  }\n  \n  .image-preview img {\n    height: 100%;\n  }\n\n  mat-form-field{\n    width: 100%;\n    background: transparent;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Event navn                                             Næste                                     Beskrivelse                                             Tilbage          Næste                                     Kategori                                             {{category.viewValue}}                                                Tilbage          Næste                                     Pris                                                        Tilbage                                        Start Tid                                                  Vælg en start tid                                            Næste                                              Slut Tid                                                              Tilbage          Næste                                               AldersGrænse                     Vælg en aldersgrænse for eventen                     vælg en alder mellem 1-120                          Tilbage          Næste                                     Billede                                                                      Tilbage                    '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListComponent.html":{"url":"components/EventListComponent.html","title":"component - EventListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/event-list/event-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-list\n            \n\n            \n                styleUrls\n                ./event-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubs\n                            \n                            \n                                currentCardId\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                endAmount\n                            \n                            \n                                events\n                            \n                            \n                                isCollapsed\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                message\n                            \n                            \n                                messageSubs\n                            \n                            \n                                startAmount\n                            \n                            \n                                    Private\n                                updatedEventsSubs\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEvents\n                            \n                            \n                                getEventsOnRouteChanged\n                            \n                            \n                                getRequstedEvents\n                            \n                            \n                                getUserEvents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                OnCollapse\n                            \n                            \n                                onDecline\n                            \n                            \n                                onDelete\n                            \n                            \n                                onPublish\n                            \n                            \n                                onReadMore\n                            \n                            \n                                showMoreEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, authService: AuthenticateService, router: Router, route: ActivatedRoute, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/event-list/event-list.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventsOnRouteChanged\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventsOnRouteChanged(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequstedEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequstedEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            OnCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nOnCollapse(matCard: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matCard\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDecline\n                        \n                        \n                    \n                \n            \n            \n                \nonDecline(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(eventId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPublish\n                        \n                        \n                    \n                \n            \n            \n                \nonPublish(eventRoot: IMyEventRoot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventRoot\n                                    \n                                                IMyEventRoot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReadMore\n                        \n                        \n                    \n                \n            \n            \n                \nonReadMore(eventRoot: IMyEventRoot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventRoot\n                                    \n                                                IMyEventRoot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMoreEvents\n                        \n                        \n                    \n                \n            \n            \n                \nshowMoreEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list/event-list.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCardId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isUserAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updatedEventsSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list/event-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { EventService } from '../event.service';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\nimport { AuthenticateService } from 'src/app/Auth/Authenticate.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent, MatDialog } from '@angular/material';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { EventDialogComponent } from 'src/app/Event/event-dialog/event-dialog.component';\nimport { EmailDialogComponent } from 'src/app/Event/email-dialog/email-dialog.component';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit, OnDestroy {\n  currentCardId = 0;\n  isCollapsed = false;\n  events = [];\n  isLoading = false;\n  private authStatusSubs: Subscription;\n  private updatedEventsSubs: Subscription;\n  userId: string;\n  public isUserAuthenticated = false;\n  messageSubs: Subscription;\n  message;\n  startAmount = 0;\n  endAmount = 5;\n\n  constructor(\n    private eventService: EventService,\n    private authService: AuthenticateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\n    this.authStatusSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.isUserAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n\n    this.getEventsOnRouteChanged(this.startAmount, this.endAmount);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSubs.unsubscribe();\n    this.updatedEventsSubs.unsubscribe();\n  }\n\n  onDelete(eventId: string) {\n    this.eventService.deleteEvent(eventId);\n    this.getEvents(this.startAmount, this.endAmount);\n    this.router.navigate(['/']);\n  }\n\n\n  getEventsOnRouteChanged(startAmount, endAmount) {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('isRequstedEvents')) {\n        this.getRequstedEvents(startAmount, endAmount);\n      } else if (this.router.url === '/events/user') {\n        this.getUserEvents(startAmount, endAmount);\n      } else {\n        this.getEvents(startAmount, endAmount);\n      }\n    });\n  }\n\n  getEvents(startAmount, endAmount) {\n    this.eventService.getLimitedAmountOfEvents(startAmount, endAmount);\n    this.updatedEventsSubs = this.eventService\n      .eventsUpdatedSubjectListener()\n      .subscribe(eventData => {\n        this.isLoading = true;\n        this.events = eventData.events.map(eventRoot => {\n          return {\n            event: eventRoot,\n            formattedStartTime: formatDate(eventRoot.startTime),\n            formattedEndTime: formatDate(eventRoot.endTime)\n          };\n        });\n\n        this.isLoading = false;\n      });\n  }\n  getRequstedEvents(startAmount, endAmount) {\n    this.eventService.getRequestedEvents(startAmount, endAmount);\n    this.updatedEventsSubs = this.eventService\n      .eventsUpdatedSubjectListener()\n      .subscribe(eventData => {\n        this.isLoading = true;\n        this.events = eventData.events.map(eventRoot => {\n          return {\n            event: eventRoot,\n            formattedStartTime: formatDate(eventRoot.startTime),\n            formattedEndTime: formatDate(eventRoot.endTime)\n          };\n        });\n\n        this.isLoading = false;\n      });\n  }\n\n  getUserEvents(startAmount, endAmount) {\n    this.eventService.getUserEvents(startAmount, endAmount);\n    this.updatedEventsSubs = this.eventService\n      .eventsUpdatedSubjectListener()\n      .subscribe(eventData => {\n        this.isLoading = true;\n        this.events = eventData.events.map(eventRoot => {\n          return {\n            event: eventRoot,\n            formattedStartTime: formatDate(eventRoot.startTime),\n            formattedEndTime: formatDate(eventRoot.endTime)\n          };\n        });\n        this.isLoading = false;\n      });\n  }\n\n  OnCollapse(matCard: { id: number }) {\n    this.currentCardId = matCard.id;\n    if (this.isCollapsed === true) {\n      this.isCollapsed = false;\n    } else {\n      this.isCollapsed = true;\n    }\n  }\n\n  onDecline(event: any) {\n    const dialogRef = this.dialog.open(EmailDialogComponent, {\n      data: event\n    });\n\n    dialogRef.afterClosed().subscribe(res => console.log(res));\n    this.getEventsOnRouteChanged(this.startAmount, this.endAmount);\n  }\n\n  onPublish(eventRoot: IMyEventRoot) {\n    const eventToPublish = eventRoot;\n    eventToPublish.creator = this.userId;\n    this.eventService.publishEvent(eventToPublish);\n    this.eventService.declineRequstedEvent(eventRoot);\n    this.eventService.sendPublishedMail(\n      eventRoot.name,\n      eventRoot.contactPerson.contactName,\n      eventRoot.contactPerson.contactEmail\n    );\n  }\n\n  onReadMore(eventRoot: IMyEventRoot) {\n    const displayEvent = {\n      startTime: formatDate(eventRoot.startTime),\n      cost: eventRoot.cost,\n      line: eventRoot.address.line,\n      endTime: formatDate(eventRoot.endTime),\n      city: eventRoot.address.city,\n      ageLimit: eventRoot.ageLimit,\n      imagePath: eventRoot.imagePath,\n      name: eventRoot.name,\n      zipCode: eventRoot.address.zipCode\n    };\n    const dialogRef = this.dialog.open(EventDialogComponent, {\n      data: displayEvent\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  showMoreEvents() {\n    this.endAmount = this.endAmount + 5;\n    this.getEventsOnRouteChanged(this.startAmount, this.endAmount);\n  }\n}\n\nfunction getMinutesFromDate(number: number) {\n  if (number \n    \n\n    \n        \n\n\n\n\n  {{message.message}}\n\n\n\n  {{message.message}}\n\n\n\n  \n\n    \n      \n        \n        {{eventData.event.name}}\n        \n          \n          {{eventData.formattedStartTime}}\n          \n            Pris:   {{eventData.event.cost}}.- \n        \n        \n      \n\n      \n\n      \n\n\n        \n          \n\n            \n               {{eventData.event.theme}} \n            \n\n            \n              {{eventData.event.description}}\n            \n\n          \n        \n\n      \n      \n        Opdater\n        Slet\n        Se Mere\n      \n\n      \n        Publish\n        Decline\n        Se Mere\n      \n\n      \n        \n          thumb_up\n        \n        \n          share \n        \n      \n\n    \n\n    \n  \n   Vis flere \n\n Ingen Arragementer at vise &#x1F629;&#x1F629;\n\n    \n\n    \n                \n                    ./event-list.component.css\n                \n                \n  \n  mat-card {\n    margin: auto;\n    width: 50%;\n    background:rgba(255,255,255,0.1);\n    color: white;\n  }\n\n  .description{\n    height: 100px;\n  }\n\nmat-card-title, mat-card-subtitle, mat-card-header{\n  color: white;\n}\n\n.mat-expansion-indicator::after{\ncolor:white;\n}\n\n mat-expansion-panel, mat-expansion-panel-header {\n    background-color: transparent; \n    box-shadow: none;\n    color: white;\n  }\n  \n  mat-expansion-panel-header :hover{\n    color: rgb(221, 209, 253)\n  }\n\n  mat-spinner {\n    margin: auto;\n  }\n  button:hover{\n    color: rgb(221, 209, 253);\n  }\n  \n.spacer{\n  margin: 1rem;\n}\n\n#errorMessage{\n  background-color: rgb(255, 153, 153);\n  color: rgb(255, 255, 255);  \n}\n\n#successMessage{\n  background-color: royalblue;\n  color: white;\n  top:0;\n}\n\nli{\n  display: inline-block;\n  text-decoration: none;\n  align-content: center;\n  margin: auto;\n  padding: 0;\n  border: 0;\n  list-style: none;\n}\n\n.spacer{\n  flex: 1 1 auto;\n}\n\n\n#endButton{\n\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 50%;\n    color:white;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message.message}}  {{message.message}}                            {{eventData.event.name}}                            {{eventData.formattedStartTime}}                      Pris:   {{eventData.event.cost}}.-                                                                                {{eventData.event.theme}}                                       {{eventData.event.description}}                                                  Opdater        Slet        Se Mere                    Publish        Decline        Se Mere                              thumb_up                          share                            Vis flere  Ingen Arragementer at vise 😩😩'\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListTableComponent.html":{"url":"components/EventListTableComponent.html","title":"component - EventListTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Event/event-list-table/event-list-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-list-table\n            \n\n            \n                styleUrls\n                ./event-list-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-list-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                errorDataSubs\n                            \n                            \n                                eventsPerPage\n                            \n                            \n                                message\n                            \n                            \n                                paginator\n                            \n                            \n                                selection\n                            \n                            \n                                updatedEventsSubs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                getEvents\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangedPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/event-list-table/event-list-table.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:77\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangedPage\n                        \n                        \n                    \n                \n            \n            \n                \nonChangedPage(pageData: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageData\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ 'select', 'Navn', 'addresse', 'by', 'kategori' , 'start tid', 'slut tid', 'pris', 'alder', ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorDataSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventsPerPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedEventsSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event-list-table/event-list-table.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, PageEvent } from '@angular/material';\nimport { User } from '../../Auth/User.model';\nimport { Subscription } from 'rxjs';\nimport { IMyEventRoot } from '../IMyEventRoot.interface';\nimport {EventService } from '../event.service';\nimport { formatDate } from '../event-list/event-list.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { constructor } from 'q';\n\n\n@Component({\n  selector: 'app-event-list-table',\n  templateUrl: './event-list-table.component.html',\n  styleUrls: ['./event-list-table.component.css']\n})\nexport class EventListTableComponent implements OnInit {\n\n\n  dataSource: MatTableDataSource;\n  displayedColumns: string[] = [ 'select', 'Navn', 'addresse', 'by', 'kategori' , 'start tid', 'slut tid', 'pris', 'alder', ];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  message: { message: string; isErrorMessage: boolean; fadingTime: number; };\n  errorDataSubs: Subscription;\n  currentPage = 1;\n  eventsPerPage = 5;\n  updatedEventsSubs: Subscription;\n  selection;\n\n  constructor(private eventService: EventService) { }\n\n  ngOnInit() {\n  const initialSelection = [];\n  const allowMultiSelect = false;\n  this.selection = new SelectionModel(allowMultiSelect, initialSelection);\n  //this.dataService.getLimitedAmountOfEvents(this.eventsPerPage, this.currentPage);\n  this.getEvents();\n\n\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.currentPage = pageData.pageIndex + 1;\n    this.eventsPerPage = pageData.pageSize;\n    //this.dataService.getLimitedAmountOfEvents(this.eventsPerPage, this.currentPage);\n  }\n\n  getEvents() {\n    //this.dataService.getLimitedAmountOfEvents(this.eventsPerPage, this.currentPage);\n    this.updatedEventsSubs = this.eventService\n      .eventsUpdatedSubjectListener()\n      .subscribe(eventData => {\n        // this.isLoading = true;\n// tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i (eventData.events);\n    this.dataSource.paginator = this.paginator;\n       // this.isLoading = false;\n      });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n      \n      \n  \n  \n    \n       Navn \n       {{element.name}} \n    \n\n \n    \n    \n       addresse \n       {{element.address.line}} \n    \n  \n    \n       by \n       {{element.address.city}} \n    \n\n     \n     \n       kategori \n       {{element.theme}} \n    \n  \n    \n       start tid \n       {{element.startTime}} \n    \n\n    \n    \n    \n       slut tid \n       {{element.endTime}} \n    \n  \n    \n       pris \n       {{element.cost}} \n    \n\n    \n        alder \n       {{element.ageLimit}} \n    \n\n    \n        \n          \n          \n        \n        \n          \n          \n        \n      \n  \n\n\n    \n    \n  \n  \n  \n  \n  \n  \n    \n\n    \n                \n                    ./event-list-table.component.css\n                \n                table {\n    margin: auto;\n    width: 100%;\n    background:rgba(255,255,255,0.1);\n    color: white;\n  }\n\n  ng-container{\n      color:white;\n      font-size: 15px;\n  }\n\n  th{\n      color:white;\n      font-size: 15px;\n  }\n  .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n    color:white;\n  }\n  td{\n      color:white;\n      font-size: 15px;\n  }\n\n  button{\n      background-color: transparent;\n      font-size: 15px;\n  }\n  \nmat-paginator, span, select, mat-select-value{\n    background:rgba(255,255,255,0.1);\n    color: white;\n    font-size: 15px;\n}\n\n  :host /deep/ .mat-select-value-text {\n    color: white !important;\n  }\n\n  :host /deep/ .mat-select-arrow {\n    color: white !important;\n  }\n  .mat-column-select {\n    overflow: initial;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                       Navn        {{element.name}}                     addresse        {{element.address.line}}                  by        {{element.address.city}}                      kategori        {{element.theme}}                  start tid        {{element.startTime}}                        slut tid        {{element.endTime}}                  pris        {{element.cost}}                 alder        {{element.ageLimit}}                                                                                                             '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventModule.html":{"url":"modules/EventModule.html","title":"module - EventModule","body":"\n                   \n\n\n\n\n    Modules\n    EventModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventModule\n\n\n\ncluster_EventModule_declarations\n\n\n\n\nAddressFormComponent\n\nAddressFormComponent\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAddressFormComponent->EventModule\n\n\n\n\n\nContactPersonFormComponent\n\nContactPersonFormComponent\n\nEventModule -->\n\nContactPersonFormComponent->EventModule\n\n\n\n\n\nCreateEventComponent\n\nCreateEventComponent\n\nEventModule -->\n\nCreateEventComponent->EventModule\n\n\n\n\n\nEventDialogComponent\n\nEventDialogComponent\n\nEventModule -->\n\nEventDialogComponent->EventModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventModule -->\n\nEventFormComponent->EventModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventModule -->\n\nEventListComponent->EventModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Event/event.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressFormComponent\n                        \n                        \n                            ContactPersonFormComponent\n                        \n                        \n                            CreateEventComponent\n                        \n                        \n                            EventDialogComponent\n                        \n                        \n                            EventFormComponent\n                        \n                        \n                            EventListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CreateEventComponent } from './create-event/create-event.component';\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\nimport { AddressFormComponent } from './address-form/address-form.component';\nimport { ContactPersonFormComponent } from './contact-person-form/contact-person-form.component';\nimport { EventDialogComponent } from './event-dialog/event-dialog.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport {\n  NgbModule,\n  NgbTimepickerModule,\n  NgbAlertModule,\n  NgbDropdownModule\n} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    CreateEventComponent,\n    EventListComponent,\n    EventFormComponent,\n    AddressFormComponent,\n    ContactPersonFormComponent,\n    EventDialogComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgbModule,\n    NgbTimepickerModule,\n    NgbAlertModule,\n    NgbDropdownModule\n  ]\n})\nexport class EventModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                BACKEDEND_URL\n                            \n                            \n                                currentAddress\n                            \n                            \n                                currentContactPerson\n                            \n                            \n                                currentEvent\n                            \n                            \n                                currentRootEvent\n                            \n                            \n                                editEventSubject\n                            \n                            \n                                    Private\n                                events\n                            \n                            \n                                eventsUpdatedSubject\n                            \n                            \n                                maxEvents\n                            \n                            \n                                    Private\n                                messageListener\n                            \n                            \n                                reqEvent\n                            \n                            \n                                totalEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEventFormData\n                            \n                            \n                                declineRequstedEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                eventsUpdatedSubjectListener\n                            \n                            \n                                getEditEventListener\n                            \n                            \n                                getLimitedAmountOfEvents\n                            \n                            \n                                getMessageListener\n                            \n                            \n                                getOneEvent\n                            \n                            \n                                getRequestedEvents\n                            \n                            \n                                getRequstedThemeEvents\n                            \n                            \n                                getUserEvents\n                            \n                            \n                                postEvent\n                            \n                            \n                                publishEvent\n                            \n                            \n                                sendDeclinedMail\n                            \n                            \n                                sendPublishedMail\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, authService: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Event/event.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createEventFormData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventFormData(event: IEvent, address: IAddress, contactPerson: IContactPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                IEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                IAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactPerson\n                                    \n                                                IContactPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            declineRequstedEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeclineRequstedEvent(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            eventsUpdatedSubjectListener\n                        \n                        \n                    \n                \n            \n            \n                \neventsUpdatedSubjectListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditEventListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditEventListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLimitedAmountOfEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetLimitedAmountOfEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessageListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessageListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOneEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetOneEvent(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestedEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestedEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequstedThemeEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequstedThemeEvents(theme: string, eventsPerPage: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventsPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserEvents(startAmount, endAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endAmount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postEvent\n                        \n                        \n                    \n                \n            \n            \n                \npostEvent(event: IEvent, address: IAddress, contactPerson: IContactPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                IEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                IAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactPerson\n                                    \n                                                IContactPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publishEvent\n                        \n                        \n                    \n                \n            \n            \n                \npublishEvent(event: IMyEventRoot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                IMyEventRoot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendDeclinedMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendDeclinedMail(eventName, personName, email, reason)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    personName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPublishedMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPublishedMail(eventName, personName, email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    personName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(id: string, event: IEvent, address: IAddress, contactPerson: IContactPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Event/event.service.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                IEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                IAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactPerson\n                                    \n                                                IContactPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BACKEDEND_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://newmousleheventappp.herokuapp.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAddress\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentContactPerson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IContactPerson\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRootEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMyEventRoot\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editEventSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMyEventRoot[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventsUpdatedSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxEvents\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messageListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reqEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalEvents\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Event/event.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { IMyEventRoot } from './IMyEventRoot.interface';\nimport { Router } from '@angular/router';\nimport { IEvent } from './IEvent.interface';\nimport { IContactPerson } from './IContactPerson.interface';\nimport { IAddress } from './IAddress.interface';\nimport { AuthenticateService } from '../Auth/Authenticate.service';\nimport { map } from 'rxjs/operators';\nimport { stringify } from '@angular/core/src/render3/util';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class EventService {\n  currentRootEvent: IMyEventRoot;\n  currentContactPerson: IContactPerson;\n  currentEvent: IEvent;\n  currentAddress: IAddress;\n  maxEvents;\n  editEventSubject = new ReplaySubject();\n  eventsUpdatedSubject = new Subject();\n  private events: IMyEventRoot[];\n  reqEvent: any[] = [];\n  private messageListener = new Subject();\n  totalEvents;\n  private BACKEDEND_URL = 'https://newmousleheventappp.herokuapp.com';\n\n  constructor(private http: HttpClient, private router: Router, private authService: AuthenticateService) { }\n\n\n  getMessageListener() {\n    return this.messageListener.asObservable();\n}\n\n  getEditEventListener() {\n    return this.editEventSubject.asObservable();\n  }\n\n  eventsUpdatedSubjectListener() {\n    return this.eventsUpdatedSubject.asObservable();\n  }\n\n  getLimitedAmountOfEvents(startAmount, endAmount) {\n    const queryParams = `?startAmount=${startAmount}&endAmount=${endAmount}`;\n\n    this.http.get\n      ('http://localhost:3000/event' + queryParams)\n      .subscribe(eventData => {\n        this.events = eventData.events;\n        this.eventsUpdatedSubject.next({\n          events: [...this.events],\n          totalEvents: this.events.length\n        });\n\n      });\n  }\n\n  getRequestedEvents(startAmount, endAmount) {\n    const queryParams = `?startAmount=${startAmount}&endAmount=${endAmount}`;\n    this.http.get\n      ('http://localhost:3000/requestedEvents' + queryParams)\n      .subscribe(eventData => {\n        this.events = eventData.events;\n        this.eventsUpdatedSubject.next({\n          events: [...this.events],\n          totalEvents: this.events.length\n        });\n      });\n\n  }\n\n  getRequstedThemeEvents(theme: string, eventsPerPage: number, currentPage: number) {\n    const queryParams = `?pageSize=${eventsPerPage}&page=${currentPage}&theme=${theme}`;\n    this.http\n     .get(this.BACKEDEND_URL + '/theme' + queryParams)\n     .subscribe(eventData => {\n      eventData.events.filter(eventRoot => new Date(eventRoot.endTime) > new Date());\n      this.events = eventData.events;\n      this.eventsUpdatedSubject.next({\n          events: [...this.events],\n          totalEvents: this.events.length\n        });\n     });\n  }\n\n\n  declineRequstedEvent(event) {\n    this.http.delete(this.BACKEDEND_URL + '/requestedEvents/' + event).subscribe(() => {\n      this.eventsUpdatedSubject.next({\n        events: [...this.events],\n        totalEvents: this.events.length\n      });\n    });\n  }\n\n  postEvent(event: IEvent, address: IAddress, contactPerson: IContactPerson) {\n\n    this.http.post(this.BACKEDEND_URL + '/event'\n      , this.createEventFormData(event, address, contactPerson)).subscribe(res => {\n\n        this.messageListener.next(\n          {\n            message: res.message,\n           isErrorMessage: false,\n           fadingTime: 6000\n          });\n\n      }, error => {\n\n        this.messageListener.next(\n          {\n          message: 'Noget gik galt prøv at trykke F5 eller opdater siden',\n           isErrorMessage: true,\n           fadingTime: 6000\n          });\n      });\n  }\n\n  getUserEvents(startAmount, endAmount) {\n    const queryParams = `?startAmount=${startAmount}&endAmount=${endAmount}`;\n    this.http.get('http://localhost:3000/event/user/events' + queryParams)\n    .subscribe(eventData => {\n      this.events = eventData.events;\n      this.eventsUpdatedSubject.next({\n        events: [...this.events],\n        totalEvents: this.events.length\n      });\n    });\n  }\n\n\n  publishEvent(event: IMyEventRoot) {\n\n    this.http.post(this.BACKEDEND_URL + '/event/publish', event).subscribe(res => {\n\n      this.messageListener.next(\n        {\n          message: res.message,\n         isErrorMessage: false,\n         fadingTime: 1000\n        });\n\n    }, error => {\n      this.messageListener.next(\n        {\n        message: 'Noget gik galt prøv at trykke F5 eller opdater siden',\n         isErrorMessage: true,\n         fadingTime: 1000\n        });\n    }\n    );\n  }\n\n  deleteEvent(id: string) {\n    return this.http.delete(this.BACKEDEND_URL + '/event/' + id)\n    .subscribe(res => {\n      this.messageListener.next(\n        {\n         message: res.message,\n         isErrorMessage: true,\n         fadingTime: 3000\n        });\n   }, error => {\n      this.messageListener.next(\n        {\n          message: error.error.message,\n         isErrorMessage: false,\n         fadingTime: 3000\n        });\n\n    });\n\n  }\n\n  updateEvent(id: string, event: IEvent, address: IAddress, contactPerson: IContactPerson) {\n\n    this.http.put(this.BACKEDEND_URL + '/event/' + id, this.createEventFormData(event, address, contactPerson))\n      .subscribe(res => {\n        console.log(res);\n\n        this.messageListener.next(\n        {\n          message: res.message,\n         isErrorMessage: false,\n         fadingTime: 3000\n        });\n\n    }, error => {\n      this.messageListener.next(\n        {\n        message: error.error.message,\n         isErrorMessage: true,\n         fadingTime: 3000\n        });\n\n      });\n  }\n\n  getOneEvent(_id: string) {\n    this.http.get(this.BACKEDEND_URL + '/event/' + _id)\n      .subscribe(event => {\n        this.currentRootEvent = event;\n        this.editEventSubject.next(event);\n      });\n  }\n\n  private createEventFormData(event: IEvent, address: IAddress, contactPerson: IContactPerson) {\n\n    if ((event || address || contactPerson ) === undefined) {\n      return;\n    }\n    if (typeof event.imagePath === 'object') {\n\n      const fd = new FormData();\n      fd.append('name', event.name);\n\n      fd.append('description', event.description);\n\n      fd.append('theme', event.theme);\n\n      fd.append('ageLimit', event.ageLimit.toString());\n\n      fd.append('startTime', event.startTime);\n\n      fd.append('endTime', event.endTime);\n\n      fd.append('cost', event.cost.toString());\n\n      fd.append('imagePath', event.imagePath, event.imagePath.name);\n\n      fd.append('line', address.line);\n\n      fd.append('zipCode', address.zipCode.toString());\n\n      fd.append('city', address.city);\n\n      fd.append('contactName', contactPerson.contactName);\n\n      fd.append('contactPhone', contactPerson.contactPhone);\n\n      fd.append('contactEmail', contactPerson.contactEmail);\n\n      fd.append('creatorId', this.authService.getUserId());\n      return fd;\n    } else {\n      const fd = new FormData();\n\n      fd.append('name', event.name);\n\n      fd.append('description', event.description);\n\n      fd.append('theme', event.theme);\n\n      fd.append('ageLimit', event.ageLimit.toString());\n\n      fd.append('startTime', event.startTime);\n\n      fd.append('endTime', event.endTime);\n\n      fd.append('cost', event.cost.toString());\n\n      fd.append('imagePath', event.imagePath);\n\n      fd.append('line', address.line);\n\n      fd.append('zipCode', address.zipCode.toString());\n\n      fd.append('city', address.city);\n\n      fd.append('contactName', contactPerson.contactName);\n\n      fd.append('contactPhone', contactPerson.contactPhone);\n\n      fd.append('contactEmail', contactPerson.contactEmail);\n\n      fd.append('creatorId',  this.authService.getUserId());\n      return fd;\n    }\n  }\n\n  sendDeclinedMail(eventName, personName, email, reason) {\n    const declinedMailObject = {\n      eventName,\n      personName,\n      email,\n      reason\n    };\n\n    this.http.post('http://localhost:3000/user/declinedMail/', declinedMailObject).subscribe(res => console.log(res));\n  }\n\n  sendPublishedMail(eventName, personName, email) {\n    const declinedMailObject = {\n      eventName,\n      personName,\n      email\n    };\n\n    console.log(declinedMailObject);\n    this.http.post('http://localhost:3000/user/publishedMail/', declinedMailObject).subscribe(res => console.log(res));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onSearchClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSearchClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSearchClicked(input: HTMLInputElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            HTMLInputElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthenticateService } from '../Auth/Authenticate.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  constructor(public authService: AuthenticateService) { }\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuthenticated();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAutheticated => {\n      this.userIsAuthenticated = isAutheticated;\n    });\n  }\n\n\n  onSearchClicked(input: HTMLInputElement) {\n\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n    \n\n    \n         \n\n\n   Events\n\n\n\n\n\n   Login\n\n\n\n\n   Sign Up\n\n\n\n   New Event\n\n\n   Log out\n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .spacer{\n    flex: 1 1 auto;\n}\n\nmat-toolbar{\n  background-color: #2C2D2F;\n  color:white;\n}\n\na {\n    text-decoration: none;\n    background-color: transparent;\n}\n\nbutton{\n  background-color: red;\n  color: white;\n\n}\nspan{\n  background-color: transparent;\n  color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Events   Login   Sign Up   New Event   Log out'\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddress.html":{"url":"interfaces/IAddress.html","title":"interface - IAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/IAddress.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        line\n                                \n                                \n                                        zipCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                    \n                                \n                                \n                                    \n                                        line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                    \n                                \n                                \n                                    \n                                        zipCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAddress {\n    city: string;\n    zipCode: number;\n    line: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContactPerson.html":{"url":"interfaces/IContactPerson.html","title":"interface - IContactPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IContactPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/IContactPerson.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contactEmail\n                                \n                                \n                                        contactName\n                                \n                                \n                                        contactPhone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactEmail\n                                    \n                                \n                                \n                                    \n                                        contactEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactName\n                                    \n                                \n                                \n                                    \n                                        contactName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactPhone\n                                    \n                                \n                                \n                                    \n                                        contactPhone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IContactPerson {\n    contactName: string;\n    contactPhone: string;\n    contactEmail: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEvent.html":{"url":"interfaces/IEvent.html","title":"interface - IEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/IEvent.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageLimit\n                                \n                                \n                                        cost\n                                \n                                \n                                        description\n                                \n                                \n                                        endTime\n                                \n                                \n                                        imagePath\n                                \n                                \n                                        name\n                                \n                                \n                                        startTime\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageLimit\n                                    \n                                \n                                \n                                    \n                                        ageLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:     File | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEvent {\n    name: string;\n    description: string;\n    cost: number;\n    ageLimit: number;\n    imagePath: File | string;\n    endTime: any;\n    startTime: any;\n    theme: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMyEventRoot.html":{"url":"interfaces/IMyEventRoot.html","title":"interface - IMyEventRoot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMyEventRoot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Event/IMyEventRoot.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __v\n                                \n                                \n                                        _id\n                                \n                                \n                                        address\n                                \n                                \n                                        ageLimit\n                                \n                                \n                                        contactPerson\n                                \n                                \n                                        cost\n                                \n                                \n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        endTime\n                                \n                                \n                                        imagePath\n                                \n                                \n                                        name\n                                \n                                \n                                        startTime\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageLimit\n                                    \n                                \n                                \n                                    \n                                        ageLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactPerson\n                                    \n                                \n                                \n                                    \n                                        contactPerson:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:     File | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAddress } from './IAddress.interface';\nimport { IContactPerson } from './IContactPerson.interface';\nimport { IEvent } from './IEvent.interface';\n\nexport interface IMyEventRoot {\n   _id: string;\n   name: string;\n   description: string;\n   cost: number;\n   ageLimit: number;\n   imagePath: File | string;\n   endTime: any;\n   startTime: any;\n   theme: string;\n    creator: string;\n    address: {\n        city: string,\n        zipCode: number,\n        line: string\n    };\n    contactPerson: {\n        contactName: string,\n        contactPhone: string,\n        contactEmail: string\n    };\n    __v: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorData\n                            \n                            \n                                errorDataSubs\n                            \n                            \n                                fgEmail\n                            \n                            \n                                fgPassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorMessage\n                            \n                            \n                                initLoginForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/login/login.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initLoginForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitLoginForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/login/login.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/login/login.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorDataSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/Auth/login/login.component.ts:34\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, EmailValidator } from '@angular/forms';\nimport { AuthenticateService } from '../Authenticate.service';\nimport {User} from '../User.model';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit , OnDestroy {\n\n  isLoading;\n  loginForm: FormGroup;\n  fgEmail: FormGroup;\n  fgPassword: FormGroup;\n  submitted = false;\n  errorDataSubs: Subscription;\n  errorData: { message: string; isErrorMessage: boolean; fadingTime: number; };\n\n\n  constructor(private formBuilder: FormBuilder, public authService: AuthenticateService, private router: Router) { }\n\n  ngOnInit() {\n  this.loginForm = this.initLoginForm();\n  this.handleErrorMessage();\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n\nhandleErrorMessage() {\n  this.errorDataSubs = this.authService.getMessageListener()\n  .subscribe(errorData => {\n    this.errorData = errorData;\n    setTimeout(() => {\n      this.errorData = undefined;\n    }, errorData.fadingTime);\n  });\n}\n\n\n  initLoginForm() {\n    return this.formBuilder.group({\n      fgEmail: this.fgEmail = this.formBuilder.group({\n        emailCtrl: ['', [Validators.required, Validators.email]],\n      }),\n\n     fgPassword: this.fgPassword = this.formBuilder.group({\n        passwordCtrl: ['', Validators.required]\n      })\n    });\n  }\n\n  onLogin() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const user: User = {\n      email: this.fgEmail.value.emailCtrl,\n      password: this.fgPassword.value.passwordCtrl\n    };\n    this.isLoading = true;\n    this.authService.login(user);\n    this.isLoading = false;\n}\n\n\nngOnDestroy() {\n  this.errorDataSubs.unsubscribe();\n}\n}\n\n    \n\n    \n        \n\n\n\n\n    \n    \n      \n      \n        \n           E-mail \n          \n            \n            \n                Udfyld E-mail feltet for at logge ind\n              \n              \n                  Din email skal være oprindelig\n                \n          \n          \n           \n            Næste\n            \n        \n      \n    \n      \n        \n           Adgangskode \n          \n            \n\n                \n                    Udfyld adgangskoden feltet for at logge ind\n                  \n          \n \n        \n      \n    \n    \n    \n    \n    \n    \n        Log in\n      \n    \n\n      \n    \n      {{errorData.message}} \n    \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                mat-card{\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 50%;\n    background:rgba(255,255,255,0.9);\n\n}\n\n\nmat-form-field{\nwidth: 100%;\nbackground: transparent;\n\n}\n\nmat-horizontal-stepper{\n    background: transparent;\n}\n\nmat-step{\n    background: transparent;\n}\n\nform{\n    background: transparent;\n}\n\nng-template{\n    background: transparent;\n}\n\n#errorMessage{\n    background-color: rgb(255, 153, 153); \n    color: rgb(255, 255, 255);\n    width: 50%;\n    margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                       E-mail                                                   Udfyld E-mail feltet for at logge ind                                              Din email skal være oprindelig                                                           Næste                                                       Adgangskode                                                           Udfyld adgangskoden feltet for at logge ind                                                                           Log in                          {{errorData.message}}     '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Auth/sign-up/sign-up.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                styleUrls\n                ./sign-up.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                authStatusSub\n                            \n                            \n                                fgEmail\n                            \n                            \n                                fgPassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                messageSubs\n                            \n                            \n                                signupForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initSignupForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Auth/sign-up/sign-up.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initSignupForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitSignupForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/sign-up/sign-up.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/sign-up/sign-up.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/sign-up/sign-up.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignup\n                        \n                        \n                    \n                \n            \n            \n                \nonSignup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Auth/sign-up/sign-up.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authStatusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fgPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/Auth/sign-up/sign-up.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, EmailValidator } from '@angular/forms';\nimport { AuthenticateService } from '../Authenticate.service';\nimport { User } from '../User.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\n\nexport class SignUpComponent implements OnInit, OnDestroy {\n  signupForm: FormGroup;\n  submitted = false;\n  authStatusSub: Subscription;\n  isLoading = false;\n  fgEmail: FormGroup;\n  fgPassword: FormGroup;\n  message: { message: string; isErrorMessage: boolean; fadingTime: number; };\n  messageSubs: Subscription;\n\n  constructor(private formBuilder: FormBuilder, public authService: AuthenticateService) { }\n\n  ngOnInit() {\n\n    this.initSignupForm();\n\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = authStatus;\n    });\n\n    this.messageSubs = this.authService.getMessageListener()\n    .subscribe(messageData => {\n      this.message = messageData;\n      setTimeout(() => {\n        this.message = undefined;\n      }, messageData.fadingTime);\n    });\n\n  }\ninitSignupForm() {\n  this.signupForm = this.formBuilder.group({\n\n    fgEmail: this.fgEmail = this.formBuilder.group({\n      emailCtrl: ['', [Validators.required, Validators.email]],\n    }),\n\n   fgPassword: this.fgPassword = this.formBuilder.group({\n      passwordCtrl: ['', Validators.required]\n    })\n  });\n}\n\n  get f() { return this.signupForm.controls; }\n\n\n  onSignup() {\n\n    if (this.signupForm.invalid) {\n      return;\n    }\n    const user: User = {\n      email: this.fgEmail.value.emailCtrl,\n      password: this.fgPassword.value.passwordCtrl\n    };\n    this.isLoading = true;\n    this.authService.createUser(user);\n    this.isLoading = false;\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n    this.messageSubs.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n  \n    \n    \n      \n         E-mail \n        \n          \n          \n              Udfyld E-mail feltet for at logge ind\n            \n            \n                Din email skal være oprigtig\n              \n        \n        \n         \n          Næste\n          \n      \n    \n  \n    \n      \n         Adgangskode \n        \n          \n\n              \n                  Udfyld adgangskoden feltet for at oprette en bruger\n                \n        \n\n      \n    \n  \n  \n  \n  \n  \n  \n      Log in\n    \n  \n\n\n    \n      {{message.message}} \n    \n  \n    \n      {{message.message}} \n    \n\n\n    \n\n    \n                \n                    ./sign-up.component.css\n                \n                mat-card{\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 50%;\n    background:rgba(255,255,255,0.9);\n\n}\n\nmat-spinner{\n    margin: auto;\n}\n\n\nmat-form-field{\nwidth: 100%;\nbackground: transparent;\n\n}\n\nmat-horizontal-stepper{\n    background: transparent;\n}\n\nmat-step{\n    background: transparent;\n}\n\nform{\n    background: transparent;\n}\n\nng-template{\n    background: transparent;\n}\n\n#errorMessage{\n    background-color: rgb(255, 153, 153);\n    color: rgb(255, 255, 255);  \n    width: 50%;\n    margin: auto;\n}\n\n#successMessage{\n    background-color: rgb(196, 255, 196);\n    color: white;\n    width: 50%;\n    margin: auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                           E-mail                                           Udfyld E-mail feltet for at logge ind                                        Din email skal være oprigtig                                                 Næste                                         Adgangskode                                                   Udfyld adgangskoden feltet for at oprette en bruger                                                    Log in                {{message.message}}                 {{message.message}}     '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartSiteComponent.html":{"url":"components/StartSiteComponent.html","title":"component - StartSiteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StartSiteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/start-site/start-site.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-start-site\n            \n\n            \n                styleUrls\n                ./start-site.component.css\n            \n\n\n\n            \n                templateUrl\n                ./start-site.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onReadMore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/start-site/start-site.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-site/start-site.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReadMore\n                        \n                        \n                    \n                \n            \n            \n                \nonReadMore(sectionTwo: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-site/start-site.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectionTwo\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start-site',\n  templateUrl: './start-site.component.html',\n  styleUrls: ['./start-site.component.css']\n})\nexport class StartSiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onReadMore(sectionTwo: HTMLElement) {\n   sectionTwo.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\n}\n}\n\n    \n\n    \n        \n\n\n     Genforeningen 2020\n     Hvad er genforenignen 2020\n    \n        Find arrangementer tæt på dig\n        \n        sentiment_very_satisfied\n        by / postnummer\n      \n\n-->\n  \n    \n       Genforeningen 2020\n       Sønderborg Kommune\n       I 2020 er det 100 år siden, at Sønderjylland blev genforenet med Danmark.\n        Jubilæumsåret vil blive markeret med events og aktiviteter over hele landet.\n        Dit arrangement kan også blive en del af programmet og være med til at skabe en værdig,\n        festlig og synlig markering af jubilæet. \n        Vi ønsker at samle et attraktivt,\n        synligt og sammenhængende program af berigende oplevelser i hele Danmark både lokalt,\n        regionalt og nationalt. Jubilæumsåret begynder officielt med et åbningsarrangement 10. januar 2020 i København.\n        Også dagene for de to afstemninger i februar og marts vil få en særlig plads i programmet.\n      \n       Læs Mere \n      \n        \n           \n        \n        \n           \n\n        \n      \n    \n  \n\n\n\n  \n     Oplevelser over hele landet\n    \n      Begivenhederne kulminerer 10.-12. juli 2020. Her markerer vi 100-året for de historiske dage i 1920,\n      hvor Kong Christian 10. red over grænsen til Sønderjylland, der nu var genforenet med Danmark.\n      Formålet med Genforeningen 2020 er at styrke bevidstheden om genforeningens skelsættende politiske\n      og kulturelle betydning for hele det danske samfund, for vores nationale selvforståelse og for venskabet til\n      Tyskland.\n      Ambitionen er også at øge kendskabet til det historiske forløb, hvor Sønderjylland blev en del af Danmark og sætte\n      fokus på det europæiske perspektiv i det dansk-tyske grænseland. Samtidig skal markeringen bidrage til en positiv\n      og nutidig profilering af det sydlige Danmark.I 2020 fejrer vi også det gode naboskab til Tyskland,\n      og året er udpeget til dansk-tysk venskabsår.\n    \n    \n      \n         Se Arrangementer \n      \n      \n         Tilmed Arrangement \n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./start-site.component.css\n                \n                html {\n  scroll-behavior: smooth;\n  height: 100%;\n}\n\n#firstSection {\n  margin-top: 11rem;\n}\n\nmat-input {\n  color:white;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: white !important;\n }\n\nmat-form-field{\n  margin: auto;\n  width: 80%;\n  color:white;\n  text-align: center;\n}\n\n ::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: white !important;\n} \n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: white !important;;\n }\n.section {\n  color: white;\n  height: 1000px;\n  text-align: center;\n  width: 80%;\n  margin: auto;\n}\n#secondSection{\n    padding:250px;\n}\np {\n  font-style: normal;\n  font-family: \"Courier New\", Courier, monospac;\n  font-size: 20px;\n  color: white;\n}\nh3 {\n  font-style: normal;\n  font-family: \"Courier New\", Courier, monospac;\n}\n\nh1 {\n  font-style: italic;\n  font-family: \"Courier New\", Courier, monospac;\n}\n\nli {\n  display: inline;\n  text-decoration: none;\n  align-content: center;\n  margin: auto;\n  margin-right: 2rem;\n}\nli:hover{\n    color:royalblue;\n}\n\nbutton , a {\n  font-size: 18px;\n  background-color: transparent;\n  border-color: transparent;\n  color: white;\n  font-style: normal;\n  font-family: \"Courier New\", Courier, monospac;\n}\n#secondSection{\n    width: 80%;\n}\nbutton:hover {\n  color: royalblue;\n}\na:hover{\n    color: royalblue;\n    text-decoration: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Genforeningen 2020     Hvad er genforenignen 2020            Find arrangementer tæt på dig                sentiment_very_satisfied        by / postnummer      -->             Genforeningen 2020       Sønderborg Kommune       I 2020 er det 100 år siden, at Sønderjylland blev genforenet med Danmark.        Jubilæumsåret vil blive markeret med events og aktiviteter over hele landet.        Dit arrangement kan også blive en del af programmet og være med til at skabe en værdig,        festlig og synlig markering af jubilæet.         Vi ønsker at samle et attraktivt,        synligt og sammenhængende program af berigende oplevelser i hele Danmark både lokalt,        regionalt og nationalt. Jubilæumsåret begynder officielt med et åbningsarrangement 10. januar 2020 i København.        Også dagene for de to afstemninger i februar og marts vil få en særlig plads i programmet.             Læs Mere                                                                                Oplevelser over hele landet          Begivenhederne kulminerer 10.-12. juli 2020. Her markerer vi 100-året for de historiske dage i 1920,      hvor Kong Christian 10. red over grænsen til Sønderjylland, der nu var genforenet med Danmark.      Formålet med Genforeningen 2020 er at styrke bevidstheden om genforeningens skelsættende politiske      og kulturelle betydning for hele det danske samfund, for vores nationale selvforståelse og for venskabet til      Tyskland.      Ambitionen er også at øge kendskabet til det historiske forløb, hvor Sønderjylland blev en del af Danmark og sætte      fokus på det europæiske perspektiv i det dansk-tyske grænseland. Samtidig skal markeringen bidrage til en positiv      og nutidig profilering af det sydlige Danmark.I 2020 fejrer vi også det gode naboskab til Tyskland,      og året er udpeget til dansk-tysk venskabsår.                       Se Arrangementer                      Tilmed Arrangement             '\n    var COMPONENTS = [{'name': 'AddressFormComponent', 'selector': 'app-address-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ContactPersonFormComponent', 'selector': 'app-contact-person-form'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'EditUsersComponent', 'selector': 'app-edit-users'},{'name': 'EmailDialogComponent', 'selector': 'app-email-dialog'},{'name': 'EventDialogComponent', 'selector': 'app-event-dialog'},{'name': 'EventFormComponent', 'selector': 'app-event-form'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'EventListTableComponent', 'selector': 'app-event-list-table'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'StartSiteComponent', 'selector': 'app-start-site'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartSiteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Auth/User.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    email: string;\n    password: string;\n}\n\nexport interface UserWithID {\n   _id: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithID.html":{"url":"interfaces/UserWithID.html","title":"interface - UserWithID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserWithID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Auth/User.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    email: string;\n    password: string;\n}\n\nexport interface UserWithID {\n   _id: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Auth/Authenticate.service.ts\n            \n            injectable\n            AuthenticateService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/Auth/User.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Auth/User.model.ts\n            \n            interface\n            UserWithID\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Auth/auth.guard.ts\n            \n            guard\n            AuthGard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Auth/change-password/change-password.component.ts\n            \n            component\n            ChangePasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/Auth/edit-users/edit-users.component.ts\n            \n            component\n            EditUsersComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/Auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/Auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/Auth/token.middleware.ts\n            \n            function\n            tokenGetterFromStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Event/IAddress.interface.ts\n            \n            interface\n            IAddress\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Event/IContactPerson.interface.ts\n            \n            interface\n            IContactPerson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Event/IEvent.interface.ts\n            \n            interface\n            IEvent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Event/IMyEventRoot.interface.ts\n            \n            interface\n            IMyEventRoot\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/Event/address-form/address-form.component.ts\n            \n            component\n            AddressFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Event/contact-person-form/contact-person-form.component.ts\n            \n            component\n            ContactPersonFormComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/Event/create-event/create-event.component.ts\n            \n            component\n            CreateEventComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/Event/email-dialog/email-dialog.component.ts\n            \n            component\n            EmailDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Event/event-dialog/event-dialog.component.ts\n            \n            component\n            EventDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Event/event-form/event-form.component.ts\n            \n            component\n            EventFormComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/Event/event-form/event-form.component.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Event/event-list-table/event-list-table.component.ts\n            \n            component\n            EventListTableComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/Event/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/Event/event-list/event-list.component.ts\n            \n            function\n            formatDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Event/event-list/event-list.component.ts\n            \n            function\n            getMinutesFromDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Event/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/Event/mime-type.validator.ts\n            \n            variable\n            mimeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/helper/extractEventFromRoot.ts\n            \n            function\n            extractEventFromRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/start-site/start-site.component.ts\n            \n            component\n            StartSiteComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ~7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @auth0/angular-jwt : ^2.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^4.1.3\n        \n            angular-bootstrap-md : ^7.5.3\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jsonwebtoken : ^8.5.1\n        \n            jwt-decode : ^2.2.0\n        \n            md2-datepicker : 0.0.1-alpha.1\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-bootstrap : ^4.2.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            extractEventFromRoot   (src/.../extractEventFromRoot.ts)\n                        \n                        \n                            formatDate   (src/.../event-list.component.ts)\n                        \n                        \n                            getMinutesFromDate   (src/.../event-list.component.ts)\n                        \n                        \n                            tokenGetterFromStorage   (src/.../token.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/helper/extractEventFromRoot.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractEventFromRoot\n                        \n                        \n                    \n                \n            \n            \n                \nextractEventFromRoot(rootEvent)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rootEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/Event/event-list/event-list.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(dateString)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMinutesFromDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetMinutesFromDate(number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/Auth/token.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            tokenGetterFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \ntokenGetterFromStorage()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAdamBozhiProj\nThis project was generated with Angular CLI version 7.3.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_EventModule\n\n\n\n\nAddressFormComponent\n\nAddressFormComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressFormComponent->AppModule\n\n\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAddressFormComponent->EventModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nContactPersonFormComponent\n\nContactPersonFormComponent\n\nAppModule -->\n\nContactPersonFormComponent->AppModule\n\n\n\nEventModule -->\n\nContactPersonFormComponent->EventModule\n\n\n\n\n\nCreateEventComponent\n\nCreateEventComponent\n\nAppModule -->\n\nCreateEventComponent->AppModule\n\n\n\nEventModule -->\n\nCreateEventComponent->EventModule\n\n\n\n\n\nEditUsersComponent\n\nEditUsersComponent\n\nAppModule -->\n\nEditUsersComponent->AppModule\n\n\n\n\n\nEmailDialogComponent\n\nEmailDialogComponent\n\nAppModule -->\n\nEmailDialogComponent->AppModule\n\n\n\n\n\nEventDialogComponent\n\nEventDialogComponent\n\nAppModule -->\n\nEventDialogComponent->AppModule\n\n\n\nEventModule -->\n\nEventDialogComponent->EventModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nAppModule -->\n\nEventFormComponent->AppModule\n\n\n\nEventModule -->\n\nEventFormComponent->EventModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nAppModule -->\n\nEventListComponent->AppModule\n\n\n\nEventModule -->\n\nEventListComponent->EventModule\n\n\n\n\n\nEventListTableComponent\n\nEventListTableComponent\n\nAppModule -->\n\nEventListTableComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nStartSiteComponent\n\nStartSiteComponent\n\nAppModule -->\n\nStartSiteComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterialModule\n\nAngularMaterialModule\n\nAppModule -->\n\nAngularMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mimeType   (src/.../mime-type.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/Event/mime-type.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  control: AbstractControl\n): Promise | Observable => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
